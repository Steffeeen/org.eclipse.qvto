package org.eclipse.qvto.examples.xtext.imperativeocl.ui.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.qvto.examples.xtext.imperativeocl.services.ImperativeOCLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalImperativeOCLParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_SINGLE_QUOTED_STRING", "RULE_DOUBLE_QUOTED_STRING", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'forEach'", "'xselect'", "'xselectOne'", "'xcollectselect'", "'xcollectselectOne'", "'-'", "'not'", "'*'", "'/'", "'+'", "'>'", "'<'", "'>='", "'<='", "'='", "'<>'", "'and'", "'or'", "'xor'", "'implies'", "'.'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'|?'", "'?'", "'error'", "'warning'", "'fatal'", "':='", "'::='", "'+='", "'List'", "'('", "')'", "'Dict'", "','", "'assert'", "'with'", "'default'", "'break'", "'except'", "'{'", "'}'", "':'", "'compute'", "'continue'", "'do'", "';'", "'|'", "'new'", "'@'", "'log'", "'when'", "'raise'", "'return'", "'endif'", "'elif'", "'else'", "'switch'", "'case'", "'try'", "'var'", "'while'", "'..'", "'++'", "'Lambda'", "'<-'", "'invalid'", "'null'", "'pre'", "'['", "']'", "'in'", "'if'", "'then'", "'elseif'", "'let'", "'self'", "'::'", "'extends'", "'&&'", "'forOne'", "'xcollect'", "'true'", "'false'", "'|1'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_SINGLE_QUOTED_STRING=5;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=6;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=8;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=10;
    public static final int T__19=19;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=9;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=11;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=7;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=14;
    public static final int RULE_ANY_OTHER=15;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalImperativeOCLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalImperativeOCLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalImperativeOCLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalImperativeOCL.g"; }



     	private ImperativeOCLGrammarAccess grammarAccess;

        public void setGrammarAccess(ImperativeOCLGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }

        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }

        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleGrammmarCS"
    // InternalImperativeOCL.g:61:1: entryRuleGrammmarCS : ruleGrammmarCS EOF ;
    public final void entryRuleGrammmarCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:62:1: ( ruleGrammmarCS EOF )
            // InternalImperativeOCL.g:63:1: ruleGrammmarCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGrammmarCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleGrammmarCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGrammmarCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGrammmarCS"


    // $ANTLR start "ruleGrammmarCS"
    // InternalImperativeOCL.g:70:1: ruleGrammmarCS : ( ruleImperativeOCLExpCS ) ;
    public final void ruleGrammmarCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:74:2: ( ( ruleImperativeOCLExpCS ) )
            // InternalImperativeOCL.g:75:1: ( ruleImperativeOCLExpCS )
            {
            // InternalImperativeOCL.g:75:1: ( ruleImperativeOCLExpCS )
            // InternalImperativeOCL.g:76:1: ruleImperativeOCLExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGrammmarCSAccess().getImperativeOCLExpCSParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleImperativeOCLExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGrammmarCSAccess().getImperativeOCLExpCSParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGrammmarCS"


    // $ANTLR start "entryRuleImperativeOCLExpCS"
    // InternalImperativeOCL.g:89:1: entryRuleImperativeOCLExpCS : ruleImperativeOCLExpCS EOF ;
    public final void entryRuleImperativeOCLExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:90:1: ( ruleImperativeOCLExpCS EOF )
            // InternalImperativeOCL.g:91:1: ruleImperativeOCLExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeOCLExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleImperativeOCLExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeOCLExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImperativeOCLExpCS"


    // $ANTLR start "ruleImperativeOCLExpCS"
    // InternalImperativeOCL.g:98:1: ruleImperativeOCLExpCS : ( ruleExpCS ) ;
    public final void ruleImperativeOCLExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:102:2: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:103:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:103:1: ( ruleExpCS )
            // InternalImperativeOCL.g:104:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeOCLExpCSAccess().getExpCSParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeOCLExpCSAccess().getExpCSParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImperativeOCLExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalImperativeOCL.g:117:1: entryRuleTypeLiteralCS : ruleTypeLiteralCS EOF ;
    public final void entryRuleTypeLiteralCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:118:1: ( ruleTypeLiteralCS EOF )
            // InternalImperativeOCL.g:119:1: ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalImperativeOCL.g:126:1: ruleTypeLiteralCS : ( ( rule__TypeLiteralCS__Alternatives ) ) ;
    public final void ruleTypeLiteralCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:130:2: ( ( ( rule__TypeLiteralCS__Alternatives ) ) )
            // InternalImperativeOCL.g:131:1: ( ( rule__TypeLiteralCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:131:1: ( ( rule__TypeLiteralCS__Alternatives ) )
            // InternalImperativeOCL.g:132:1: ( rule__TypeLiteralCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:133:1: ( rule__TypeLiteralCS__Alternatives )
            // InternalImperativeOCL.g:133:2: rule__TypeLiteralCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeLiteralCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleListTypeCS"
    // InternalImperativeOCL.g:145:1: entryRuleListTypeCS : ruleListTypeCS EOF ;
    public final void entryRuleListTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:146:1: ( ruleListTypeCS EOF )
            // InternalImperativeOCL.g:147:1: ruleListTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleListTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleListTypeCS"


    // $ANTLR start "ruleListTypeCS"
    // InternalImperativeOCL.g:154:1: ruleListTypeCS : ( ( rule__ListTypeCS__Group__0 ) ) ;
    public final void ruleListTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:158:2: ( ( ( rule__ListTypeCS__Group__0 ) ) )
            // InternalImperativeOCL.g:159:1: ( ( rule__ListTypeCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:159:1: ( ( rule__ListTypeCS__Group__0 ) )
            // InternalImperativeOCL.g:160:1: ( rule__ListTypeCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:161:1: ( rule__ListTypeCS__Group__0 )
            // InternalImperativeOCL.g:161:2: rule__ListTypeCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleListTypeCS"


    // $ANTLR start "entryRuleDictTypeCS"
    // InternalImperativeOCL.g:173:1: entryRuleDictTypeCS : ruleDictTypeCS EOF ;
    public final void entryRuleDictTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:174:1: ( ruleDictTypeCS EOF )
            // InternalImperativeOCL.g:175:1: ruleDictTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDictTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDictTypeCS"


    // $ANTLR start "ruleDictTypeCS"
    // InternalImperativeOCL.g:182:1: ruleDictTypeCS : ( ( rule__DictTypeCS__Group__0 ) ) ;
    public final void ruleDictTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:186:2: ( ( ( rule__DictTypeCS__Group__0 ) ) )
            // InternalImperativeOCL.g:187:1: ( ( rule__DictTypeCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:187:1: ( ( rule__DictTypeCS__Group__0 ) )
            // InternalImperativeOCL.g:188:1: ( rule__DictTypeCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:189:1: ( rule__DictTypeCS__Group__0 )
            // InternalImperativeOCL.g:189:2: rule__DictTypeCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDictTypeCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalImperativeOCL.g:201:1: entryRulePrimaryExpCS : rulePrimaryExpCS EOF ;
    public final void entryRulePrimaryExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:202:1: ( rulePrimaryExpCS EOF )
            // InternalImperativeOCL.g:203:1: rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalImperativeOCL.g:210:1: rulePrimaryExpCS : ( ( rule__PrimaryExpCS__Alternatives ) ) ;
    public final void rulePrimaryExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:214:2: ( ( ( rule__PrimaryExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:215:1: ( ( rule__PrimaryExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:215:1: ( ( rule__PrimaryExpCS__Alternatives ) )
            // InternalImperativeOCL.g:216:1: ( rule__PrimaryExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:217:1: ( rule__PrimaryExpCS__Alternatives )
            // InternalImperativeOCL.g:217:2: rule__PrimaryExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimaryExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleImperativeExpCS"
    // InternalImperativeOCL.g:229:1: entryRuleImperativeExpCS : ruleImperativeExpCS EOF ;
    public final void entryRuleImperativeExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:230:1: ( ruleImperativeExpCS EOF )
            // InternalImperativeOCL.g:231:1: ruleImperativeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleImperativeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImperativeExpCS"


    // $ANTLR start "ruleImperativeExpCS"
    // InternalImperativeOCL.g:238:1: ruleImperativeExpCS : ( ( rule__ImperativeExpCS__Alternatives ) ) ;
    public final void ruleImperativeExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:242:2: ( ( ( rule__ImperativeExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:243:1: ( ( rule__ImperativeExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:243:1: ( ( rule__ImperativeExpCS__Alternatives ) )
            // InternalImperativeOCL.g:244:1: ( rule__ImperativeExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:245:1: ( rule__ImperativeExpCS__Alternatives )
            // InternalImperativeOCL.g:245:2: rule__ImperativeExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImperativeExpCS"


    // $ANTLR start "entryRuleAssertExpCS"
    // InternalImperativeOCL.g:257:1: entryRuleAssertExpCS : ruleAssertExpCS EOF ;
    public final void entryRuleAssertExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:258:1: ( ruleAssertExpCS EOF )
            // InternalImperativeOCL.g:259:1: ruleAssertExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssertExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssertExpCS"


    // $ANTLR start "ruleAssertExpCS"
    // InternalImperativeOCL.g:266:1: ruleAssertExpCS : ( ( rule__AssertExpCS__Group__0 ) ) ;
    public final void ruleAssertExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:270:2: ( ( ( rule__AssertExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:271:1: ( ( rule__AssertExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:271:1: ( ( rule__AssertExpCS__Group__0 ) )
            // InternalImperativeOCL.g:272:1: ( rule__AssertExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:273:1: ( rule__AssertExpCS__Group__0 )
            // InternalImperativeOCL.g:273:2: rule__AssertExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssertExpCS"


    // $ANTLR start "entryRuleAssignExpCS"
    // InternalImperativeOCL.g:285:1: entryRuleAssignExpCS : ruleAssignExpCS EOF ;
    public final void entryRuleAssignExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:286:1: ( ruleAssignExpCS EOF )
            // InternalImperativeOCL.g:287:1: ruleAssignExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignExpCS"


    // $ANTLR start "ruleAssignExpCS"
    // InternalImperativeOCL.g:294:1: ruleAssignExpCS : ( ( rule__AssignExpCS__Group__0 ) ) ;
    public final void ruleAssignExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:298:2: ( ( ( rule__AssignExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:299:1: ( ( rule__AssignExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:299:1: ( ( rule__AssignExpCS__Group__0 ) )
            // InternalImperativeOCL.g:300:1: ( rule__AssignExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:301:1: ( rule__AssignExpCS__Group__0 )
            // InternalImperativeOCL.g:301:2: rule__AssignExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignExpCS"


    // $ANTLR start "entryRuleBreakExpCS"
    // InternalImperativeOCL.g:313:1: entryRuleBreakExpCS : ruleBreakExpCS EOF ;
    public final void entryRuleBreakExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:314:1: ( ruleBreakExpCS EOF )
            // InternalImperativeOCL.g:315:1: ruleBreakExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBreakExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBreakExpCS"


    // $ANTLR start "ruleBreakExpCS"
    // InternalImperativeOCL.g:322:1: ruleBreakExpCS : ( ( rule__BreakExpCS__Group__0 ) ) ;
    public final void ruleBreakExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:326:2: ( ( ( rule__BreakExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:327:1: ( ( rule__BreakExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:327:1: ( ( rule__BreakExpCS__Group__0 ) )
            // InternalImperativeOCL.g:328:1: ( rule__BreakExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:329:1: ( rule__BreakExpCS__Group__0 )
            // InternalImperativeOCL.g:329:2: rule__BreakExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BreakExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBreakExpCS"


    // $ANTLR start "entryRuleCatchExpCS"
    // InternalImperativeOCL.g:341:1: entryRuleCatchExpCS : ruleCatchExpCS EOF ;
    public final void entryRuleCatchExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:342:1: ( ruleCatchExpCS EOF )
            // InternalImperativeOCL.g:343:1: ruleCatchExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCatchExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCatchExpCS"


    // $ANTLR start "ruleCatchExpCS"
    // InternalImperativeOCL.g:350:1: ruleCatchExpCS : ( ( rule__CatchExpCS__Group__0 ) ) ;
    public final void ruleCatchExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:354:2: ( ( ( rule__CatchExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:355:1: ( ( rule__CatchExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:355:1: ( ( rule__CatchExpCS__Group__0 ) )
            // InternalImperativeOCL.g:356:1: ( rule__CatchExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:357:1: ( rule__CatchExpCS__Group__0 )
            // InternalImperativeOCL.g:357:2: rule__CatchExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCatchExpCS"


    // $ANTLR start "entryRuleComputeExpCS"
    // InternalImperativeOCL.g:369:1: entryRuleComputeExpCS : ruleComputeExpCS EOF ;
    public final void entryRuleComputeExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:370:1: ( ruleComputeExpCS EOF )
            // InternalImperativeOCL.g:371:1: ruleComputeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComputeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComputeExpCS"


    // $ANTLR start "ruleComputeExpCS"
    // InternalImperativeOCL.g:378:1: ruleComputeExpCS : ( ( rule__ComputeExpCS__Group__0 ) ) ;
    public final void ruleComputeExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:382:2: ( ( ( rule__ComputeExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:383:1: ( ( rule__ComputeExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:383:1: ( ( rule__ComputeExpCS__Group__0 ) )
            // InternalImperativeOCL.g:384:1: ( rule__ComputeExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:385:1: ( rule__ComputeExpCS__Group__0 )
            // InternalImperativeOCL.g:385:2: rule__ComputeExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComputeExpCS"


    // $ANTLR start "entryRuleContinueExpCS"
    // InternalImperativeOCL.g:397:1: entryRuleContinueExpCS : ruleContinueExpCS EOF ;
    public final void entryRuleContinueExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:398:1: ( ruleContinueExpCS EOF )
            // InternalImperativeOCL.g:399:1: ruleContinueExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleContinueExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleContinueExpCS"


    // $ANTLR start "ruleContinueExpCS"
    // InternalImperativeOCL.g:406:1: ruleContinueExpCS : ( ( rule__ContinueExpCS__Group__0 ) ) ;
    public final void ruleContinueExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:410:2: ( ( ( rule__ContinueExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:411:1: ( ( rule__ContinueExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:411:1: ( ( rule__ContinueExpCS__Group__0 ) )
            // InternalImperativeOCL.g:412:1: ( rule__ContinueExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:413:1: ( rule__ContinueExpCS__Group__0 )
            // InternalImperativeOCL.g:413:2: rule__ContinueExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ContinueExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleContinueExpCS"


    // $ANTLR start "entryRuleDictLiteralExpCS"
    // InternalImperativeOCL.g:425:1: entryRuleDictLiteralExpCS : ruleDictLiteralExpCS EOF ;
    public final void entryRuleDictLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:426:1: ( ruleDictLiteralExpCS EOF )
            // InternalImperativeOCL.g:427:1: ruleDictLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDictLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDictLiteralExpCS"


    // $ANTLR start "ruleDictLiteralExpCS"
    // InternalImperativeOCL.g:434:1: ruleDictLiteralExpCS : ( ( rule__DictLiteralExpCS__Group__0 ) ) ;
    public final void ruleDictLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:438:2: ( ( ( rule__DictLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:439:1: ( ( rule__DictLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:439:1: ( ( rule__DictLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:440:1: ( rule__DictLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:441:1: ( rule__DictLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:441:2: rule__DictLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDictLiteralExpCS"


    // $ANTLR start "entryRuleDictLiteralPartCS"
    // InternalImperativeOCL.g:453:1: entryRuleDictLiteralPartCS : ruleDictLiteralPartCS EOF ;
    public final void entryRuleDictLiteralPartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:454:1: ( ruleDictLiteralPartCS EOF )
            // InternalImperativeOCL.g:455:1: ruleDictLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDictLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDictLiteralPartCS"


    // $ANTLR start "ruleDictLiteralPartCS"
    // InternalImperativeOCL.g:462:1: ruleDictLiteralPartCS : ( ( rule__DictLiteralPartCS__Group__0 ) ) ;
    public final void ruleDictLiteralPartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:466:2: ( ( ( rule__DictLiteralPartCS__Group__0 ) ) )
            // InternalImperativeOCL.g:467:1: ( ( rule__DictLiteralPartCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:467:1: ( ( rule__DictLiteralPartCS__Group__0 ) )
            // InternalImperativeOCL.g:468:1: ( rule__DictLiteralPartCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:469:1: ( rule__DictLiteralPartCS__Group__0 )
            // InternalImperativeOCL.g:469:2: rule__DictLiteralPartCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDictLiteralPartCS"


    // $ANTLR start "entryRuleExpressionBlockCS"
    // InternalImperativeOCL.g:481:1: entryRuleExpressionBlockCS : ruleExpressionBlockCS EOF ;
    public final void entryRuleExpressionBlockCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:482:1: ( ruleExpressionBlockCS EOF )
            // InternalImperativeOCL.g:483:1: ruleExpressionBlockCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionBlockCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionBlockCS"


    // $ANTLR start "ruleExpressionBlockCS"
    // InternalImperativeOCL.g:490:1: ruleExpressionBlockCS : ( ( rule__ExpressionBlockCS__Group__0 ) ) ;
    public final void ruleExpressionBlockCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:494:2: ( ( ( rule__ExpressionBlockCS__Group__0 ) ) )
            // InternalImperativeOCL.g:495:1: ( ( rule__ExpressionBlockCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:495:1: ( ( rule__ExpressionBlockCS__Group__0 ) )
            // InternalImperativeOCL.g:496:1: ( rule__ExpressionBlockCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:497:1: ( rule__ExpressionBlockCS__Group__0 )
            // InternalImperativeOCL.g:497:2: rule__ExpressionBlockCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionBlockCS"


    // $ANTLR start "entryRuleExpressionStatementCS"
    // InternalImperativeOCL.g:509:1: entryRuleExpressionStatementCS : ruleExpressionStatementCS EOF ;
    public final void entryRuleExpressionStatementCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:510:1: ( ruleExpressionStatementCS EOF )
            // InternalImperativeOCL.g:511:1: ruleExpressionStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionStatementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStatementCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionStatementCS"


    // $ANTLR start "ruleExpressionStatementCS"
    // InternalImperativeOCL.g:518:1: ruleExpressionStatementCS : ( ( rule__ExpressionStatementCS__Group__0 ) ) ;
    public final void ruleExpressionStatementCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:522:2: ( ( ( rule__ExpressionStatementCS__Group__0 ) ) )
            // InternalImperativeOCL.g:523:1: ( ( rule__ExpressionStatementCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:523:1: ( ( rule__ExpressionStatementCS__Group__0 ) )
            // InternalImperativeOCL.g:524:1: ( rule__ExpressionStatementCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStatementCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:525:1: ( rule__ExpressionStatementCS__Group__0 )
            // InternalImperativeOCL.g:525:2: rule__ExpressionStatementCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionStatementCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStatementCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionStatementCS"


    // $ANTLR start "entryRuleForExpCS"
    // InternalImperativeOCL.g:539:1: entryRuleForExpCS : ruleForExpCS EOF ;
    public final void entryRuleForExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:540:1: ( ruleForExpCS EOF )
            // InternalImperativeOCL.g:541:1: ruleForExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleForExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleForExpCS"


    // $ANTLR start "ruleForExpCS"
    // InternalImperativeOCL.g:548:1: ruleForExpCS : ( ( rule__ForExpCS__Group__0 ) ) ;
    public final void ruleForExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:552:2: ( ( ( rule__ForExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:553:1: ( ( rule__ForExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:553:1: ( ( rule__ForExpCS__Group__0 ) )
            // InternalImperativeOCL.g:554:1: ( rule__ForExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:555:1: ( rule__ForExpCS__Group__0 )
            // InternalImperativeOCL.g:555:2: rule__ForExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleForExpCS"


    // $ANTLR start "entryRuleImperativeIterateExpCS"
    // InternalImperativeOCL.g:567:1: entryRuleImperativeIterateExpCS : ruleImperativeIterateExpCS EOF ;
    public final void entryRuleImperativeIterateExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:568:1: ( ruleImperativeIterateExpCS EOF )
            // InternalImperativeOCL.g:569:1: ruleImperativeIterateExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleImperativeIterateExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImperativeIterateExpCS"


    // $ANTLR start "ruleImperativeIterateExpCS"
    // InternalImperativeOCL.g:576:1: ruleImperativeIterateExpCS : ( ( rule__ImperativeIterateExpCS__Alternatives ) ) ;
    public final void ruleImperativeIterateExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:580:2: ( ( ( rule__ImperativeIterateExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:581:1: ( ( rule__ImperativeIterateExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:581:1: ( ( rule__ImperativeIterateExpCS__Alternatives ) )
            // InternalImperativeOCL.g:582:1: ( rule__ImperativeIterateExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:583:1: ( rule__ImperativeIterateExpCS__Alternatives )
            // InternalImperativeOCL.g:583:2: rule__ImperativeIterateExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImperativeIterateExpCS"


    // $ANTLR start "entryRuleInstantiationExpCS"
    // InternalImperativeOCL.g:595:1: entryRuleInstantiationExpCS : ruleInstantiationExpCS EOF ;
    public final void entryRuleInstantiationExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:596:1: ( ruleInstantiationExpCS EOF )
            // InternalImperativeOCL.g:597:1: ruleInstantiationExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInstantiationExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstantiationExpCS"


    // $ANTLR start "ruleInstantiationExpCS"
    // InternalImperativeOCL.g:604:1: ruleInstantiationExpCS : ( ( rule__InstantiationExpCS__Group__0 ) ) ;
    public final void ruleInstantiationExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:608:2: ( ( ( rule__InstantiationExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:609:1: ( ( rule__InstantiationExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:609:1: ( ( rule__InstantiationExpCS__Group__0 ) )
            // InternalImperativeOCL.g:610:1: ( rule__InstantiationExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:611:1: ( rule__InstantiationExpCS__Group__0 )
            // InternalImperativeOCL.g:611:2: rule__InstantiationExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstantiationExpCS"


    // $ANTLR start "entryRuleListLiteralExpCS"
    // InternalImperativeOCL.g:623:1: entryRuleListLiteralExpCS : ruleListLiteralExpCS EOF ;
    public final void entryRuleListLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:624:1: ( ruleListLiteralExpCS EOF )
            // InternalImperativeOCL.g:625:1: ruleListLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleListLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleListLiteralExpCS"


    // $ANTLR start "ruleListLiteralExpCS"
    // InternalImperativeOCL.g:632:1: ruleListLiteralExpCS : ( ( rule__ListLiteralExpCS__Group__0 ) ) ;
    public final void ruleListLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:636:2: ( ( ( rule__ListLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:637:1: ( ( rule__ListLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:637:1: ( ( rule__ListLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:638:1: ( rule__ListLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:639:1: ( rule__ListLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:639:2: rule__ListLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleListLiteralExpCS"


    // $ANTLR start "entryRuleLogExpCS"
    // InternalImperativeOCL.g:651:1: entryRuleLogExpCS : ruleLogExpCS EOF ;
    public final void entryRuleLogExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:652:1: ( ruleLogExpCS EOF )
            // InternalImperativeOCL.g:653:1: ruleLogExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLogExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogExpCS"


    // $ANTLR start "ruleLogExpCS"
    // InternalImperativeOCL.g:660:1: ruleLogExpCS : ( ( rule__LogExpCS__Group__0 ) ) ;
    public final void ruleLogExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:664:2: ( ( ( rule__LogExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:665:1: ( ( rule__LogExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:665:1: ( ( rule__LogExpCS__Group__0 ) )
            // InternalImperativeOCL.g:666:1: ( rule__LogExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:667:1: ( rule__LogExpCS__Group__0 )
            // InternalImperativeOCL.g:667:2: rule__LogExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogExpCS"


    // $ANTLR start "entryRuleRaiseExpCS"
    // InternalImperativeOCL.g:679:1: entryRuleRaiseExpCS : ruleRaiseExpCS EOF ;
    public final void entryRuleRaiseExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:680:1: ( ruleRaiseExpCS EOF )
            // InternalImperativeOCL.g:681:1: ruleRaiseExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRaiseExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRaiseExpCS"


    // $ANTLR start "ruleRaiseExpCS"
    // InternalImperativeOCL.g:688:1: ruleRaiseExpCS : ( ( rule__RaiseExpCS__Group__0 ) ) ;
    public final void ruleRaiseExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:692:2: ( ( ( rule__RaiseExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:693:1: ( ( rule__RaiseExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:693:1: ( ( rule__RaiseExpCS__Group__0 ) )
            // InternalImperativeOCL.g:694:1: ( rule__RaiseExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:695:1: ( rule__RaiseExpCS__Group__0 )
            // InternalImperativeOCL.g:695:2: rule__RaiseExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRaiseExpCS"


    // $ANTLR start "entryRuleReturnExpCS"
    // InternalImperativeOCL.g:707:1: entryRuleReturnExpCS : ruleReturnExpCS EOF ;
    public final void entryRuleReturnExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:708:1: ( ruleReturnExpCS EOF )
            // InternalImperativeOCL.g:709:1: ruleReturnExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleReturnExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReturnExpCS"


    // $ANTLR start "ruleReturnExpCS"
    // InternalImperativeOCL.g:716:1: ruleReturnExpCS : ( ( rule__ReturnExpCS__Group__0 ) ) ;
    public final void ruleReturnExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:720:2: ( ( ( rule__ReturnExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:721:1: ( ( rule__ReturnExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:721:1: ( ( rule__ReturnExpCS__Group__0 ) )
            // InternalImperativeOCL.g:722:1: ( rule__ReturnExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:723:1: ( rule__ReturnExpCS__Group__0 )
            // InternalImperativeOCL.g:723:2: rule__ReturnExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReturnExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReturnExpCS"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalImperativeOCL.g:735:1: entryRuleStringLiteral : ruleStringLiteral EOF ;
    public final void entryRuleStringLiteral() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:736:1: ( ruleStringLiteral EOF )
            // InternalImperativeOCL.g:737:1: ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalImperativeOCL.g:744:1: ruleStringLiteral : ( ( rule__StringLiteral__Alternatives ) ) ;
    public final void ruleStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:748:2: ( ( ( rule__StringLiteral__Alternatives ) ) )
            // InternalImperativeOCL.g:749:1: ( ( rule__StringLiteral__Alternatives ) )
            {
            // InternalImperativeOCL.g:749:1: ( ( rule__StringLiteral__Alternatives ) )
            // InternalImperativeOCL.g:750:1: ( rule__StringLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:751:1: ( rule__StringLiteral__Alternatives )
            // InternalImperativeOCL.g:751:2: rule__StringLiteral__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleSwitchExpCS"
    // InternalImperativeOCL.g:763:1: entryRuleSwitchExpCS : ruleSwitchExpCS EOF ;
    public final void entryRuleSwitchExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:764:1: ( ruleSwitchExpCS EOF )
            // InternalImperativeOCL.g:765:1: ruleSwitchExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSwitchExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSwitchExpCS"


    // $ANTLR start "ruleSwitchExpCS"
    // InternalImperativeOCL.g:772:1: ruleSwitchExpCS : ( ( rule__SwitchExpCS__Alternatives ) ) ;
    public final void ruleSwitchExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:776:2: ( ( ( rule__SwitchExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:777:1: ( ( rule__SwitchExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:777:1: ( ( rule__SwitchExpCS__Alternatives ) )
            // InternalImperativeOCL.g:778:1: ( rule__SwitchExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:779:1: ( rule__SwitchExpCS__Alternatives )
            // InternalImperativeOCL.g:779:2: rule__SwitchExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSwitchExpCS"


    // $ANTLR start "entryRuleSwitchAltCS"
    // InternalImperativeOCL.g:791:1: entryRuleSwitchAltCS : ruleSwitchAltCS EOF ;
    public final void entryRuleSwitchAltCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:792:1: ( ruleSwitchAltCS EOF )
            // InternalImperativeOCL.g:793:1: ruleSwitchAltCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSwitchAltCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSwitchAltCS"


    // $ANTLR start "ruleSwitchAltCS"
    // InternalImperativeOCL.g:800:1: ruleSwitchAltCS : ( ( rule__SwitchAltCS__Group__0 ) ) ;
    public final void ruleSwitchAltCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:804:2: ( ( ( rule__SwitchAltCS__Group__0 ) ) )
            // InternalImperativeOCL.g:805:1: ( ( rule__SwitchAltCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:805:1: ( ( rule__SwitchAltCS__Group__0 ) )
            // InternalImperativeOCL.g:806:1: ( rule__SwitchAltCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:807:1: ( rule__SwitchAltCS__Group__0 )
            // InternalImperativeOCL.g:807:2: rule__SwitchAltCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSwitchAltCS"


    // $ANTLR start "entryRuleTryExpCS"
    // InternalImperativeOCL.g:819:1: entryRuleTryExpCS : ruleTryExpCS EOF ;
    public final void entryRuleTryExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:820:1: ( ruleTryExpCS EOF )
            // InternalImperativeOCL.g:821:1: ruleTryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTryExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTryExpCS"


    // $ANTLR start "ruleTryExpCS"
    // InternalImperativeOCL.g:828:1: ruleTryExpCS : ( ( rule__TryExpCS__Group__0 ) ) ;
    public final void ruleTryExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:832:2: ( ( ( rule__TryExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:833:1: ( ( rule__TryExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:833:1: ( ( rule__TryExpCS__Group__0 ) )
            // InternalImperativeOCL.g:834:1: ( rule__TryExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:835:1: ( rule__TryExpCS__Group__0 )
            // InternalImperativeOCL.g:835:2: rule__TryExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTryExpCS"


    // $ANTLR start "entryRuleVarDeclarationCS"
    // InternalImperativeOCL.g:847:1: entryRuleVarDeclarationCS : ruleVarDeclarationCS EOF ;
    public final void entryRuleVarDeclarationCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:848:1: ( ruleVarDeclarationCS EOF )
            // InternalImperativeOCL.g:849:1: ruleVarDeclarationCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclarationCS"


    // $ANTLR start "ruleVarDeclarationCS"
    // InternalImperativeOCL.g:856:1: ruleVarDeclarationCS : ( ( rule__VarDeclarationCS__Group__0 ) ) ;
    public final void ruleVarDeclarationCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:860:2: ( ( ( rule__VarDeclarationCS__Group__0 ) ) )
            // InternalImperativeOCL.g:861:1: ( ( rule__VarDeclarationCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:861:1: ( ( rule__VarDeclarationCS__Group__0 ) )
            // InternalImperativeOCL.g:862:1: ( rule__VarDeclarationCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:863:1: ( rule__VarDeclarationCS__Group__0 )
            // InternalImperativeOCL.g:863:2: rule__VarDeclarationCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclarationCS"


    // $ANTLR start "entryRuleVarDeclarationNoInitCS"
    // InternalImperativeOCL.g:875:1: entryRuleVarDeclarationNoInitCS : ruleVarDeclarationNoInitCS EOF ;
    public final void entryRuleVarDeclarationNoInitCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:876:1: ( ruleVarDeclarationNoInitCS EOF )
            // InternalImperativeOCL.g:877:1: ruleVarDeclarationNoInitCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclarationNoInitCS"


    // $ANTLR start "ruleVarDeclarationNoInitCS"
    // InternalImperativeOCL.g:884:1: ruleVarDeclarationNoInitCS : ( ( rule__VarDeclarationNoInitCS__Group__0 ) ) ;
    public final void ruleVarDeclarationNoInitCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:888:2: ( ( ( rule__VarDeclarationNoInitCS__Group__0 ) ) )
            // InternalImperativeOCL.g:889:1: ( ( rule__VarDeclarationNoInitCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:889:1: ( ( rule__VarDeclarationNoInitCS__Group__0 ) )
            // InternalImperativeOCL.g:890:1: ( rule__VarDeclarationNoInitCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:891:1: ( rule__VarDeclarationNoInitCS__Group__0 )
            // InternalImperativeOCL.g:891:2: rule__VarDeclarationNoInitCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclarationNoInitCS"


    // $ANTLR start "entryRuleVarsInitializationCS"
    // InternalImperativeOCL.g:903:1: entryRuleVarsInitializationCS : ruleVarsInitializationCS EOF ;
    public final void entryRuleVarsInitializationCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:904:1: ( ruleVarsInitializationCS EOF )
            // InternalImperativeOCL.g:905:1: ruleVarsInitializationCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarsInitializationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarsInitializationCS"


    // $ANTLR start "ruleVarsInitializationCS"
    // InternalImperativeOCL.g:912:1: ruleVarsInitializationCS : ( ( rule__VarsInitializationCS__Group__0 ) ) ;
    public final void ruleVarsInitializationCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:916:2: ( ( ( rule__VarsInitializationCS__Group__0 ) ) )
            // InternalImperativeOCL.g:917:1: ( ( rule__VarsInitializationCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:917:1: ( ( rule__VarsInitializationCS__Group__0 ) )
            // InternalImperativeOCL.g:918:1: ( rule__VarsInitializationCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:919:1: ( rule__VarsInitializationCS__Group__0 )
            // InternalImperativeOCL.g:919:2: rule__VarsInitializationCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarsInitializationCS"


    // $ANTLR start "entryRuleWhileExpCS"
    // InternalImperativeOCL.g:931:1: entryRuleWhileExpCS : ruleWhileExpCS EOF ;
    public final void entryRuleWhileExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:932:1: ( ruleWhileExpCS EOF )
            // InternalImperativeOCL.g:933:1: ruleWhileExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWhileExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhileExpCS"


    // $ANTLR start "ruleWhileExpCS"
    // InternalImperativeOCL.g:940:1: ruleWhileExpCS : ( ( rule__WhileExpCS__Group__0 ) ) ;
    public final void ruleWhileExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:944:2: ( ( ( rule__WhileExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:945:1: ( ( rule__WhileExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:945:1: ( ( rule__WhileExpCS__Group__0 ) )
            // InternalImperativeOCL.g:946:1: ( rule__WhileExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:947:1: ( rule__WhileExpCS__Group__0 )
            // InternalImperativeOCL.g:947:2: rule__WhileExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhileExpCS"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalImperativeOCL.g:963:1: entryRuleEssentialOCLUnaryOperatorName : ruleEssentialOCLUnaryOperatorName EOF ;
    public final void entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:964:1: ( ruleEssentialOCLUnaryOperatorName EOF )
            // InternalImperativeOCL.g:965:1: ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalImperativeOCL.g:972:1: ruleEssentialOCLUnaryOperatorName : ( ( rule__EssentialOCLUnaryOperatorName__Alternatives ) ) ;
    public final void ruleEssentialOCLUnaryOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:976:2: ( ( ( rule__EssentialOCLUnaryOperatorName__Alternatives ) ) )
            // InternalImperativeOCL.g:977:1: ( ( rule__EssentialOCLUnaryOperatorName__Alternatives ) )
            {
            // InternalImperativeOCL.g:977:1: ( ( rule__EssentialOCLUnaryOperatorName__Alternatives ) )
            // InternalImperativeOCL.g:978:1: ( rule__EssentialOCLUnaryOperatorName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:979:1: ( rule__EssentialOCLUnaryOperatorName__Alternatives )
            // InternalImperativeOCL.g:979:2: rule__EssentialOCLUnaryOperatorName__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EssentialOCLUnaryOperatorName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalImperativeOCL.g:991:1: entryRuleEssentialOCLInfixOperatorName : ruleEssentialOCLInfixOperatorName EOF ;
    public final void entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:992:1: ( ruleEssentialOCLInfixOperatorName EOF )
            // InternalImperativeOCL.g:993:1: ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalImperativeOCL.g:1000:1: ruleEssentialOCLInfixOperatorName : ( ( rule__EssentialOCLInfixOperatorName__Alternatives ) ) ;
    public final void ruleEssentialOCLInfixOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1004:2: ( ( ( rule__EssentialOCLInfixOperatorName__Alternatives ) ) )
            // InternalImperativeOCL.g:1005:1: ( ( rule__EssentialOCLInfixOperatorName__Alternatives ) )
            {
            // InternalImperativeOCL.g:1005:1: ( ( rule__EssentialOCLInfixOperatorName__Alternatives ) )
            // InternalImperativeOCL.g:1006:1: ( rule__EssentialOCLInfixOperatorName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1007:1: ( rule__EssentialOCLInfixOperatorName__Alternatives )
            // InternalImperativeOCL.g:1007:2: rule__EssentialOCLInfixOperatorName__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EssentialOCLInfixOperatorName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalImperativeOCL.g:1019:1: entryRuleEssentialOCLNavigationOperatorName : ruleEssentialOCLNavigationOperatorName EOF ;
    public final void entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1020:1: ( ruleEssentialOCLNavigationOperatorName EOF )
            // InternalImperativeOCL.g:1021:1: ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalImperativeOCL.g:1028:1: ruleEssentialOCLNavigationOperatorName : ( ( rule__EssentialOCLNavigationOperatorName__Alternatives ) ) ;
    public final void ruleEssentialOCLNavigationOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1032:2: ( ( ( rule__EssentialOCLNavigationOperatorName__Alternatives ) ) )
            // InternalImperativeOCL.g:1033:1: ( ( rule__EssentialOCLNavigationOperatorName__Alternatives ) )
            {
            // InternalImperativeOCL.g:1033:1: ( ( rule__EssentialOCLNavigationOperatorName__Alternatives ) )
            // InternalImperativeOCL.g:1034:1: ( rule__EssentialOCLNavigationOperatorName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1035:1: ( rule__EssentialOCLNavigationOperatorName__Alternatives )
            // InternalImperativeOCL.g:1035:2: rule__EssentialOCLNavigationOperatorName__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EssentialOCLNavigationOperatorName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalImperativeOCL.g:1047:1: entryRuleBinaryOperatorName : ruleBinaryOperatorName EOF ;
    public final void entryRuleBinaryOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1048:1: ( ruleBinaryOperatorName EOF )
            // InternalImperativeOCL.g:1049:1: ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalImperativeOCL.g:1056:1: ruleBinaryOperatorName : ( ( rule__BinaryOperatorName__Alternatives ) ) ;
    public final void ruleBinaryOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1060:2: ( ( ( rule__BinaryOperatorName__Alternatives ) ) )
            // InternalImperativeOCL.g:1061:1: ( ( rule__BinaryOperatorName__Alternatives ) )
            {
            // InternalImperativeOCL.g:1061:1: ( ( rule__BinaryOperatorName__Alternatives ) )
            // InternalImperativeOCL.g:1062:1: ( rule__BinaryOperatorName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperatorNameAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1063:1: ( rule__BinaryOperatorName__Alternatives )
            // InternalImperativeOCL.g:1063:2: rule__BinaryOperatorName__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BinaryOperatorName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperatorNameAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalImperativeOCL.g:1075:1: entryRuleInfixOperatorName : ruleInfixOperatorName EOF ;
    public final void entryRuleInfixOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1076:1: ( ruleInfixOperatorName EOF )
            // InternalImperativeOCL.g:1077:1: ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalImperativeOCL.g:1084:1: ruleInfixOperatorName : ( ruleEssentialOCLInfixOperatorName ) ;
    public final void ruleInfixOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1088:2: ( ( ruleEssentialOCLInfixOperatorName ) )
            // InternalImperativeOCL.g:1089:1: ( ruleEssentialOCLInfixOperatorName )
            {
            // InternalImperativeOCL.g:1089:1: ( ruleEssentialOCLInfixOperatorName )
            // InternalImperativeOCL.g:1090:1: ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalImperativeOCL.g:1103:1: entryRuleNavigationOperatorName : ruleNavigationOperatorName EOF ;
    public final void entryRuleNavigationOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1104:1: ( ruleNavigationOperatorName EOF )
            // InternalImperativeOCL.g:1105:1: ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigationOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalImperativeOCL.g:1112:1: ruleNavigationOperatorName : ( ruleEssentialOCLNavigationOperatorName ) ;
    public final void ruleNavigationOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1116:2: ( ( ruleEssentialOCLNavigationOperatorName ) )
            // InternalImperativeOCL.g:1117:1: ( ruleEssentialOCLNavigationOperatorName )
            {
            // InternalImperativeOCL.g:1117:1: ( ruleEssentialOCLNavigationOperatorName )
            // InternalImperativeOCL.g:1118:1: ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalImperativeOCL.g:1131:1: entryRuleUnaryOperatorName : ruleUnaryOperatorName EOF ;
    public final void entryRuleUnaryOperatorName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1132:1: ( ruleUnaryOperatorName EOF )
            // InternalImperativeOCL.g:1133:1: ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalImperativeOCL.g:1140:1: ruleUnaryOperatorName : ( ruleEssentialOCLUnaryOperatorName ) ;
    public final void ruleUnaryOperatorName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1144:2: ( ( ruleEssentialOCLUnaryOperatorName ) )
            // InternalImperativeOCL.g:1145:1: ( ruleEssentialOCLUnaryOperatorName )
            {
            // InternalImperativeOCL.g:1145:1: ( ruleEssentialOCLUnaryOperatorName )
            // InternalImperativeOCL.g:1146:1: ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalImperativeOCL.g:1159:1: entryRuleEssentialOCLUnrestrictedName : ruleEssentialOCLUnrestrictedName EOF ;
    public final void entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1160:1: ( ruleEssentialOCLUnrestrictedName EOF )
            // InternalImperativeOCL.g:1161:1: ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalImperativeOCL.g:1168:1: ruleEssentialOCLUnrestrictedName : ( ruleIdentifier ) ;
    public final void ruleEssentialOCLUnrestrictedName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1172:2: ( ( ruleIdentifier ) )
            // InternalImperativeOCL.g:1173:1: ( ruleIdentifier )
            {
            // InternalImperativeOCL.g:1173:1: ( ruleIdentifier )
            // InternalImperativeOCL.g:1174:1: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalImperativeOCL.g:1187:1: entryRuleUnrestrictedName : ruleUnrestrictedName EOF ;
    public final void entryRuleUnrestrictedName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1188:1: ( ruleUnrestrictedName EOF )
            // InternalImperativeOCL.g:1189:1: ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnrestrictedNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalImperativeOCL.g:1196:1: ruleUnrestrictedName : ( ruleEssentialOCLUnrestrictedName ) ;
    public final void ruleUnrestrictedName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1200:2: ( ( ruleEssentialOCLUnrestrictedName ) )
            // InternalImperativeOCL.g:1201:1: ( ruleEssentialOCLUnrestrictedName )
            {
            // InternalImperativeOCL.g:1201:1: ( ruleEssentialOCLUnrestrictedName )
            // InternalImperativeOCL.g:1202:1: ruleEssentialOCLUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalImperativeOCL.g:1215:1: entryRuleEssentialOCLUnreservedName : ruleEssentialOCLUnreservedName EOF ;
    public final void entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1216:1: ( ruleEssentialOCLUnreservedName EOF )
            // InternalImperativeOCL.g:1217:1: ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalImperativeOCL.g:1224:1: ruleEssentialOCLUnreservedName : ( ( rule__EssentialOCLUnreservedName__Alternatives ) ) ;
    public final void ruleEssentialOCLUnreservedName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1228:2: ( ( ( rule__EssentialOCLUnreservedName__Alternatives ) ) )
            // InternalImperativeOCL.g:1229:1: ( ( rule__EssentialOCLUnreservedName__Alternatives ) )
            {
            // InternalImperativeOCL.g:1229:1: ( ( rule__EssentialOCLUnreservedName__Alternatives ) )
            // InternalImperativeOCL.g:1230:1: ( rule__EssentialOCLUnreservedName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1231:1: ( rule__EssentialOCLUnreservedName__Alternatives )
            // InternalImperativeOCL.g:1231:2: rule__EssentialOCLUnreservedName__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EssentialOCLUnreservedName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalImperativeOCL.g:1243:1: entryRuleUnreservedName : ruleUnreservedName EOF ;
    public final void entryRuleUnreservedName() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1244:1: ( ruleUnreservedName EOF )
            // InternalImperativeOCL.g:1245:1: ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnreservedNameRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalImperativeOCL.g:1252:1: ruleUnreservedName : ( ruleEssentialOCLUnreservedName ) ;
    public final void ruleUnreservedName() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1256:2: ( ( ruleEssentialOCLUnreservedName ) )
            // InternalImperativeOCL.g:1257:1: ( ruleEssentialOCLUnreservedName )
            {
            // InternalImperativeOCL.g:1257:1: ( ruleEssentialOCLUnreservedName )
            // InternalImperativeOCL.g:1258:1: ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalImperativeOCL.g:1273:1: entryRuleURIFirstPathElementCS : ruleURIFirstPathElementCS EOF ;
    public final void entryRuleURIFirstPathElementCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1274:1: ( ruleURIFirstPathElementCS EOF )
            // InternalImperativeOCL.g:1275:1: ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalImperativeOCL.g:1282:1: ruleURIFirstPathElementCS : ( ( rule__URIFirstPathElementCS__Alternatives ) ) ;
    public final void ruleURIFirstPathElementCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1286:2: ( ( ( rule__URIFirstPathElementCS__Alternatives ) ) )
            // InternalImperativeOCL.g:1287:1: ( ( rule__URIFirstPathElementCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:1287:1: ( ( rule__URIFirstPathElementCS__Alternatives ) )
            // InternalImperativeOCL.g:1288:1: ( rule__URIFirstPathElementCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1289:1: ( rule__URIFirstPathElementCS__Alternatives )
            // InternalImperativeOCL.g:1289:2: rule__URIFirstPathElementCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__URIFirstPathElementCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalImperativeOCL.g:1301:1: entryRulePrimitiveTypeIdentifier : rulePrimitiveTypeIdentifier EOF ;
    public final void entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1302:1: ( rulePrimitiveTypeIdentifier EOF )
            // InternalImperativeOCL.g:1303:1: rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalImperativeOCL.g:1310:1: rulePrimitiveTypeIdentifier : ( ( rule__PrimitiveTypeIdentifier__Alternatives ) ) ;
    public final void rulePrimitiveTypeIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1314:2: ( ( ( rule__PrimitiveTypeIdentifier__Alternatives ) ) )
            // InternalImperativeOCL.g:1315:1: ( ( rule__PrimitiveTypeIdentifier__Alternatives ) )
            {
            // InternalImperativeOCL.g:1315:1: ( ( rule__PrimitiveTypeIdentifier__Alternatives ) )
            // InternalImperativeOCL.g:1316:1: ( rule__PrimitiveTypeIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1317:1: ( rule__PrimitiveTypeIdentifier__Alternatives )
            // InternalImperativeOCL.g:1317:2: rule__PrimitiveTypeIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimitiveTypeIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalImperativeOCL.g:1329:1: entryRulePrimitiveTypeCS : rulePrimitiveTypeCS EOF ;
    public final void entryRulePrimitiveTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1330:1: ( rulePrimitiveTypeCS EOF )
            // InternalImperativeOCL.g:1331:1: rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalImperativeOCL.g:1338:1: rulePrimitiveTypeCS : ( ( rule__PrimitiveTypeCS__NameAssignment ) ) ;
    public final void rulePrimitiveTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1342:2: ( ( ( rule__PrimitiveTypeCS__NameAssignment ) ) )
            // InternalImperativeOCL.g:1343:1: ( ( rule__PrimitiveTypeCS__NameAssignment ) )
            {
            // InternalImperativeOCL.g:1343:1: ( ( rule__PrimitiveTypeCS__NameAssignment ) )
            // InternalImperativeOCL.g:1344:1: ( rule__PrimitiveTypeCS__NameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment());
            }
            // InternalImperativeOCL.g:1345:1: ( rule__PrimitiveTypeCS__NameAssignment )
            // InternalImperativeOCL.g:1345:2: rule__PrimitiveTypeCS__NameAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimitiveTypeCS__NameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalImperativeOCL.g:1357:1: entryRuleCollectionTypeIdentifier : ruleCollectionTypeIdentifier EOF ;
    public final void entryRuleCollectionTypeIdentifier() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1358:1: ( ruleCollectionTypeIdentifier EOF )
            // InternalImperativeOCL.g:1359:1: ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeIdentifierRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalImperativeOCL.g:1366:1: ruleCollectionTypeIdentifier : ( ( rule__CollectionTypeIdentifier__Alternatives ) ) ;
    public final void ruleCollectionTypeIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1370:2: ( ( ( rule__CollectionTypeIdentifier__Alternatives ) ) )
            // InternalImperativeOCL.g:1371:1: ( ( rule__CollectionTypeIdentifier__Alternatives ) )
            {
            // InternalImperativeOCL.g:1371:1: ( ( rule__CollectionTypeIdentifier__Alternatives ) )
            // InternalImperativeOCL.g:1372:1: ( rule__CollectionTypeIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1373:1: ( rule__CollectionTypeIdentifier__Alternatives )
            // InternalImperativeOCL.g:1373:2: rule__CollectionTypeIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalImperativeOCL.g:1385:1: entryRuleCollectionTypeCS : ruleCollectionTypeCS EOF ;
    public final void entryRuleCollectionTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1386:1: ( ruleCollectionTypeCS EOF )
            // InternalImperativeOCL.g:1387:1: ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalImperativeOCL.g:1394:1: ruleCollectionTypeCS : ( ( rule__CollectionTypeCS__Group__0 ) ) ;
    public final void ruleCollectionTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1398:2: ( ( ( rule__CollectionTypeCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1399:1: ( ( rule__CollectionTypeCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1399:1: ( ( rule__CollectionTypeCS__Group__0 ) )
            // InternalImperativeOCL.g:1400:1: ( rule__CollectionTypeCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1401:1: ( rule__CollectionTypeCS__Group__0 )
            // InternalImperativeOCL.g:1401:2: rule__CollectionTypeCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalImperativeOCL.g:1413:1: entryRuleMapTypeCS : ruleMapTypeCS EOF ;
    public final void entryRuleMapTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1414:1: ( ruleMapTypeCS EOF )
            // InternalImperativeOCL.g:1415:1: ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalImperativeOCL.g:1422:1: ruleMapTypeCS : ( ( rule__MapTypeCS__Group__0 ) ) ;
    public final void ruleMapTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1426:2: ( ( ( rule__MapTypeCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1427:1: ( ( rule__MapTypeCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1427:1: ( ( rule__MapTypeCS__Group__0 ) )
            // InternalImperativeOCL.g:1428:1: ( rule__MapTypeCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1429:1: ( rule__MapTypeCS__Group__0 )
            // InternalImperativeOCL.g:1429:2: rule__MapTypeCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalImperativeOCL.g:1441:1: entryRuleTupleTypeCS : ruleTupleTypeCS EOF ;
    public final void entryRuleTupleTypeCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1442:1: ( ruleTupleTypeCS EOF )
            // InternalImperativeOCL.g:1443:1: ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalImperativeOCL.g:1450:1: ruleTupleTypeCS : ( ( rule__TupleTypeCS__Group__0 ) ) ;
    public final void ruleTupleTypeCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1454:2: ( ( ( rule__TupleTypeCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1455:1: ( ( rule__TupleTypeCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1455:1: ( ( rule__TupleTypeCS__Group__0 ) )
            // InternalImperativeOCL.g:1456:1: ( rule__TupleTypeCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1457:1: ( rule__TupleTypeCS__Group__0 )
            // InternalImperativeOCL.g:1457:2: rule__TupleTypeCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalImperativeOCL.g:1469:1: entryRuleTuplePartCS : ruleTuplePartCS EOF ;
    public final void entryRuleTuplePartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1470:1: ( ruleTuplePartCS EOF )
            // InternalImperativeOCL.g:1471:1: ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalImperativeOCL.g:1478:1: ruleTuplePartCS : ( ( rule__TuplePartCS__Group__0 ) ) ;
    public final void ruleTuplePartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1482:2: ( ( ( rule__TuplePartCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1483:1: ( ( rule__TuplePartCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1483:1: ( ( rule__TuplePartCS__Group__0 ) )
            // InternalImperativeOCL.g:1484:1: ( rule__TuplePartCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1485:1: ( rule__TuplePartCS__Group__0 )
            // InternalImperativeOCL.g:1485:2: rule__TuplePartCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalImperativeOCL.g:1497:1: entryRuleCollectionLiteralExpCS : ruleCollectionLiteralExpCS EOF ;
    public final void entryRuleCollectionLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1498:1: ( ruleCollectionLiteralExpCS EOF )
            // InternalImperativeOCL.g:1499:1: ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalImperativeOCL.g:1506:1: ruleCollectionLiteralExpCS : ( ( rule__CollectionLiteralExpCS__Group__0 ) ) ;
    public final void ruleCollectionLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1510:2: ( ( ( rule__CollectionLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1511:1: ( ( rule__CollectionLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1511:1: ( ( rule__CollectionLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1512:1: ( rule__CollectionLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1513:1: ( rule__CollectionLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1513:2: rule__CollectionLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalImperativeOCL.g:1525:1: entryRuleCollectionLiteralPartCS : ruleCollectionLiteralPartCS EOF ;
    public final void entryRuleCollectionLiteralPartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1526:1: ( ruleCollectionLiteralPartCS EOF )
            // InternalImperativeOCL.g:1527:1: ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalImperativeOCL.g:1534:1: ruleCollectionLiteralPartCS : ( ( rule__CollectionLiteralPartCS__Alternatives ) ) ;
    public final void ruleCollectionLiteralPartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1538:2: ( ( ( rule__CollectionLiteralPartCS__Alternatives ) ) )
            // InternalImperativeOCL.g:1539:1: ( ( rule__CollectionLiteralPartCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:1539:1: ( ( rule__CollectionLiteralPartCS__Alternatives ) )
            // InternalImperativeOCL.g:1540:1: ( rule__CollectionLiteralPartCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1541:1: ( rule__CollectionLiteralPartCS__Alternatives )
            // InternalImperativeOCL.g:1541:2: rule__CollectionLiteralPartCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalImperativeOCL.g:1553:1: entryRuleCollectionPatternCS : ruleCollectionPatternCS EOF ;
    public final void entryRuleCollectionPatternCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1554:1: ( ruleCollectionPatternCS EOF )
            // InternalImperativeOCL.g:1555:1: ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalImperativeOCL.g:1562:1: ruleCollectionPatternCS : ( ( rule__CollectionPatternCS__Group__0 ) ) ;
    public final void ruleCollectionPatternCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1566:2: ( ( ( rule__CollectionPatternCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1567:1: ( ( rule__CollectionPatternCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1567:1: ( ( rule__CollectionPatternCS__Group__0 ) )
            // InternalImperativeOCL.g:1568:1: ( rule__CollectionPatternCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1569:1: ( rule__CollectionPatternCS__Group__0 )
            // InternalImperativeOCL.g:1569:2: rule__CollectionPatternCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalImperativeOCL.g:1581:1: entryRuleShadowPartCS : ruleShadowPartCS EOF ;
    public final void entryRuleShadowPartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1582:1: ( ruleShadowPartCS EOF )
            // InternalImperativeOCL.g:1583:1: ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalImperativeOCL.g:1590:1: ruleShadowPartCS : ( ( rule__ShadowPartCS__Alternatives ) ) ;
    public final void ruleShadowPartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1594:2: ( ( ( rule__ShadowPartCS__Alternatives ) ) )
            // InternalImperativeOCL.g:1595:1: ( ( rule__ShadowPartCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:1595:1: ( ( rule__ShadowPartCS__Alternatives ) )
            // InternalImperativeOCL.g:1596:1: ( rule__ShadowPartCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1597:1: ( rule__ShadowPartCS__Alternatives )
            // InternalImperativeOCL.g:1597:2: rule__ShadowPartCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalImperativeOCL.g:1609:1: entryRulePatternExpCS : rulePatternExpCS EOF ;
    public final void entryRulePatternExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1610:1: ( rulePatternExpCS EOF )
            // InternalImperativeOCL.g:1611:1: rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePatternExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalImperativeOCL.g:1618:1: rulePatternExpCS : ( ( rule__PatternExpCS__Group__0 ) ) ;
    public final void rulePatternExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1622:2: ( ( ( rule__PatternExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1623:1: ( ( rule__PatternExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1623:1: ( ( rule__PatternExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1624:1: ( rule__PatternExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1625:1: ( rule__PatternExpCS__Group__0 )
            // InternalImperativeOCL.g:1625:2: rule__PatternExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PatternExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalImperativeOCL.g:1637:1: entryRuleLambdaLiteralExpCS : ruleLambdaLiteralExpCS EOF ;
    public final void entryRuleLambdaLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1638:1: ( ruleLambdaLiteralExpCS EOF )
            // InternalImperativeOCL.g:1639:1: ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalImperativeOCL.g:1646:1: ruleLambdaLiteralExpCS : ( ( rule__LambdaLiteralExpCS__Group__0 ) ) ;
    public final void ruleLambdaLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1650:2: ( ( ( rule__LambdaLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1651:1: ( ( rule__LambdaLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1651:1: ( ( rule__LambdaLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1652:1: ( rule__LambdaLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1653:1: ( rule__LambdaLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1653:2: rule__LambdaLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalImperativeOCL.g:1665:1: entryRuleMapLiteralExpCS : ruleMapLiteralExpCS EOF ;
    public final void entryRuleMapLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1666:1: ( ruleMapLiteralExpCS EOF )
            // InternalImperativeOCL.g:1667:1: ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalImperativeOCL.g:1674:1: ruleMapLiteralExpCS : ( ( rule__MapLiteralExpCS__Group__0 ) ) ;
    public final void ruleMapLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1678:2: ( ( ( rule__MapLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1679:1: ( ( rule__MapLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1679:1: ( ( rule__MapLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1680:1: ( rule__MapLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1681:1: ( rule__MapLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1681:2: rule__MapLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalImperativeOCL.g:1693:1: entryRuleMapLiteralPartCS : ruleMapLiteralPartCS EOF ;
    public final void entryRuleMapLiteralPartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1694:1: ( ruleMapLiteralPartCS EOF )
            // InternalImperativeOCL.g:1695:1: ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalImperativeOCL.g:1702:1: ruleMapLiteralPartCS : ( ( rule__MapLiteralPartCS__Group__0 ) ) ;
    public final void ruleMapLiteralPartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1706:2: ( ( ( rule__MapLiteralPartCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1707:1: ( ( rule__MapLiteralPartCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1707:1: ( ( rule__MapLiteralPartCS__Group__0 ) )
            // InternalImperativeOCL.g:1708:1: ( rule__MapLiteralPartCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1709:1: ( rule__MapLiteralPartCS__Group__0 )
            // InternalImperativeOCL.g:1709:2: rule__MapLiteralPartCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalImperativeOCL.g:1721:1: entryRulePrimitiveLiteralExpCS : rulePrimitiveLiteralExpCS EOF ;
    public final void entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1722:1: ( rulePrimitiveLiteralExpCS EOF )
            // InternalImperativeOCL.g:1723:1: rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalImperativeOCL.g:1730:1: rulePrimitiveLiteralExpCS : ( ( rule__PrimitiveLiteralExpCS__Alternatives ) ) ;
    public final void rulePrimitiveLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1734:2: ( ( ( rule__PrimitiveLiteralExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:1735:1: ( ( rule__PrimitiveLiteralExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:1735:1: ( ( rule__PrimitiveLiteralExpCS__Alternatives ) )
            // InternalImperativeOCL.g:1736:1: ( rule__PrimitiveLiteralExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1737:1: ( rule__PrimitiveLiteralExpCS__Alternatives )
            // InternalImperativeOCL.g:1737:2: rule__PrimitiveLiteralExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimitiveLiteralExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalImperativeOCL.g:1749:1: entryRuleTupleLiteralExpCS : ruleTupleLiteralExpCS EOF ;
    public final void entryRuleTupleLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1750:1: ( ruleTupleLiteralExpCS EOF )
            // InternalImperativeOCL.g:1751:1: ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalImperativeOCL.g:1758:1: ruleTupleLiteralExpCS : ( ( rule__TupleLiteralExpCS__Group__0 ) ) ;
    public final void ruleTupleLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1762:2: ( ( ( rule__TupleLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1763:1: ( ( rule__TupleLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1763:1: ( ( rule__TupleLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1764:1: ( rule__TupleLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1765:1: ( rule__TupleLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1765:2: rule__TupleLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalImperativeOCL.g:1777:1: entryRuleTupleLiteralPartCS : ruleTupleLiteralPartCS EOF ;
    public final void entryRuleTupleLiteralPartCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1778:1: ( ruleTupleLiteralPartCS EOF )
            // InternalImperativeOCL.g:1779:1: ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalImperativeOCL.g:1786:1: ruleTupleLiteralPartCS : ( ( rule__TupleLiteralPartCS__Group__0 ) ) ;
    public final void ruleTupleLiteralPartCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1790:2: ( ( ( rule__TupleLiteralPartCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1791:1: ( ( rule__TupleLiteralPartCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1791:1: ( ( rule__TupleLiteralPartCS__Group__0 ) )
            // InternalImperativeOCL.g:1792:1: ( rule__TupleLiteralPartCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1793:1: ( rule__TupleLiteralPartCS__Group__0 )
            // InternalImperativeOCL.g:1793:2: rule__TupleLiteralPartCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalImperativeOCL.g:1805:1: entryRuleNumberLiteralExpCS : ruleNumberLiteralExpCS EOF ;
    public final void entryRuleNumberLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1806:1: ( ruleNumberLiteralExpCS EOF )
            // InternalImperativeOCL.g:1807:1: ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalImperativeOCL.g:1814:1: ruleNumberLiteralExpCS : ( ( rule__NumberLiteralExpCS__SymbolAssignment ) ) ;
    public final void ruleNumberLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1818:2: ( ( ( rule__NumberLiteralExpCS__SymbolAssignment ) ) )
            // InternalImperativeOCL.g:1819:1: ( ( rule__NumberLiteralExpCS__SymbolAssignment ) )
            {
            // InternalImperativeOCL.g:1819:1: ( ( rule__NumberLiteralExpCS__SymbolAssignment ) )
            // InternalImperativeOCL.g:1820:1: ( rule__NumberLiteralExpCS__SymbolAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberLiteralExpCSAccess().getSymbolAssignment());
            }
            // InternalImperativeOCL.g:1821:1: ( rule__NumberLiteralExpCS__SymbolAssignment )
            // InternalImperativeOCL.g:1821:2: rule__NumberLiteralExpCS__SymbolAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NumberLiteralExpCS__SymbolAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberLiteralExpCSAccess().getSymbolAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalImperativeOCL.g:1833:1: entryRuleStringLiteralExpCS : ruleStringLiteralExpCS EOF ;
    public final void entryRuleStringLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1834:1: ( ruleStringLiteralExpCS EOF )
            // InternalImperativeOCL.g:1835:1: ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalImperativeOCL.g:1842:1: ruleStringLiteralExpCS : ( ( ( rule__StringLiteralExpCS__SegmentsAssignment ) ) ( ( rule__StringLiteralExpCS__SegmentsAssignment )* ) ) ;
    public final void ruleStringLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1846:2: ( ( ( ( rule__StringLiteralExpCS__SegmentsAssignment ) ) ( ( rule__StringLiteralExpCS__SegmentsAssignment )* ) ) )
            // InternalImperativeOCL.g:1847:1: ( ( ( rule__StringLiteralExpCS__SegmentsAssignment ) ) ( ( rule__StringLiteralExpCS__SegmentsAssignment )* ) )
            {
            // InternalImperativeOCL.g:1847:1: ( ( ( rule__StringLiteralExpCS__SegmentsAssignment ) ) ( ( rule__StringLiteralExpCS__SegmentsAssignment )* ) )
            // InternalImperativeOCL.g:1848:1: ( ( rule__StringLiteralExpCS__SegmentsAssignment ) ) ( ( rule__StringLiteralExpCS__SegmentsAssignment )* )
            {
            // InternalImperativeOCL.g:1848:1: ( ( rule__StringLiteralExpCS__SegmentsAssignment ) )
            // InternalImperativeOCL.g:1849:1: ( rule__StringLiteralExpCS__SegmentsAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment());
            }
            // InternalImperativeOCL.g:1850:1: ( rule__StringLiteralExpCS__SegmentsAssignment )
            // InternalImperativeOCL.g:1850:2: rule__StringLiteralExpCS__SegmentsAssignment
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__StringLiteralExpCS__SegmentsAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment());
            }

            }

            // InternalImperativeOCL.g:1853:1: ( ( rule__StringLiteralExpCS__SegmentsAssignment )* )
            // InternalImperativeOCL.g:1854:1: ( rule__StringLiteralExpCS__SegmentsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment());
            }
            // InternalImperativeOCL.g:1855:1: ( rule__StringLiteralExpCS__SegmentsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_SINGLE_QUOTED_STRING) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalImperativeOCL()) ) {
                        alt1=1;
                    }


                }
                else if ( (LA1_0==RULE_DOUBLE_QUOTED_STRING) ) {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalImperativeOCL()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalImperativeOCL.g:1855:2: rule__StringLiteralExpCS__SegmentsAssignment
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__StringLiteralExpCS__SegmentsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment());
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalImperativeOCL.g:1868:1: entryRuleBooleanLiteralExpCS : ruleBooleanLiteralExpCS EOF ;
    public final void entryRuleBooleanLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1869:1: ( ruleBooleanLiteralExpCS EOF )
            // InternalImperativeOCL.g:1870:1: ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalImperativeOCL.g:1877:1: ruleBooleanLiteralExpCS : ( ( rule__BooleanLiteralExpCS__Alternatives ) ) ;
    public final void ruleBooleanLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1881:2: ( ( ( rule__BooleanLiteralExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:1882:1: ( ( rule__BooleanLiteralExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:1882:1: ( ( rule__BooleanLiteralExpCS__Alternatives ) )
            // InternalImperativeOCL.g:1883:1: ( rule__BooleanLiteralExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:1884:1: ( rule__BooleanLiteralExpCS__Alternatives )
            // InternalImperativeOCL.g:1884:2: rule__BooleanLiteralExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanLiteralExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalImperativeOCL.g:1896:1: entryRuleUnlimitedNaturalLiteralExpCS : ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final void entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1897:1: ( ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalImperativeOCL.g:1898:1: ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalImperativeOCL.g:1905:1: ruleUnlimitedNaturalLiteralExpCS : ( ( rule__UnlimitedNaturalLiteralExpCS__Group__0 ) ) ;
    public final void ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1909:2: ( ( ( rule__UnlimitedNaturalLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1910:1: ( ( rule__UnlimitedNaturalLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1910:1: ( ( rule__UnlimitedNaturalLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1911:1: ( rule__UnlimitedNaturalLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1912:1: ( rule__UnlimitedNaturalLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1912:2: rule__UnlimitedNaturalLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnlimitedNaturalLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalImperativeOCL.g:1924:1: entryRuleInvalidLiteralExpCS : ruleInvalidLiteralExpCS EOF ;
    public final void entryRuleInvalidLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1925:1: ( ruleInvalidLiteralExpCS EOF )
            // InternalImperativeOCL.g:1926:1: ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInvalidLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalImperativeOCL.g:1933:1: ruleInvalidLiteralExpCS : ( ( rule__InvalidLiteralExpCS__Group__0 ) ) ;
    public final void ruleInvalidLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1937:2: ( ( ( rule__InvalidLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1938:1: ( ( rule__InvalidLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1938:1: ( ( rule__InvalidLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1939:1: ( rule__InvalidLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInvalidLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1940:1: ( rule__InvalidLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1940:2: rule__InvalidLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InvalidLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInvalidLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalImperativeOCL.g:1952:1: entryRuleNullLiteralExpCS : ruleNullLiteralExpCS EOF ;
    public final void entryRuleNullLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1953:1: ( ruleNullLiteralExpCS EOF )
            // InternalImperativeOCL.g:1954:1: ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalImperativeOCL.g:1961:1: ruleNullLiteralExpCS : ( ( rule__NullLiteralExpCS__Group__0 ) ) ;
    public final void ruleNullLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1965:2: ( ( ( rule__NullLiteralExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1966:1: ( ( rule__NullLiteralExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1966:1: ( ( rule__NullLiteralExpCS__Group__0 ) )
            // InternalImperativeOCL.g:1967:1: ( rule__NullLiteralExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullLiteralExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1968:1: ( rule__NullLiteralExpCS__Group__0 )
            // InternalImperativeOCL.g:1968:2: rule__NullLiteralExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullLiteralExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullLiteralExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalImperativeOCL.g:1980:1: entryRuleTypeLiteralWithMultiplicityCS : ruleTypeLiteralWithMultiplicityCS EOF ;
    public final void entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:1981:1: ( ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalImperativeOCL.g:1982:1: ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalImperativeOCL.g:1989:1: ruleTypeLiteralWithMultiplicityCS : ( ( rule__TypeLiteralWithMultiplicityCS__Group__0 ) ) ;
    public final void ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:1993:2: ( ( ( rule__TypeLiteralWithMultiplicityCS__Group__0 ) ) )
            // InternalImperativeOCL.g:1994:1: ( ( rule__TypeLiteralWithMultiplicityCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:1994:1: ( ( rule__TypeLiteralWithMultiplicityCS__Group__0 ) )
            // InternalImperativeOCL.g:1995:1: ( rule__TypeLiteralWithMultiplicityCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:1996:1: ( rule__TypeLiteralWithMultiplicityCS__Group__0 )
            // InternalImperativeOCL.g:1996:2: rule__TypeLiteralWithMultiplicityCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeLiteralWithMultiplicityCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalImperativeOCL.g:2008:1: entryRuleTypeLiteralExpCS : ruleTypeLiteralExpCS EOF ;
    public final void entryRuleTypeLiteralExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2009:1: ( ruleTypeLiteralExpCS EOF )
            // InternalImperativeOCL.g:2010:1: ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalImperativeOCL.g:2017:1: ruleTypeLiteralExpCS : ( ( rule__TypeLiteralExpCS__OwnedTypeAssignment ) ) ;
    public final void ruleTypeLiteralExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2021:2: ( ( ( rule__TypeLiteralExpCS__OwnedTypeAssignment ) ) )
            // InternalImperativeOCL.g:2022:1: ( ( rule__TypeLiteralExpCS__OwnedTypeAssignment ) )
            {
            // InternalImperativeOCL.g:2022:1: ( ( rule__TypeLiteralExpCS__OwnedTypeAssignment ) )
            // InternalImperativeOCL.g:2023:1: ( rule__TypeLiteralExpCS__OwnedTypeAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment());
            }
            // InternalImperativeOCL.g:2024:1: ( rule__TypeLiteralExpCS__OwnedTypeAssignment )
            // InternalImperativeOCL.g:2024:2: rule__TypeLiteralExpCS__OwnedTypeAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeLiteralExpCS__OwnedTypeAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalImperativeOCL.g:2036:1: entryRuleTypeNameExpCS : ruleTypeNameExpCS EOF ;
    public final void entryRuleTypeNameExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2037:1: ( ruleTypeNameExpCS EOF )
            // InternalImperativeOCL.g:2038:1: ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalImperativeOCL.g:2045:1: ruleTypeNameExpCS : ( ( rule__TypeNameExpCS__Group__0 ) ) ;
    public final void ruleTypeNameExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2049:2: ( ( ( rule__TypeNameExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2050:1: ( ( rule__TypeNameExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2050:1: ( ( rule__TypeNameExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2051:1: ( rule__TypeNameExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2052:1: ( rule__TypeNameExpCS__Group__0 )
            // InternalImperativeOCL.g:2052:2: rule__TypeNameExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalImperativeOCL.g:2064:1: entryRuleTypeExpWithoutMultiplicityCS : ruleTypeExpWithoutMultiplicityCS EOF ;
    public final void entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2065:1: ( ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalImperativeOCL.g:2066:1: ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalImperativeOCL.g:2073:1: ruleTypeExpWithoutMultiplicityCS : ( ( rule__TypeExpWithoutMultiplicityCS__Alternatives ) ) ;
    public final void ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2077:2: ( ( ( rule__TypeExpWithoutMultiplicityCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2078:1: ( ( rule__TypeExpWithoutMultiplicityCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2078:1: ( ( rule__TypeExpWithoutMultiplicityCS__Alternatives ) )
            // InternalImperativeOCL.g:2079:1: ( rule__TypeExpWithoutMultiplicityCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2080:1: ( rule__TypeExpWithoutMultiplicityCS__Alternatives )
            // InternalImperativeOCL.g:2080:2: rule__TypeExpWithoutMultiplicityCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeExpWithoutMultiplicityCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalImperativeOCL.g:2092:1: entryRuleTypeExpCS : ruleTypeExpCS EOF ;
    public final void entryRuleTypeExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2093:1: ( ruleTypeExpCS EOF )
            // InternalImperativeOCL.g:2094:1: ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalImperativeOCL.g:2101:1: ruleTypeExpCS : ( ( rule__TypeExpCS__Group__0 ) ) ;
    public final void ruleTypeExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2105:2: ( ( ( rule__TypeExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2106:1: ( ( rule__TypeExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2106:1: ( ( rule__TypeExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2107:1: ( rule__TypeExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2108:1: ( rule__TypeExpCS__Group__0 )
            // InternalImperativeOCL.g:2108:2: rule__TypeExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalImperativeOCL.g:2120:1: entryRuleExpCS : ruleExpCS EOF ;
    public final void entryRuleExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2121:1: ( ruleExpCS EOF )
            // InternalImperativeOCL.g:2122:1: ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalImperativeOCL.g:2129:1: ruleExpCS : ( ( rule__ExpCS__Alternatives ) ) ;
    public final void ruleExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2133:2: ( ( ( rule__ExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2134:1: ( ( rule__ExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2134:1: ( ( rule__ExpCS__Alternatives ) )
            // InternalImperativeOCL.g:2135:1: ( rule__ExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2136:1: ( rule__ExpCS__Alternatives )
            // InternalImperativeOCL.g:2136:2: rule__ExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalImperativeOCL.g:2148:1: entryRulePrefixedLetExpCS : rulePrefixedLetExpCS EOF ;
    public final void entryRulePrefixedLetExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2149:1: ( rulePrefixedLetExpCS EOF )
            // InternalImperativeOCL.g:2150:1: rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalImperativeOCL.g:2157:1: rulePrefixedLetExpCS : ( ( rule__PrefixedLetExpCS__Alternatives ) ) ;
    public final void rulePrefixedLetExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2161:2: ( ( ( rule__PrefixedLetExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2162:1: ( ( rule__PrefixedLetExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2162:1: ( ( rule__PrefixedLetExpCS__Alternatives ) )
            // InternalImperativeOCL.g:2163:1: ( rule__PrefixedLetExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2164:1: ( rule__PrefixedLetExpCS__Alternatives )
            // InternalImperativeOCL.g:2164:2: rule__PrefixedLetExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalImperativeOCL.g:2176:1: entryRulePrefixedPrimaryExpCS : rulePrefixedPrimaryExpCS EOF ;
    public final void entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2177:1: ( rulePrefixedPrimaryExpCS EOF )
            // InternalImperativeOCL.g:2178:1: rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalImperativeOCL.g:2185:1: rulePrefixedPrimaryExpCS : ( ( rule__PrefixedPrimaryExpCS__Alternatives ) ) ;
    public final void rulePrefixedPrimaryExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2189:2: ( ( ( rule__PrefixedPrimaryExpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2190:1: ( ( rule__PrefixedPrimaryExpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2190:1: ( ( rule__PrefixedPrimaryExpCS__Alternatives ) )
            // InternalImperativeOCL.g:2191:1: ( rule__PrefixedPrimaryExpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2192:1: ( rule__PrefixedPrimaryExpCS__Alternatives )
            // InternalImperativeOCL.g:2192:2: rule__PrefixedPrimaryExpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalImperativeOCL.g:2204:1: entryRuleNameExpCS : ruleNameExpCS EOF ;
    public final void entryRuleNameExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2205:1: ( ruleNameExpCS EOF )
            // InternalImperativeOCL.g:2206:1: ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNameExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalImperativeOCL.g:2213:1: ruleNameExpCS : ( ( rule__NameExpCS__Group__0 ) ) ;
    public final void ruleNameExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2217:2: ( ( ( rule__NameExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2218:1: ( ( rule__NameExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2218:1: ( ( rule__NameExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2219:1: ( rule__NameExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2220:1: ( rule__NameExpCS__Group__0 )
            // InternalImperativeOCL.g:2220:2: rule__NameExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalImperativeOCL.g:2232:1: entryRuleCurlyBracketedClauseCS : ruleCurlyBracketedClauseCS EOF ;
    public final void entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2233:1: ( ruleCurlyBracketedClauseCS EOF )
            // InternalImperativeOCL.g:2234:1: ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalImperativeOCL.g:2241:1: ruleCurlyBracketedClauseCS : ( ( rule__CurlyBracketedClauseCS__Group__0 ) ) ;
    public final void ruleCurlyBracketedClauseCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2245:2: ( ( ( rule__CurlyBracketedClauseCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2246:1: ( ( rule__CurlyBracketedClauseCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2246:1: ( ( rule__CurlyBracketedClauseCS__Group__0 ) )
            // InternalImperativeOCL.g:2247:1: ( rule__CurlyBracketedClauseCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2248:1: ( rule__CurlyBracketedClauseCS__Group__0 )
            // InternalImperativeOCL.g:2248:2: rule__CurlyBracketedClauseCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalImperativeOCL.g:2260:1: entryRuleRoundBracketedClauseCS : ruleRoundBracketedClauseCS EOF ;
    public final void entryRuleRoundBracketedClauseCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2261:1: ( ruleRoundBracketedClauseCS EOF )
            // InternalImperativeOCL.g:2262:1: ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalImperativeOCL.g:2269:1: ruleRoundBracketedClauseCS : ( ( rule__RoundBracketedClauseCS__Group__0 ) ) ;
    public final void ruleRoundBracketedClauseCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2273:2: ( ( ( rule__RoundBracketedClauseCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2274:1: ( ( rule__RoundBracketedClauseCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2274:1: ( ( rule__RoundBracketedClauseCS__Group__0 ) )
            // InternalImperativeOCL.g:2275:1: ( rule__RoundBracketedClauseCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2276:1: ( rule__RoundBracketedClauseCS__Group__0 )
            // InternalImperativeOCL.g:2276:2: rule__RoundBracketedClauseCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalImperativeOCL.g:2288:1: entryRuleSquareBracketedClauseCS : ruleSquareBracketedClauseCS EOF ;
    public final void entryRuleSquareBracketedClauseCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2289:1: ( ruleSquareBracketedClauseCS EOF )
            // InternalImperativeOCL.g:2290:1: ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalImperativeOCL.g:2297:1: ruleSquareBracketedClauseCS : ( ( rule__SquareBracketedClauseCS__Group__0 ) ) ;
    public final void ruleSquareBracketedClauseCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2301:2: ( ( ( rule__SquareBracketedClauseCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2302:1: ( ( rule__SquareBracketedClauseCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2302:1: ( ( rule__SquareBracketedClauseCS__Group__0 ) )
            // InternalImperativeOCL.g:2303:1: ( rule__SquareBracketedClauseCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2304:1: ( rule__SquareBracketedClauseCS__Group__0 )
            // InternalImperativeOCL.g:2304:2: rule__SquareBracketedClauseCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalImperativeOCL.g:2316:1: entryRuleNavigatingArgCS : ruleNavigatingArgCS EOF ;
    public final void entryRuleNavigatingArgCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2317:1: ( ruleNavigatingArgCS EOF )
            // InternalImperativeOCL.g:2318:1: ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalImperativeOCL.g:2325:1: ruleNavigatingArgCS : ( ( rule__NavigatingArgCS__Alternatives ) ) ;
    public final void ruleNavigatingArgCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2329:2: ( ( ( rule__NavigatingArgCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2330:1: ( ( rule__NavigatingArgCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2330:1: ( ( rule__NavigatingArgCS__Alternatives ) )
            // InternalImperativeOCL.g:2331:1: ( rule__NavigatingArgCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2332:1: ( rule__NavigatingArgCS__Alternatives )
            // InternalImperativeOCL.g:2332:2: rule__NavigatingArgCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalImperativeOCL.g:2344:1: entryRuleNavigatingBarArgCS : ruleNavigatingBarArgCS EOF ;
    public final void entryRuleNavigatingBarArgCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2345:1: ( ruleNavigatingBarArgCS EOF )
            // InternalImperativeOCL.g:2346:1: ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalImperativeOCL.g:2353:1: ruleNavigatingBarArgCS : ( ( rule__NavigatingBarArgCS__Group__0 ) ) ;
    public final void ruleNavigatingBarArgCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2357:2: ( ( ( rule__NavigatingBarArgCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2358:1: ( ( rule__NavigatingBarArgCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2358:1: ( ( rule__NavigatingBarArgCS__Group__0 ) )
            // InternalImperativeOCL.g:2359:1: ( rule__NavigatingBarArgCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2360:1: ( rule__NavigatingBarArgCS__Group__0 )
            // InternalImperativeOCL.g:2360:2: rule__NavigatingBarArgCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalImperativeOCL.g:2372:1: entryRuleNavigatingCommaArgCS : ruleNavigatingCommaArgCS EOF ;
    public final void entryRuleNavigatingCommaArgCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2373:1: ( ruleNavigatingCommaArgCS EOF )
            // InternalImperativeOCL.g:2374:1: ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalImperativeOCL.g:2381:1: ruleNavigatingCommaArgCS : ( ( rule__NavigatingCommaArgCS__Group__0 ) ) ;
    public final void ruleNavigatingCommaArgCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2385:2: ( ( ( rule__NavigatingCommaArgCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2386:1: ( ( rule__NavigatingCommaArgCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2386:1: ( ( rule__NavigatingCommaArgCS__Group__0 ) )
            // InternalImperativeOCL.g:2387:1: ( rule__NavigatingCommaArgCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2388:1: ( rule__NavigatingCommaArgCS__Group__0 )
            // InternalImperativeOCL.g:2388:2: rule__NavigatingCommaArgCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalImperativeOCL.g:2400:1: entryRuleNavigatingSemiArgCS : ruleNavigatingSemiArgCS EOF ;
    public final void entryRuleNavigatingSemiArgCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2401:1: ( ruleNavigatingSemiArgCS EOF )
            // InternalImperativeOCL.g:2402:1: ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalImperativeOCL.g:2409:1: ruleNavigatingSemiArgCS : ( ( rule__NavigatingSemiArgCS__Group__0 ) ) ;
    public final void ruleNavigatingSemiArgCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2413:2: ( ( ( rule__NavigatingSemiArgCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2414:1: ( ( rule__NavigatingSemiArgCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2414:1: ( ( rule__NavigatingSemiArgCS__Group__0 ) )
            // InternalImperativeOCL.g:2415:1: ( rule__NavigatingSemiArgCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2416:1: ( rule__NavigatingSemiArgCS__Group__0 )
            // InternalImperativeOCL.g:2416:2: rule__NavigatingSemiArgCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalImperativeOCL.g:2428:1: entryRuleNavigatingArgExpCS : ruleNavigatingArgExpCS EOF ;
    public final void entryRuleNavigatingArgExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2429:1: ( ruleNavigatingArgExpCS EOF )
            // InternalImperativeOCL.g:2430:1: ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalImperativeOCL.g:2437:1: ruleNavigatingArgExpCS : ( ruleExpCS ) ;
    public final void ruleNavigatingArgExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2441:2: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:2442:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:2442:1: ( ruleExpCS )
            // InternalImperativeOCL.g:2443:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalImperativeOCL.g:2456:1: entryRuleIfExpCS : ruleIfExpCS EOF ;
    public final void entryRuleIfExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2457:1: ( ruleIfExpCS EOF )
            // InternalImperativeOCL.g:2458:1: ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIfExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalImperativeOCL.g:2465:1: ruleIfExpCS : ( ( rule__IfExpCS__Group__0 ) ) ;
    public final void ruleIfExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2469:2: ( ( ( rule__IfExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2470:1: ( ( rule__IfExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2470:1: ( ( rule__IfExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2471:1: ( rule__IfExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2472:1: ( rule__IfExpCS__Group__0 )
            // InternalImperativeOCL.g:2472:2: rule__IfExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalImperativeOCL.g:2484:1: entryRuleElseIfThenExpCS : ruleElseIfThenExpCS EOF ;
    public final void entryRuleElseIfThenExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2485:1: ( ruleElseIfThenExpCS EOF )
            // InternalImperativeOCL.g:2486:1: ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalImperativeOCL.g:2493:1: ruleElseIfThenExpCS : ( ( rule__ElseIfThenExpCS__Group__0 ) ) ;
    public final void ruleElseIfThenExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2497:2: ( ( ( rule__ElseIfThenExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2498:1: ( ( rule__ElseIfThenExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2498:1: ( ( rule__ElseIfThenExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2499:1: ( rule__ElseIfThenExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2500:1: ( rule__ElseIfThenExpCS__Group__0 )
            // InternalImperativeOCL.g:2500:2: rule__ElseIfThenExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalImperativeOCL.g:2512:1: entryRuleLetExpCS : ruleLetExpCS EOF ;
    public final void entryRuleLetExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2513:1: ( ruleLetExpCS EOF )
            // InternalImperativeOCL.g:2514:1: ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLetExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalImperativeOCL.g:2521:1: ruleLetExpCS : ( ( rule__LetExpCS__Group__0 ) ) ;
    public final void ruleLetExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2525:2: ( ( ( rule__LetExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2526:1: ( ( rule__LetExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2526:1: ( ( rule__LetExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2527:1: ( rule__LetExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2528:1: ( rule__LetExpCS__Group__0 )
            // InternalImperativeOCL.g:2528:2: rule__LetExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalImperativeOCL.g:2540:1: entryRuleLetVariableCS : ruleLetVariableCS EOF ;
    public final void entryRuleLetVariableCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2541:1: ( ruleLetVariableCS EOF )
            // InternalImperativeOCL.g:2542:1: ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalImperativeOCL.g:2549:1: ruleLetVariableCS : ( ( rule__LetVariableCS__Group__0 ) ) ;
    public final void ruleLetVariableCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2553:2: ( ( ( rule__LetVariableCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2554:1: ( ( rule__LetVariableCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2554:1: ( ( rule__LetVariableCS__Group__0 ) )
            // InternalImperativeOCL.g:2555:1: ( rule__LetVariableCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2556:1: ( rule__LetVariableCS__Group__0 )
            // InternalImperativeOCL.g:2556:2: rule__LetVariableCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalImperativeOCL.g:2568:1: entryRuleNestedExpCS : ruleNestedExpCS EOF ;
    public final void entryRuleNestedExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2569:1: ( ruleNestedExpCS EOF )
            // InternalImperativeOCL.g:2570:1: ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalImperativeOCL.g:2577:1: ruleNestedExpCS : ( ( rule__NestedExpCS__Group__0 ) ) ;
    public final void ruleNestedExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2581:2: ( ( ( rule__NestedExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2582:1: ( ( rule__NestedExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2582:1: ( ( rule__NestedExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2583:1: ( rule__NestedExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2584:1: ( rule__NestedExpCS__Group__0 )
            // InternalImperativeOCL.g:2584:2: rule__NestedExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalImperativeOCL.g:2596:1: entryRuleSelfExpCS : ruleSelfExpCS EOF ;
    public final void entryRuleSelfExpCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2597:1: ( ruleSelfExpCS EOF )
            // InternalImperativeOCL.g:2598:1: ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelfExpCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalImperativeOCL.g:2605:1: ruleSelfExpCS : ( ( rule__SelfExpCS__Group__0 ) ) ;
    public final void ruleSelfExpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2609:2: ( ( ( rule__SelfExpCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2610:1: ( ( rule__SelfExpCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2610:1: ( ( rule__SelfExpCS__Group__0 ) )
            // InternalImperativeOCL.g:2611:1: ( rule__SelfExpCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelfExpCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2612:1: ( rule__SelfExpCS__Group__0 )
            // InternalImperativeOCL.g:2612:2: rule__SelfExpCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SelfExpCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelfExpCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalImperativeOCL.g:2624:1: entryRuleMultiplicityBoundsCS : ruleMultiplicityBoundsCS EOF ;
    public final void entryRuleMultiplicityBoundsCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2625:1: ( ruleMultiplicityBoundsCS EOF )
            // InternalImperativeOCL.g:2626:1: ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalImperativeOCL.g:2633:1: ruleMultiplicityBoundsCS : ( ( rule__MultiplicityBoundsCS__Group__0 ) ) ;
    public final void ruleMultiplicityBoundsCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2637:2: ( ( ( rule__MultiplicityBoundsCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2638:1: ( ( rule__MultiplicityBoundsCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2638:1: ( ( rule__MultiplicityBoundsCS__Group__0 ) )
            // InternalImperativeOCL.g:2639:1: ( rule__MultiplicityBoundsCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2640:1: ( rule__MultiplicityBoundsCS__Group__0 )
            // InternalImperativeOCL.g:2640:2: rule__MultiplicityBoundsCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalImperativeOCL.g:2652:1: entryRuleMultiplicityCS : ruleMultiplicityCS EOF ;
    public final void entryRuleMultiplicityCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2653:1: ( ruleMultiplicityCS EOF )
            // InternalImperativeOCL.g:2654:1: ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalImperativeOCL.g:2661:1: ruleMultiplicityCS : ( ( rule__MultiplicityCS__Group__0 ) ) ;
    public final void ruleMultiplicityCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2665:2: ( ( ( rule__MultiplicityCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2666:1: ( ( rule__MultiplicityCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2666:1: ( ( rule__MultiplicityCS__Group__0 ) )
            // InternalImperativeOCL.g:2667:1: ( rule__MultiplicityCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2668:1: ( rule__MultiplicityCS__Group__0 )
            // InternalImperativeOCL.g:2668:2: rule__MultiplicityCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalImperativeOCL.g:2680:1: entryRuleMultiplicityStringCS : ruleMultiplicityStringCS EOF ;
    public final void entryRuleMultiplicityStringCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2681:1: ( ruleMultiplicityStringCS EOF )
            // InternalImperativeOCL.g:2682:1: ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityStringCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalImperativeOCL.g:2689:1: ruleMultiplicityStringCS : ( ( rule__MultiplicityStringCS__StringBoundsAssignment ) ) ;
    public final void ruleMultiplicityStringCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2693:2: ( ( ( rule__MultiplicityStringCS__StringBoundsAssignment ) ) )
            // InternalImperativeOCL.g:2694:1: ( ( rule__MultiplicityStringCS__StringBoundsAssignment ) )
            {
            // InternalImperativeOCL.g:2694:1: ( ( rule__MultiplicityStringCS__StringBoundsAssignment ) )
            // InternalImperativeOCL.g:2695:1: ( rule__MultiplicityStringCS__StringBoundsAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment());
            }
            // InternalImperativeOCL.g:2696:1: ( rule__MultiplicityStringCS__StringBoundsAssignment )
            // InternalImperativeOCL.g:2696:2: rule__MultiplicityStringCS__StringBoundsAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityStringCS__StringBoundsAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalImperativeOCL.g:2708:1: entryRulePathNameCS : rulePathNameCS EOF ;
    public final void entryRulePathNameCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2709:1: ( rulePathNameCS EOF )
            // InternalImperativeOCL.g:2710:1: rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePathNameCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalImperativeOCL.g:2717:1: rulePathNameCS : ( ( rule__PathNameCS__Group__0 ) ) ;
    public final void rulePathNameCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2721:2: ( ( ( rule__PathNameCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2722:1: ( ( rule__PathNameCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2722:1: ( ( rule__PathNameCS__Group__0 ) )
            // InternalImperativeOCL.g:2723:1: ( rule__PathNameCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2724:1: ( rule__PathNameCS__Group__0 )
            // InternalImperativeOCL.g:2724:2: rule__PathNameCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalImperativeOCL.g:2736:1: entryRuleFirstPathElementCS : ruleFirstPathElementCS EOF ;
    public final void entryRuleFirstPathElementCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2737:1: ( ruleFirstPathElementCS EOF )
            // InternalImperativeOCL.g:2738:1: ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstPathElementCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalImperativeOCL.g:2745:1: ruleFirstPathElementCS : ( ( rule__FirstPathElementCS__ReferredElementAssignment ) ) ;
    public final void ruleFirstPathElementCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2749:2: ( ( ( rule__FirstPathElementCS__ReferredElementAssignment ) ) )
            // InternalImperativeOCL.g:2750:1: ( ( rule__FirstPathElementCS__ReferredElementAssignment ) )
            {
            // InternalImperativeOCL.g:2750:1: ( ( rule__FirstPathElementCS__ReferredElementAssignment ) )
            // InternalImperativeOCL.g:2751:1: ( rule__FirstPathElementCS__ReferredElementAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstPathElementCSAccess().getReferredElementAssignment());
            }
            // InternalImperativeOCL.g:2752:1: ( rule__FirstPathElementCS__ReferredElementAssignment )
            // InternalImperativeOCL.g:2752:2: rule__FirstPathElementCS__ReferredElementAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FirstPathElementCS__ReferredElementAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstPathElementCSAccess().getReferredElementAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalImperativeOCL.g:2764:1: entryRuleNextPathElementCS : ruleNextPathElementCS EOF ;
    public final void entryRuleNextPathElementCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2765:1: ( ruleNextPathElementCS EOF )
            // InternalImperativeOCL.g:2766:1: ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNextPathElementCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalImperativeOCL.g:2773:1: ruleNextPathElementCS : ( ( rule__NextPathElementCS__ReferredElementAssignment ) ) ;
    public final void ruleNextPathElementCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2777:2: ( ( ( rule__NextPathElementCS__ReferredElementAssignment ) ) )
            // InternalImperativeOCL.g:2778:1: ( ( rule__NextPathElementCS__ReferredElementAssignment ) )
            {
            // InternalImperativeOCL.g:2778:1: ( ( rule__NextPathElementCS__ReferredElementAssignment ) )
            // InternalImperativeOCL.g:2779:1: ( rule__NextPathElementCS__ReferredElementAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNextPathElementCSAccess().getReferredElementAssignment());
            }
            // InternalImperativeOCL.g:2780:1: ( rule__NextPathElementCS__ReferredElementAssignment )
            // InternalImperativeOCL.g:2780:2: rule__NextPathElementCS__ReferredElementAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NextPathElementCS__ReferredElementAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNextPathElementCSAccess().getReferredElementAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalImperativeOCL.g:2792:1: entryRuleTemplateBindingCS : ruleTemplateBindingCS EOF ;
    public final void entryRuleTemplateBindingCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2793:1: ( ruleTemplateBindingCS EOF )
            // InternalImperativeOCL.g:2794:1: ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalImperativeOCL.g:2801:1: ruleTemplateBindingCS : ( ( rule__TemplateBindingCS__Group__0 ) ) ;
    public final void ruleTemplateBindingCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2805:2: ( ( ( rule__TemplateBindingCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2806:1: ( ( rule__TemplateBindingCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2806:1: ( ( rule__TemplateBindingCS__Group__0 ) )
            // InternalImperativeOCL.g:2807:1: ( rule__TemplateBindingCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2808:1: ( rule__TemplateBindingCS__Group__0 )
            // InternalImperativeOCL.g:2808:2: rule__TemplateBindingCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalImperativeOCL.g:2820:1: entryRuleTemplateParameterSubstitutionCS : ruleTemplateParameterSubstitutionCS EOF ;
    public final void entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2821:1: ( ruleTemplateParameterSubstitutionCS EOF )
            // InternalImperativeOCL.g:2822:1: ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalImperativeOCL.g:2829:1: ruleTemplateParameterSubstitutionCS : ( ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment ) ) ;
    public final void ruleTemplateParameterSubstitutionCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2833:2: ( ( ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment ) ) )
            // InternalImperativeOCL.g:2834:1: ( ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment ) )
            {
            // InternalImperativeOCL.g:2834:1: ( ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment ) )
            // InternalImperativeOCL.g:2835:1: ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterAssignment());
            }
            // InternalImperativeOCL.g:2836:1: ( rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment )
            // InternalImperativeOCL.g:2836:2: rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterAssignment());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalImperativeOCL.g:2850:1: entryRuleTypeParameterCS : ruleTypeParameterCS EOF ;
    public final void entryRuleTypeParameterCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2851:1: ( ruleTypeParameterCS EOF )
            // InternalImperativeOCL.g:2852:1: ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalImperativeOCL.g:2859:1: ruleTypeParameterCS : ( ( rule__TypeParameterCS__Group__0 ) ) ;
    public final void ruleTypeParameterCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2863:2: ( ( ( rule__TypeParameterCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2864:1: ( ( rule__TypeParameterCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2864:1: ( ( rule__TypeParameterCS__Group__0 ) )
            // InternalImperativeOCL.g:2865:1: ( rule__TypeParameterCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2866:1: ( rule__TypeParameterCS__Group__0 )
            // InternalImperativeOCL.g:2866:2: rule__TypeParameterCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalImperativeOCL.g:2878:1: entryRuleTypeRefCS : ruleTypeRefCS EOF ;
    public final void entryRuleTypeRefCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2879:1: ( ruleTypeRefCS EOF )
            // InternalImperativeOCL.g:2880:1: ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalImperativeOCL.g:2887:1: ruleTypeRefCS : ( ( rule__TypeRefCS__Alternatives ) ) ;
    public final void ruleTypeRefCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2891:2: ( ( ( rule__TypeRefCS__Alternatives ) ) )
            // InternalImperativeOCL.g:2892:1: ( ( rule__TypeRefCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:2892:1: ( ( rule__TypeRefCS__Alternatives ) )
            // InternalImperativeOCL.g:2893:1: ( rule__TypeRefCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:2894:1: ( rule__TypeRefCS__Alternatives )
            // InternalImperativeOCL.g:2894:2: rule__TypeRefCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeRefCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalImperativeOCL.g:2906:1: entryRuleTypedRefCS : ruleTypedRefCS EOF ;
    public final void entryRuleTypedRefCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2907:1: ( ruleTypedRefCS EOF )
            // InternalImperativeOCL.g:2908:1: ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedRefCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalImperativeOCL.g:2915:1: ruleTypedRefCS : ( ruleTypedTypeRefCS ) ;
    public final void ruleTypedRefCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2919:2: ( ( ruleTypedTypeRefCS ) )
            // InternalImperativeOCL.g:2920:1: ( ruleTypedTypeRefCS )
            {
            // InternalImperativeOCL.g:2920:1: ( ruleTypedTypeRefCS )
            // InternalImperativeOCL.g:2921:1: ruleTypedTypeRefCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalImperativeOCL.g:2934:1: entryRuleTypedTypeRefCS : ruleTypedTypeRefCS EOF ;
    public final void entryRuleTypedTypeRefCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2935:1: ( ruleTypedTypeRefCS EOF )
            // InternalImperativeOCL.g:2936:1: ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalImperativeOCL.g:2943:1: ruleTypedTypeRefCS : ( ( rule__TypedTypeRefCS__Group__0 ) ) ;
    public final void ruleTypedTypeRefCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2947:2: ( ( ( rule__TypedTypeRefCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2948:1: ( ( rule__TypedTypeRefCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2948:1: ( ( rule__TypedTypeRefCS__Group__0 ) )
            // InternalImperativeOCL.g:2949:1: ( rule__TypedTypeRefCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2950:1: ( rule__TypedTypeRefCS__Group__0 )
            // InternalImperativeOCL.g:2950:2: rule__TypedTypeRefCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalImperativeOCL.g:2962:1: entryRuleWildcardTypeRefCS : ruleWildcardTypeRefCS EOF ;
    public final void entryRuleWildcardTypeRefCS() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2963:1: ( ruleWildcardTypeRefCS EOF )
            // InternalImperativeOCL.g:2964:1: ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalImperativeOCL.g:2971:1: ruleWildcardTypeRefCS : ( ( rule__WildcardTypeRefCS__Group__0 ) ) ;
    public final void ruleWildcardTypeRefCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:2975:2: ( ( ( rule__WildcardTypeRefCS__Group__0 ) ) )
            // InternalImperativeOCL.g:2976:1: ( ( rule__WildcardTypeRefCS__Group__0 ) )
            {
            // InternalImperativeOCL.g:2976:1: ( ( rule__WildcardTypeRefCS__Group__0 ) )
            // InternalImperativeOCL.g:2977:1: ( rule__WildcardTypeRefCS__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getGroup());
            }
            // InternalImperativeOCL.g:2978:1: ( rule__WildcardTypeRefCS__Group__0 )
            // InternalImperativeOCL.g:2978:2: rule__WildcardTypeRefCS__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getGroup());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalImperativeOCL.g:2990:1: entryRuleID : ruleID EOF ;
    public final void entryRuleID() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:2991:1: ( ruleID EOF )
            // InternalImperativeOCL.g:2992:1: ruleID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalImperativeOCL.g:2999:1: ruleID : ( ( rule__ID__Alternatives ) ) ;
    public final void ruleID() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3003:2: ( ( ( rule__ID__Alternatives ) ) )
            // InternalImperativeOCL.g:3004:1: ( ( rule__ID__Alternatives ) )
            {
            // InternalImperativeOCL.g:3004:1: ( ( rule__ID__Alternatives ) )
            // InternalImperativeOCL.g:3005:1: ( rule__ID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:3006:1: ( rule__ID__Alternatives )
            // InternalImperativeOCL.g:3006:2: rule__ID__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalImperativeOCL.g:3018:1: entryRuleIdentifier : ruleIdentifier EOF ;
    public final void entryRuleIdentifier() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:3019:1: ( ruleIdentifier EOF )
            // InternalImperativeOCL.g:3020:1: ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalImperativeOCL.g:3027:1: ruleIdentifier : ( ruleID ) ;
    public final void ruleIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3031:2: ( ( ruleID ) )
            // InternalImperativeOCL.g:3032:1: ( ruleID )
            {
            // InternalImperativeOCL.g:3032:1: ( ruleID )
            // InternalImperativeOCL.g:3033:1: ruleID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getIDParserRuleCall());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getIDParserRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalImperativeOCL.g:3046:1: entryRuleLOWER : ruleLOWER EOF ;
    public final void entryRuleLOWER() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:3047:1: ( ruleLOWER EOF )
            // InternalImperativeOCL.g:3048:1: ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLOWER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLOWERRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalImperativeOCL.g:3055:1: ruleLOWER : ( RULE_INT ) ;
    public final void ruleLOWER() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3059:2: ( ( RULE_INT ) )
            // InternalImperativeOCL.g:3060:1: ( RULE_INT )
            {
            // InternalImperativeOCL.g:3060:1: ( RULE_INT )
            // InternalImperativeOCL.g:3061:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLOWERAccess().getINTTerminalRuleCall());
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLOWERAccess().getINTTerminalRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalImperativeOCL.g:3074:1: entryRuleNUMBER_LITERAL : ruleNUMBER_LITERAL EOF ;
    public final void entryRuleNUMBER_LITERAL() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:3075:1: ( ruleNUMBER_LITERAL EOF )
            // InternalImperativeOCL.g:3076:1: ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMBER_LITERALRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalImperativeOCL.g:3083:1: ruleNUMBER_LITERAL : ( RULE_INT ) ;
    public final void ruleNUMBER_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3087:2: ( ( RULE_INT ) )
            // InternalImperativeOCL.g:3088:1: ( RULE_INT )
            {
            // InternalImperativeOCL.g:3088:1: ( RULE_INT )
            // InternalImperativeOCL.g:3089:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleUPPER"
    // InternalImperativeOCL.g:3102:1: entryRuleUPPER : ruleUPPER EOF ;
    public final void entryRuleUPPER() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:3103:1: ( ruleUPPER EOF )
            // InternalImperativeOCL.g:3104:1: ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUPPER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUPPERRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalImperativeOCL.g:3111:1: ruleUPPER : ( ( rule__UPPER__Alternatives ) ) ;
    public final void ruleUPPER() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3115:2: ( ( ( rule__UPPER__Alternatives ) ) )
            // InternalImperativeOCL.g:3116:1: ( ( rule__UPPER__Alternatives ) )
            {
            // InternalImperativeOCL.g:3116:1: ( ( rule__UPPER__Alternatives ) )
            // InternalImperativeOCL.g:3117:1: ( rule__UPPER__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUPPERAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:3118:1: ( rule__UPPER__Alternatives )
            // InternalImperativeOCL.g:3118:2: rule__UPPER__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UPPER__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUPPERAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalImperativeOCL.g:3130:1: entryRuleURI : ruleURI EOF ;
    public final void entryRuleURI() throws RecognitionException {
        try {
            // InternalImperativeOCL.g:3131:1: ( ruleURI EOF )
            // InternalImperativeOCL.g:3132:1: ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleURI();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIRule());
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalImperativeOCL.g:3139:1: ruleURI : ( RULE_SINGLE_QUOTED_STRING ) ;
    public final void ruleURI() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3143:2: ( ( RULE_SINGLE_QUOTED_STRING ) )
            // InternalImperativeOCL.g:3144:1: ( RULE_SINGLE_QUOTED_STRING )
            {
            // InternalImperativeOCL.g:3144:1: ( RULE_SINGLE_QUOTED_STRING )
            // InternalImperativeOCL.g:3145:1: RULE_SINGLE_QUOTED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());
            }
            match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleURI"


    // $ANTLR start "ruleSeverityKindCS"
    // InternalImperativeOCL.g:3159:1: ruleSeverityKindCS : ( ( rule__SeverityKindCS__Alternatives ) ) ;
    public final void ruleSeverityKindCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3163:1: ( ( ( rule__SeverityKindCS__Alternatives ) ) )
            // InternalImperativeOCL.g:3164:1: ( ( rule__SeverityKindCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:3164:1: ( ( rule__SeverityKindCS__Alternatives ) )
            // InternalImperativeOCL.g:3165:1: ( rule__SeverityKindCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSeverityKindCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:3166:1: ( rule__SeverityKindCS__Alternatives )
            // InternalImperativeOCL.g:3166:2: rule__SeverityKindCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SeverityKindCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSeverityKindCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSeverityKindCS"


    // $ANTLR start "ruleInitOpCS"
    // InternalImperativeOCL.g:3178:1: ruleInitOpCS : ( ( rule__InitOpCS__Alternatives ) ) ;
    public final void ruleInitOpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3182:1: ( ( ( rule__InitOpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:3183:1: ( ( rule__InitOpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:3183:1: ( ( rule__InitOpCS__Alternatives ) )
            // InternalImperativeOCL.g:3184:1: ( rule__InitOpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitOpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:3185:1: ( rule__InitOpCS__Alternatives )
            // InternalImperativeOCL.g:3185:2: rule__InitOpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitOpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitOpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitOpCS"


    // $ANTLR start "ruleAssignOpCS"
    // InternalImperativeOCL.g:3197:1: ruleAssignOpCS : ( ( rule__AssignOpCS__Alternatives ) ) ;
    public final void ruleAssignOpCS() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3201:1: ( ( ( rule__AssignOpCS__Alternatives ) ) )
            // InternalImperativeOCL.g:3202:1: ( ( rule__AssignOpCS__Alternatives ) )
            {
            // InternalImperativeOCL.g:3202:1: ( ( rule__AssignOpCS__Alternatives ) )
            // InternalImperativeOCL.g:3203:1: ( rule__AssignOpCS__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignOpCSAccess().getAlternatives());
            }
            // InternalImperativeOCL.g:3204:1: ( rule__AssignOpCS__Alternatives )
            // InternalImperativeOCL.g:3204:2: rule__AssignOpCS__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignOpCS__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignOpCSAccess().getAlternatives());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignOpCS"


    // $ANTLR start "rule__TypeLiteralCS__Alternatives"
    // InternalImperativeOCL.g:3215:1: rule__TypeLiteralCS__Alternatives : ( ( rulePrimitiveTypeCS ) | ( ruleCollectionTypeCS ) | ( ruleMapTypeCS ) | ( ruleTupleTypeCS ) | ( ruleListTypeCS ) | ( ruleDictTypeCS ) );
    public final void rule__TypeLiteralCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3219:1: ( ( rulePrimitiveTypeCS ) | ( ruleCollectionTypeCS ) | ( ruleMapTypeCS ) | ( ruleTupleTypeCS ) | ( ruleListTypeCS ) | ( ruleDictTypeCS ) )
            int alt2=6;
            switch ( input.LA(1) ) {
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
                {
                alt2=1;
                }
                break;
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
                {
                alt2=2;
                }
                break;
            case 40:
                {
                alt2=3;
                }
                break;
            case 41:
                {
                alt2=4;
                }
                break;
            case 63:
                {
                alt2=5;
                }
                break;
            case 66:
                {
                alt2=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalImperativeOCL.g:3220:1: ( rulePrimitiveTypeCS )
                    {
                    // InternalImperativeOCL.g:3220:1: ( rulePrimitiveTypeCS )
                    // InternalImperativeOCL.g:3221:1: rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3226:6: ( ruleCollectionTypeCS )
                    {
                    // InternalImperativeOCL.g:3226:6: ( ruleCollectionTypeCS )
                    // InternalImperativeOCL.g:3227:1: ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3232:6: ( ruleMapTypeCS )
                    {
                    // InternalImperativeOCL.g:3232:6: ( ruleMapTypeCS )
                    // InternalImperativeOCL.g:3233:1: ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3238:6: ( ruleTupleTypeCS )
                    {
                    // InternalImperativeOCL.g:3238:6: ( ruleTupleTypeCS )
                    // InternalImperativeOCL.g:3239:1: ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3244:6: ( ruleListTypeCS )
                    {
                    // InternalImperativeOCL.g:3244:6: ( ruleListTypeCS )
                    // InternalImperativeOCL.g:3245:1: ruleListTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getListTypeCSParserRuleCall_4());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleListTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getListTypeCSParserRuleCall_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:3250:6: ( ruleDictTypeCS )
                    {
                    // InternalImperativeOCL.g:3250:6: ( ruleDictTypeCS )
                    // InternalImperativeOCL.g:3251:1: ruleDictTypeCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLiteralCSAccess().getDictTypeCSParserRuleCall_5());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDictTypeCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLiteralCSAccess().getDictTypeCSParserRuleCall_5());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralCS__Alternatives"


    // $ANTLR start "rule__PrimaryExpCS__Alternatives"
    // InternalImperativeOCL.g:3261:1: rule__PrimaryExpCS__Alternatives : ( ( ruleNestedExpCS ) | ( ruleIfExpCS ) | ( ruleSelfExpCS ) | ( rulePrimitiveLiteralExpCS ) | ( ruleTupleLiteralExpCS ) | ( ruleMapLiteralExpCS ) | ( ruleCollectionLiteralExpCS ) | ( ruleLambdaLiteralExpCS ) | ( ruleImperativeExpCS ) | ( ruleNameExpCS ) );
    public final void rule__PrimaryExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3265:1: ( ( ruleNestedExpCS ) | ( ruleIfExpCS ) | ( ruleSelfExpCS ) | ( rulePrimitiveLiteralExpCS ) | ( ruleTupleLiteralExpCS ) | ( ruleMapLiteralExpCS ) | ( ruleCollectionLiteralExpCS ) | ( ruleLambdaLiteralExpCS ) | ( ruleImperativeExpCS ) | ( ruleNameExpCS ) )
            int alt3=10;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalImperativeOCL.g:3266:1: ( ruleNestedExpCS )
                    {
                    // InternalImperativeOCL.g:3266:1: ( ruleNestedExpCS )
                    // InternalImperativeOCL.g:3267:1: ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3272:6: ( ruleIfExpCS )
                    {
                    // InternalImperativeOCL.g:3272:6: ( ruleIfExpCS )
                    // InternalImperativeOCL.g:3273:1: ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3278:6: ( ruleSelfExpCS )
                    {
                    // InternalImperativeOCL.g:3278:6: ( ruleSelfExpCS )
                    // InternalImperativeOCL.g:3279:1: ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3284:6: ( rulePrimitiveLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3284:6: ( rulePrimitiveLiteralExpCS )
                    // InternalImperativeOCL.g:3285:1: rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3290:6: ( ruleTupleLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3290:6: ( ruleTupleLiteralExpCS )
                    // InternalImperativeOCL.g:3291:1: ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:3296:6: ( ruleMapLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3296:6: ( ruleMapLiteralExpCS )
                    // InternalImperativeOCL.g:3297:1: ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalImperativeOCL.g:3302:6: ( ruleCollectionLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3302:6: ( ruleCollectionLiteralExpCS )
                    // InternalImperativeOCL.g:3303:1: ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalImperativeOCL.g:3308:6: ( ruleLambdaLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3308:6: ( ruleLambdaLiteralExpCS )
                    // InternalImperativeOCL.g:3309:1: ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalImperativeOCL.g:3314:6: ( ruleImperativeExpCS )
                    {
                    // InternalImperativeOCL.g:3314:6: ( ruleImperativeExpCS )
                    // InternalImperativeOCL.g:3315:1: ruleImperativeExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getImperativeExpCSParserRuleCall_8());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleImperativeExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getImperativeExpCSParserRuleCall_8());
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalImperativeOCL.g:3320:6: ( ruleNameExpCS )
                    {
                    // InternalImperativeOCL.g:3320:6: ( ruleNameExpCS )
                    // InternalImperativeOCL.g:3321:1: ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpCS__Alternatives"


    // $ANTLR start "rule__ImperativeExpCS__Alternatives"
    // InternalImperativeOCL.g:3331:1: rule__ImperativeExpCS__Alternatives : ( ( ruleExpressionBlockCS ) | ( ruleAssertExpCS ) | ( ruleBreakExpCS ) | ( ruleContinueExpCS ) | ( ruleInstantiationExpCS ) | ( ruleLogExpCS ) | ( ruleRaiseExpCS ) | ( ruleVarsInitializationCS ) | ( ruleListLiteralExpCS ) | ( ruleDictLiteralExpCS ) | ( ruleTypeLiteralExpCS ) | ( ruleReturnExpCS ) | ( ruleComputeExpCS ) | ( ruleForExpCS ) | ( ruleWhileExpCS ) | ( ruleImperativeIterateExpCS ) | ( ruleSwitchExpCS ) | ( ruleAssignExpCS ) | ( ruleTryExpCS ) );
    public final void rule__ImperativeExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3335:1: ( ( ruleExpressionBlockCS ) | ( ruleAssertExpCS ) | ( ruleBreakExpCS ) | ( ruleContinueExpCS ) | ( ruleInstantiationExpCS ) | ( ruleLogExpCS ) | ( ruleRaiseExpCS ) | ( ruleVarsInitializationCS ) | ( ruleListLiteralExpCS ) | ( ruleDictLiteralExpCS ) | ( ruleTypeLiteralExpCS ) | ( ruleReturnExpCS ) | ( ruleComputeExpCS ) | ( ruleForExpCS ) | ( ruleWhileExpCS ) | ( ruleImperativeIterateExpCS ) | ( ruleSwitchExpCS ) | ( ruleAssignExpCS ) | ( ruleTryExpCS ) )
            int alt4=19;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalImperativeOCL.g:3336:1: ( ruleExpressionBlockCS )
                    {
                    // InternalImperativeOCL.g:3336:1: ( ruleExpressionBlockCS )
                    // InternalImperativeOCL.g:3337:1: ruleExpressionBlockCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getExpressionBlockCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpressionBlockCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getExpressionBlockCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3342:6: ( ruleAssertExpCS )
                    {
                    // InternalImperativeOCL.g:3342:6: ( ruleAssertExpCS )
                    // InternalImperativeOCL.g:3343:1: ruleAssertExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getAssertExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAssertExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getAssertExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3348:6: ( ruleBreakExpCS )
                    {
                    // InternalImperativeOCL.g:3348:6: ( ruleBreakExpCS )
                    // InternalImperativeOCL.g:3349:1: ruleBreakExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getBreakExpCSParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBreakExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getBreakExpCSParserRuleCall_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3354:6: ( ruleContinueExpCS )
                    {
                    // InternalImperativeOCL.g:3354:6: ( ruleContinueExpCS )
                    // InternalImperativeOCL.g:3355:1: ruleContinueExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getContinueExpCSParserRuleCall_3());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleContinueExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getContinueExpCSParserRuleCall_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3360:6: ( ruleInstantiationExpCS )
                    {
                    // InternalImperativeOCL.g:3360:6: ( ruleInstantiationExpCS )
                    // InternalImperativeOCL.g:3361:1: ruleInstantiationExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getInstantiationExpCSParserRuleCall_4());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleInstantiationExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getInstantiationExpCSParserRuleCall_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:3366:6: ( ruleLogExpCS )
                    {
                    // InternalImperativeOCL.g:3366:6: ( ruleLogExpCS )
                    // InternalImperativeOCL.g:3367:1: ruleLogExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getLogExpCSParserRuleCall_5());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLogExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getLogExpCSParserRuleCall_5());
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalImperativeOCL.g:3372:6: ( ruleRaiseExpCS )
                    {
                    // InternalImperativeOCL.g:3372:6: ( ruleRaiseExpCS )
                    // InternalImperativeOCL.g:3373:1: ruleRaiseExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getRaiseExpCSParserRuleCall_6());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleRaiseExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getRaiseExpCSParserRuleCall_6());
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalImperativeOCL.g:3378:6: ( ruleVarsInitializationCS )
                    {
                    // InternalImperativeOCL.g:3378:6: ( ruleVarsInitializationCS )
                    // InternalImperativeOCL.g:3379:1: ruleVarsInitializationCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getVarsInitializationCSParserRuleCall_7());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleVarsInitializationCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getVarsInitializationCSParserRuleCall_7());
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalImperativeOCL.g:3384:6: ( ruleListLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3384:6: ( ruleListLiteralExpCS )
                    // InternalImperativeOCL.g:3385:1: ruleListLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getListLiteralExpCSParserRuleCall_8());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleListLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getListLiteralExpCSParserRuleCall_8());
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalImperativeOCL.g:3390:6: ( ruleDictLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3390:6: ( ruleDictLiteralExpCS )
                    // InternalImperativeOCL.g:3391:1: ruleDictLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getDictLiteralExpCSParserRuleCall_9());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDictLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getDictLiteralExpCSParserRuleCall_9());
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalImperativeOCL.g:3396:6: ( ruleTypeLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:3396:6: ( ruleTypeLiteralExpCS )
                    // InternalImperativeOCL.g:3397:1: ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getTypeLiteralExpCSParserRuleCall_10());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getTypeLiteralExpCSParserRuleCall_10());
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalImperativeOCL.g:3402:6: ( ruleReturnExpCS )
                    {
                    // InternalImperativeOCL.g:3402:6: ( ruleReturnExpCS )
                    // InternalImperativeOCL.g:3403:1: ruleReturnExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getReturnExpCSParserRuleCall_11());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleReturnExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getReturnExpCSParserRuleCall_11());
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalImperativeOCL.g:3408:6: ( ruleComputeExpCS )
                    {
                    // InternalImperativeOCL.g:3408:6: ( ruleComputeExpCS )
                    // InternalImperativeOCL.g:3409:1: ruleComputeExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getComputeExpCSParserRuleCall_12());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleComputeExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getComputeExpCSParserRuleCall_12());
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalImperativeOCL.g:3414:6: ( ruleForExpCS )
                    {
                    // InternalImperativeOCL.g:3414:6: ( ruleForExpCS )
                    // InternalImperativeOCL.g:3415:1: ruleForExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getForExpCSParserRuleCall_13());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleForExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getForExpCSParserRuleCall_13());
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalImperativeOCL.g:3420:6: ( ruleWhileExpCS )
                    {
                    // InternalImperativeOCL.g:3420:6: ( ruleWhileExpCS )
                    // InternalImperativeOCL.g:3421:1: ruleWhileExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getWhileExpCSParserRuleCall_14());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWhileExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getWhileExpCSParserRuleCall_14());
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalImperativeOCL.g:3426:6: ( ruleImperativeIterateExpCS )
                    {
                    // InternalImperativeOCL.g:3426:6: ( ruleImperativeIterateExpCS )
                    // InternalImperativeOCL.g:3427:1: ruleImperativeIterateExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getImperativeIterateExpCSParserRuleCall_15());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleImperativeIterateExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getImperativeIterateExpCSParserRuleCall_15());
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalImperativeOCL.g:3432:6: ( ruleSwitchExpCS )
                    {
                    // InternalImperativeOCL.g:3432:6: ( ruleSwitchExpCS )
                    // InternalImperativeOCL.g:3433:1: ruleSwitchExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getSwitchExpCSParserRuleCall_16());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSwitchExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getSwitchExpCSParserRuleCall_16());
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalImperativeOCL.g:3438:6: ( ruleAssignExpCS )
                    {
                    // InternalImperativeOCL.g:3438:6: ( ruleAssignExpCS )
                    // InternalImperativeOCL.g:3439:1: ruleAssignExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getAssignExpCSParserRuleCall_17());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAssignExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getAssignExpCSParserRuleCall_17());
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalImperativeOCL.g:3444:6: ( ruleTryExpCS )
                    {
                    // InternalImperativeOCL.g:3444:6: ( ruleTryExpCS )
                    // InternalImperativeOCL.g:3445:1: ruleTryExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeExpCSAccess().getTryExpCSParserRuleCall_18());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTryExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeExpCSAccess().getTryExpCSParserRuleCall_18());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeExpCS__Alternatives"


    // $ANTLR start "rule__ForExpCS__Alternatives_0"
    // InternalImperativeOCL.g:3455:1: rule__ForExpCS__Alternatives_0 : ( ( 'forEach' ) | ( ( rule__ForExpCS__IsOneAssignment_0_1 ) ) );
    public final void rule__ForExpCS__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3459:1: ( ( 'forEach' ) | ( ( rule__ForExpCS__IsOneAssignment_0_1 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==16) ) {
                alt5=1;
            }
            else if ( (LA5_0==113) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalImperativeOCL.g:3460:1: ( 'forEach' )
                    {
                    // InternalImperativeOCL.g:3460:1: ( 'forEach' )
                    // InternalImperativeOCL.g:3461:1: 'forEach'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForExpCSAccess().getForEachKeyword_0_0());
                    }
                    match(input,16,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForExpCSAccess().getForEachKeyword_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3468:6: ( ( rule__ForExpCS__IsOneAssignment_0_1 ) )
                    {
                    // InternalImperativeOCL.g:3468:6: ( ( rule__ForExpCS__IsOneAssignment_0_1 ) )
                    // InternalImperativeOCL.g:3469:1: ( rule__ForExpCS__IsOneAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForExpCSAccess().getIsOneAssignment_0_1());
                    }
                    // InternalImperativeOCL.g:3470:1: ( rule__ForExpCS__IsOneAssignment_0_1 )
                    // InternalImperativeOCL.g:3470:2: rule__ForExpCS__IsOneAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ForExpCS__IsOneAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForExpCSAccess().getIsOneAssignment_0_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Alternatives_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Alternatives"
    // InternalImperativeOCL.g:3479:1: rule__ImperativeIterateExpCS__Alternatives : ( ( ( rule__ImperativeIterateExpCS__Group_0__0 ) ) | ( ( rule__ImperativeIterateExpCS__Group_1__0 ) ) | ( ( rule__ImperativeIterateExpCS__Group_2__0 ) ) );
    public final void rule__ImperativeIterateExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3483:1: ( ( ( rule__ImperativeIterateExpCS__Group_0__0 ) ) | ( ( rule__ImperativeIterateExpCS__Group_1__0 ) ) | ( ( rule__ImperativeIterateExpCS__Group_2__0 ) ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case 114:
                {
                alt6=1;
                }
                break;
            case 17:
            case 18:
                {
                alt6=2;
                }
                break;
            case 19:
            case 20:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalImperativeOCL.g:3484:1: ( ( rule__ImperativeIterateExpCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:3484:1: ( ( rule__ImperativeIterateExpCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:3485:1: ( rule__ImperativeIterateExpCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:3486:1: ( rule__ImperativeIterateExpCS__Group_0__0 )
                    // InternalImperativeOCL.g:3486:2: rule__ImperativeIterateExpCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3490:6: ( ( rule__ImperativeIterateExpCS__Group_1__0 ) )
                    {
                    // InternalImperativeOCL.g:3490:6: ( ( rule__ImperativeIterateExpCS__Group_1__0 ) )
                    // InternalImperativeOCL.g:3491:1: ( rule__ImperativeIterateExpCS__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_1());
                    }
                    // InternalImperativeOCL.g:3492:1: ( rule__ImperativeIterateExpCS__Group_1__0 )
                    // InternalImperativeOCL.g:3492:2: rule__ImperativeIterateExpCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3496:6: ( ( rule__ImperativeIterateExpCS__Group_2__0 ) )
                    {
                    // InternalImperativeOCL.g:3496:6: ( ( rule__ImperativeIterateExpCS__Group_2__0 ) )
                    // InternalImperativeOCL.g:3497:1: ( rule__ImperativeIterateExpCS__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_2());
                    }
                    // InternalImperativeOCL.g:3498:1: ( rule__ImperativeIterateExpCS__Group_2__0 )
                    // InternalImperativeOCL.g:3498:2: rule__ImperativeIterateExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Alternatives"


    // $ANTLR start "rule__ImperativeIterateExpCS__NameAlternatives_1_0_0"
    // InternalImperativeOCL.g:3507:1: rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 : ( ( 'xselect' ) | ( 'xselectOne' ) );
    public final void rule__ImperativeIterateExpCS__NameAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3511:1: ( ( 'xselect' ) | ( 'xselectOne' ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==17) ) {
                alt7=1;
            }
            else if ( (LA7_0==18) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalImperativeOCL.g:3512:1: ( 'xselect' )
                    {
                    // InternalImperativeOCL.g:3512:1: ( 'xselect' )
                    // InternalImperativeOCL.g:3513:1: 'xselect'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getNameXselectKeyword_1_0_0_0());
                    }
                    match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getNameXselectKeyword_1_0_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3520:6: ( 'xselectOne' )
                    {
                    // InternalImperativeOCL.g:3520:6: ( 'xselectOne' )
                    // InternalImperativeOCL.g:3521:1: 'xselectOne'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getNameXselectOneKeyword_1_0_0_1());
                    }
                    match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getNameXselectOneKeyword_1_0_0_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__NameAlternatives_1_0_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__NameAlternatives_2_0_0"
    // InternalImperativeOCL.g:3533:1: rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 : ( ( 'xcollectselect' ) | ( 'xcollectselectOne' ) );
    public final void rule__ImperativeIterateExpCS__NameAlternatives_2_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3537:1: ( ( 'xcollectselect' ) | ( 'xcollectselectOne' ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==19) ) {
                alt8=1;
            }
            else if ( (LA8_0==20) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalImperativeOCL.g:3538:1: ( 'xcollectselect' )
                    {
                    // InternalImperativeOCL.g:3538:1: ( 'xcollectselect' )
                    // InternalImperativeOCL.g:3539:1: 'xcollectselect'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectselectKeyword_2_0_0_0());
                    }
                    match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectselectKeyword_2_0_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3546:6: ( 'xcollectselectOne' )
                    {
                    // InternalImperativeOCL.g:3546:6: ( 'xcollectselectOne' )
                    // InternalImperativeOCL.g:3547:1: 'xcollectselectOne'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectselectOneKeyword_2_0_0_1());
                    }
                    match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectselectOneKeyword_2_0_0_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__NameAlternatives_2_0_0"


    // $ANTLR start "rule__StringLiteral__Alternatives"
    // InternalImperativeOCL.g:3559:1: rule__StringLiteral__Alternatives : ( ( RULE_SINGLE_QUOTED_STRING ) | ( RULE_DOUBLE_QUOTED_STRING ) );
    public final void rule__StringLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3563:1: ( ( RULE_SINGLE_QUOTED_STRING ) | ( RULE_DOUBLE_QUOTED_STRING ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_DOUBLE_QUOTED_STRING) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalImperativeOCL.g:3564:1: ( RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalImperativeOCL.g:3564:1: ( RULE_SINGLE_QUOTED_STRING )
                    // InternalImperativeOCL.g:3565:1: RULE_SINGLE_QUOTED_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall_0());
                    }
                    match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3570:6: ( RULE_DOUBLE_QUOTED_STRING )
                    {
                    // InternalImperativeOCL.g:3570:6: ( RULE_DOUBLE_QUOTED_STRING )
                    // InternalImperativeOCL.g:3571:1: RULE_DOUBLE_QUOTED_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringLiteralAccess().getDOUBLE_QUOTED_STRINGTerminalRuleCall_1());
                    }
                    match(input,RULE_DOUBLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringLiteralAccess().getDOUBLE_QUOTED_STRINGTerminalRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringLiteral__Alternatives"


    // $ANTLR start "rule__SwitchExpCS__Alternatives"
    // InternalImperativeOCL.g:3581:1: rule__SwitchExpCS__Alternatives : ( ( ( rule__SwitchExpCS__Group_0__0 ) ) | ( ( rule__SwitchExpCS__Group_1__0 ) ) );
    public final void rule__SwitchExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3585:1: ( ( ( rule__SwitchExpCS__Group_0__0 ) ) | ( ( rule__SwitchExpCS__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==105) ) {
                alt10=1;
            }
            else if ( (LA10_0==90) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalImperativeOCL.g:3586:1: ( ( rule__SwitchExpCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:3586:1: ( ( rule__SwitchExpCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:3587:1: ( rule__SwitchExpCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSwitchExpCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:3588:1: ( rule__SwitchExpCS__Group_0__0 )
                    // InternalImperativeOCL.g:3588:2: rule__SwitchExpCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SwitchExpCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSwitchExpCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3592:6: ( ( rule__SwitchExpCS__Group_1__0 ) )
                    {
                    // InternalImperativeOCL.g:3592:6: ( ( rule__SwitchExpCS__Group_1__0 ) )
                    // InternalImperativeOCL.g:3593:1: ( rule__SwitchExpCS__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSwitchExpCSAccess().getGroup_1());
                    }
                    // InternalImperativeOCL.g:3594:1: ( rule__SwitchExpCS__Group_1__0 )
                    // InternalImperativeOCL.g:3594:2: rule__SwitchExpCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SwitchExpCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSwitchExpCSAccess().getGroup_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Alternatives"


    // $ANTLR start "rule__EssentialOCLUnaryOperatorName__Alternatives"
    // InternalImperativeOCL.g:3604:1: rule__EssentialOCLUnaryOperatorName__Alternatives : ( ( '-' ) | ( 'not' ) );
    public final void rule__EssentialOCLUnaryOperatorName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3608:1: ( ( '-' ) | ( 'not' ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==21) ) {
                alt11=1;
            }
            else if ( (LA11_0==22) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalImperativeOCL.g:3609:1: ( '-' )
                    {
                    // InternalImperativeOCL.g:3609:1: ( '-' )
                    // InternalImperativeOCL.g:3610:1: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());
                    }
                    match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3617:6: ( 'not' )
                    {
                    // InternalImperativeOCL.g:3617:6: ( 'not' )
                    // InternalImperativeOCL.g:3618:1: 'not'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());
                    }
                    match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EssentialOCLUnaryOperatorName__Alternatives"


    // $ANTLR start "rule__EssentialOCLInfixOperatorName__Alternatives"
    // InternalImperativeOCL.g:3630:1: rule__EssentialOCLInfixOperatorName__Alternatives : ( ( '*' ) | ( '/' ) | ( '+' ) | ( '-' ) | ( '>' ) | ( '<' ) | ( '>=' ) | ( '<=' ) | ( '=' ) | ( '<>' ) | ( 'and' ) | ( 'or' ) | ( 'xor' ) | ( 'implies' ) );
    public final void rule__EssentialOCLInfixOperatorName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3634:1: ( ( '*' ) | ( '/' ) | ( '+' ) | ( '-' ) | ( '>' ) | ( '<' ) | ( '>=' ) | ( '<=' ) | ( '=' ) | ( '<>' ) | ( 'and' ) | ( 'or' ) | ( 'xor' ) | ( 'implies' ) )
            int alt12=14;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt12=1;
                }
                break;
            case 24:
                {
                alt12=2;
                }
                break;
            case 25:
                {
                alt12=3;
                }
                break;
            case 21:
                {
                alt12=4;
                }
                break;
            case 26:
                {
                alt12=5;
                }
                break;
            case 27:
                {
                alt12=6;
                }
                break;
            case 28:
                {
                alt12=7;
                }
                break;
            case 29:
                {
                alt12=8;
                }
                break;
            case 30:
                {
                alt12=9;
                }
                break;
            case 31:
                {
                alt12=10;
                }
                break;
            case 32:
                {
                alt12=11;
                }
                break;
            case 33:
                {
                alt12=12;
                }
                break;
            case 34:
                {
                alt12=13;
                }
                break;
            case 35:
                {
                alt12=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalImperativeOCL.g:3635:1: ( '*' )
                    {
                    // InternalImperativeOCL.g:3635:1: ( '*' )
                    // InternalImperativeOCL.g:3636:1: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3643:6: ( '/' )
                    {
                    // InternalImperativeOCL.g:3643:6: ( '/' )
                    // InternalImperativeOCL.g:3644:1: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());
                    }
                    match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3651:6: ( '+' )
                    {
                    // InternalImperativeOCL.g:3651:6: ( '+' )
                    // InternalImperativeOCL.g:3652:1: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());
                    }
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3659:6: ( '-' )
                    {
                    // InternalImperativeOCL.g:3659:6: ( '-' )
                    // InternalImperativeOCL.g:3660:1: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());
                    }
                    match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3667:6: ( '>' )
                    {
                    // InternalImperativeOCL.g:3667:6: ( '>' )
                    // InternalImperativeOCL.g:3668:1: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());
                    }
                    match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:3675:6: ( '<' )
                    {
                    // InternalImperativeOCL.g:3675:6: ( '<' )
                    // InternalImperativeOCL.g:3676:1: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());
                    }
                    match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalImperativeOCL.g:3683:6: ( '>=' )
                    {
                    // InternalImperativeOCL.g:3683:6: ( '>=' )
                    // InternalImperativeOCL.g:3684:1: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());
                    }
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalImperativeOCL.g:3691:6: ( '<=' )
                    {
                    // InternalImperativeOCL.g:3691:6: ( '<=' )
                    // InternalImperativeOCL.g:3692:1: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());
                    }
                    match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalImperativeOCL.g:3699:6: ( '=' )
                    {
                    // InternalImperativeOCL.g:3699:6: ( '=' )
                    // InternalImperativeOCL.g:3700:1: '='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());
                    }
                    match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalImperativeOCL.g:3707:6: ( '<>' )
                    {
                    // InternalImperativeOCL.g:3707:6: ( '<>' )
                    // InternalImperativeOCL.g:3708:1: '<>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalImperativeOCL.g:3715:6: ( 'and' )
                    {
                    // InternalImperativeOCL.g:3715:6: ( 'and' )
                    // InternalImperativeOCL.g:3716:1: 'and'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());
                    }
                    match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalImperativeOCL.g:3723:6: ( 'or' )
                    {
                    // InternalImperativeOCL.g:3723:6: ( 'or' )
                    // InternalImperativeOCL.g:3724:1: 'or'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_11());
                    }
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_11());
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalImperativeOCL.g:3731:6: ( 'xor' )
                    {
                    // InternalImperativeOCL.g:3731:6: ( 'xor' )
                    // InternalImperativeOCL.g:3732:1: 'xor'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_12());
                    }
                    match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_12());
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalImperativeOCL.g:3739:6: ( 'implies' )
                    {
                    // InternalImperativeOCL.g:3739:6: ( 'implies' )
                    // InternalImperativeOCL.g:3740:1: 'implies'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_13());
                    }
                    match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_13());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EssentialOCLInfixOperatorName__Alternatives"


    // $ANTLR start "rule__EssentialOCLNavigationOperatorName__Alternatives"
    // InternalImperativeOCL.g:3752:1: rule__EssentialOCLNavigationOperatorName__Alternatives : ( ( '.' ) | ( '->' ) | ( '?.' ) | ( '?->' ) );
    public final void rule__EssentialOCLNavigationOperatorName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3756:1: ( ( '.' ) | ( '->' ) | ( '?.' ) | ( '?->' ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt13=1;
                }
                break;
            case 37:
                {
                alt13=2;
                }
                break;
            case 38:
                {
                alt13=3;
                }
                break;
            case 39:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalImperativeOCL.g:3757:1: ( '.' )
                    {
                    // InternalImperativeOCL.g:3757:1: ( '.' )
                    // InternalImperativeOCL.g:3758:1: '.'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3765:6: ( '->' )
                    {
                    // InternalImperativeOCL.g:3765:6: ( '->' )
                    // InternalImperativeOCL.g:3766:1: '->'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3773:6: ( '?.' )
                    {
                    // InternalImperativeOCL.g:3773:6: ( '?.' )
                    // InternalImperativeOCL.g:3774:1: '?.'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());
                    }
                    match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3781:6: ( '?->' )
                    {
                    // InternalImperativeOCL.g:3781:6: ( '?->' )
                    // InternalImperativeOCL.g:3782:1: '?->'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());
                    }
                    match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EssentialOCLNavigationOperatorName__Alternatives"


    // $ANTLR start "rule__BinaryOperatorName__Alternatives"
    // InternalImperativeOCL.g:3794:1: rule__BinaryOperatorName__Alternatives : ( ( ruleInfixOperatorName ) | ( ruleNavigationOperatorName ) );
    public final void rule__BinaryOperatorName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3798:1: ( ( ruleInfixOperatorName ) | ( ruleNavigationOperatorName ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21||(LA14_0>=23 && LA14_0<=35)) ) {
                alt14=1;
            }
            else if ( ((LA14_0>=36 && LA14_0<=39)) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalImperativeOCL.g:3799:1: ( ruleInfixOperatorName )
                    {
                    // InternalImperativeOCL.g:3799:1: ( ruleInfixOperatorName )
                    // InternalImperativeOCL.g:3800:1: ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3805:6: ( ruleNavigationOperatorName )
                    {
                    // InternalImperativeOCL.g:3805:6: ( ruleNavigationOperatorName )
                    // InternalImperativeOCL.g:3806:1: ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BinaryOperatorName__Alternatives"


    // $ANTLR start "rule__EssentialOCLUnreservedName__Alternatives"
    // InternalImperativeOCL.g:3816:1: rule__EssentialOCLUnreservedName__Alternatives : ( ( ruleUnrestrictedName ) | ( ruleCollectionTypeIdentifier ) | ( rulePrimitiveTypeIdentifier ) | ( 'Map' ) | ( 'Tuple' ) );
    public final void rule__EssentialOCLUnreservedName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3820:1: ( ( ruleUnrestrictedName ) | ( ruleCollectionTypeIdentifier ) | ( rulePrimitiveTypeIdentifier ) | ( 'Map' ) | ( 'Tuple' ) )
            int alt15=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt15=1;
                }
                break;
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
                {
                alt15=2;
                }
                break;
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
                {
                alt15=3;
                }
                break;
            case 40:
                {
                alt15=4;
                }
                break;
            case 41:
                {
                alt15=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalImperativeOCL.g:3821:1: ( ruleUnrestrictedName )
                    {
                    // InternalImperativeOCL.g:3821:1: ( ruleUnrestrictedName )
                    // InternalImperativeOCL.g:3822:1: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3827:6: ( ruleCollectionTypeIdentifier )
                    {
                    // InternalImperativeOCL.g:3827:6: ( ruleCollectionTypeIdentifier )
                    // InternalImperativeOCL.g:3828:1: ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3833:6: ( rulePrimitiveTypeIdentifier )
                    {
                    // InternalImperativeOCL.g:3833:6: ( rulePrimitiveTypeIdentifier )
                    // InternalImperativeOCL.g:3834:1: rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3839:6: ( 'Map' )
                    {
                    // InternalImperativeOCL.g:3839:6: ( 'Map' )
                    // InternalImperativeOCL.g:3840:1: 'Map'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());
                    }
                    match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3847:6: ( 'Tuple' )
                    {
                    // InternalImperativeOCL.g:3847:6: ( 'Tuple' )
                    // InternalImperativeOCL.g:3848:1: 'Tuple'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());
                    }
                    match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EssentialOCLUnreservedName__Alternatives"


    // $ANTLR start "rule__URIFirstPathElementCS__Alternatives"
    // InternalImperativeOCL.g:3860:1: rule__URIFirstPathElementCS__Alternatives : ( ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 ) ) | ( ( rule__URIFirstPathElementCS__Group_1__0 ) ) );
    public final void rule__URIFirstPathElementCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3864:1: ( ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 ) ) | ( ( rule__URIFirstPathElementCS__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=RULE_SIMPLE_ID && LA16_0<=RULE_ESCAPED_ID)) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalImperativeOCL.g:3865:1: ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 ) )
                    {
                    // InternalImperativeOCL.g:3865:1: ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 ) )
                    // InternalImperativeOCL.g:3866:1: ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_0());
                    }
                    // InternalImperativeOCL.g:3867:1: ( rule__URIFirstPathElementCS__ReferredElementAssignment_0 )
                    // InternalImperativeOCL.g:3867:2: rule__URIFirstPathElementCS__ReferredElementAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__URIFirstPathElementCS__ReferredElementAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3871:6: ( ( rule__URIFirstPathElementCS__Group_1__0 ) )
                    {
                    // InternalImperativeOCL.g:3871:6: ( ( rule__URIFirstPathElementCS__Group_1__0 ) )
                    // InternalImperativeOCL.g:3872:1: ( rule__URIFirstPathElementCS__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1());
                    }
                    // InternalImperativeOCL.g:3873:1: ( rule__URIFirstPathElementCS__Group_1__0 )
                    // InternalImperativeOCL.g:3873:2: rule__URIFirstPathElementCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__URIFirstPathElementCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__Alternatives"


    // $ANTLR start "rule__PrimitiveTypeIdentifier__Alternatives"
    // InternalImperativeOCL.g:3882:1: rule__PrimitiveTypeIdentifier__Alternatives : ( ( 'Boolean' ) | ( 'Integer' ) | ( 'Real' ) | ( 'String' ) | ( 'UnlimitedNatural' ) | ( 'OclAny' ) | ( 'OclInvalid' ) | ( 'OclVoid' ) );
    public final void rule__PrimitiveTypeIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3886:1: ( ( 'Boolean' ) | ( 'Integer' ) | ( 'Real' ) | ( 'String' ) | ( 'UnlimitedNatural' ) | ( 'OclAny' ) | ( 'OclInvalid' ) | ( 'OclVoid' ) )
            int alt17=8;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt17=1;
                }
                break;
            case 43:
                {
                alt17=2;
                }
                break;
            case 44:
                {
                alt17=3;
                }
                break;
            case 45:
                {
                alt17=4;
                }
                break;
            case 46:
                {
                alt17=5;
                }
                break;
            case 47:
                {
                alt17=6;
                }
                break;
            case 48:
                {
                alt17=7;
                }
                break;
            case 49:
                {
                alt17=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalImperativeOCL.g:3887:1: ( 'Boolean' )
                    {
                    // InternalImperativeOCL.g:3887:1: ( 'Boolean' )
                    // InternalImperativeOCL.g:3888:1: 'Boolean'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3895:6: ( 'Integer' )
                    {
                    // InternalImperativeOCL.g:3895:6: ( 'Integer' )
                    // InternalImperativeOCL.g:3896:1: 'Integer'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());
                    }
                    match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3903:6: ( 'Real' )
                    {
                    // InternalImperativeOCL.g:3903:6: ( 'Real' )
                    // InternalImperativeOCL.g:3904:1: 'Real'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());
                    }
                    match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3911:6: ( 'String' )
                    {
                    // InternalImperativeOCL.g:3911:6: ( 'String' )
                    // InternalImperativeOCL.g:3912:1: 'String'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());
                    }
                    match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3919:6: ( 'UnlimitedNatural' )
                    {
                    // InternalImperativeOCL.g:3919:6: ( 'UnlimitedNatural' )
                    // InternalImperativeOCL.g:3920:1: 'UnlimitedNatural'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());
                    }
                    match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:3927:6: ( 'OclAny' )
                    {
                    // InternalImperativeOCL.g:3927:6: ( 'OclAny' )
                    // InternalImperativeOCL.g:3928:1: 'OclAny'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());
                    }
                    match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalImperativeOCL.g:3935:6: ( 'OclInvalid' )
                    {
                    // InternalImperativeOCL.g:3935:6: ( 'OclInvalid' )
                    // InternalImperativeOCL.g:3936:1: 'OclInvalid'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());
                    }
                    match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalImperativeOCL.g:3943:6: ( 'OclVoid' )
                    {
                    // InternalImperativeOCL.g:3943:6: ( 'OclVoid' )
                    // InternalImperativeOCL.g:3944:1: 'OclVoid'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());
                    }
                    match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimitiveTypeIdentifier__Alternatives"


    // $ANTLR start "rule__CollectionTypeIdentifier__Alternatives"
    // InternalImperativeOCL.g:3956:1: rule__CollectionTypeIdentifier__Alternatives : ( ( 'Set' ) | ( 'Bag' ) | ( 'Sequence' ) | ( 'Collection' ) | ( 'OrderedSet' ) );
    public final void rule__CollectionTypeIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:3960:1: ( ( 'Set' ) | ( 'Bag' ) | ( 'Sequence' ) | ( 'Collection' ) | ( 'OrderedSet' ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt18=1;
                }
                break;
            case 51:
                {
                alt18=2;
                }
                break;
            case 52:
                {
                alt18=3;
                }
                break;
            case 53:
                {
                alt18=4;
                }
                break;
            case 54:
                {
                alt18=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalImperativeOCL.g:3961:1: ( 'Set' )
                    {
                    // InternalImperativeOCL.g:3961:1: ( 'Set' )
                    // InternalImperativeOCL.g:3962:1: 'Set'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());
                    }
                    match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:3969:6: ( 'Bag' )
                    {
                    // InternalImperativeOCL.g:3969:6: ( 'Bag' )
                    // InternalImperativeOCL.g:3970:1: 'Bag'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());
                    }
                    match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:3977:6: ( 'Sequence' )
                    {
                    // InternalImperativeOCL.g:3977:6: ( 'Sequence' )
                    // InternalImperativeOCL.g:3978:1: 'Sequence'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());
                    }
                    match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:3985:6: ( 'Collection' )
                    {
                    // InternalImperativeOCL.g:3985:6: ( 'Collection' )
                    // InternalImperativeOCL.g:3986:1: 'Collection'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());
                    }
                    match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:3993:6: ( 'OrderedSet' )
                    {
                    // InternalImperativeOCL.g:3993:6: ( 'OrderedSet' )
                    // InternalImperativeOCL.g:3994:1: 'OrderedSet'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());
                    }
                    match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeIdentifier__Alternatives"


    // $ANTLR start "rule__CollectionLiteralPartCS__Alternatives"
    // InternalImperativeOCL.g:4006:1: rule__CollectionLiteralPartCS__Alternatives : ( ( ( rule__CollectionLiteralPartCS__Group_0__0 ) ) | ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 ) ) );
    public final void rule__CollectionLiteralPartCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4010:1: ( ( ( rule__CollectionLiteralPartCS__Group_0__0 ) ) | ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 ) ) )
            int alt19=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_SINGLE_QUOTED_STRING:
            case RULE_DOUBLE_QUOTED_STRING:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 63:
            case 64:
            case 66:
            case 68:
            case 71:
            case 73:
            case 76:
            case 77:
            case 78:
            case 81:
            case 83:
            case 85:
            case 86:
            case 90:
            case 92:
            case 93:
            case 94:
            case 97:
            case 99:
            case 100:
            case 105:
            case 108:
            case 109:
            case 113:
            case 114:
            case 115:
            case 116:
                {
                alt19=1;
                }
                break;
            case RULE_SIMPLE_ID:
                {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==EOF||LA19_2==21||(LA19_2>=23 && LA19_2<=39)||(LA19_2>=60 && LA19_2<=62)||LA19_2==64||LA19_2==67||(LA19_2>=73 && LA19_2<=74)||LA19_2==82||LA19_2==95||LA19_2==102||LA19_2==110) ) {
                    alt19=1;
                }
                else if ( (LA19_2==75) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ESCAPED_ID:
                {
                int LA19_3 = input.LA(2);

                if ( (LA19_3==75) ) {
                    alt19=2;
                }
                else if ( (LA19_3==EOF||LA19_3==21||(LA19_3>=23 && LA19_3<=39)||(LA19_3>=60 && LA19_3<=62)||LA19_3==64||LA19_3==67||(LA19_3>=73 && LA19_3<=74)||LA19_3==82||LA19_3==95||LA19_3==102||LA19_3==110) ) {
                    alt19=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 3, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                alt19=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalImperativeOCL.g:4011:1: ( ( rule__CollectionLiteralPartCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4011:1: ( ( rule__CollectionLiteralPartCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4012:1: ( rule__CollectionLiteralPartCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4013:1: ( rule__CollectionLiteralPartCS__Group_0__0 )
                    // InternalImperativeOCL.g:4013:2: rule__CollectionLiteralPartCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionLiteralPartCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4017:6: ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 ) )
                    {
                    // InternalImperativeOCL.g:4017:6: ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 ) )
                    // InternalImperativeOCL.g:4018:1: ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_1());
                    }
                    // InternalImperativeOCL.g:4019:1: ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 )
                    // InternalImperativeOCL.g:4019:2: rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Alternatives"


    // $ANTLR start "rule__ShadowPartCS__Alternatives"
    // InternalImperativeOCL.g:4028:1: rule__ShadowPartCS__Alternatives : ( ( ( rule__ShadowPartCS__Group_0__0 ) ) | ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 ) ) );
    public final void rule__ShadowPartCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4032:1: ( ( ( rule__ShadowPartCS__Group_0__0 ) ) | ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_SIMPLE_ID && LA20_0<=RULE_ESCAPED_ID)) ) {
                alt20=1;
            }
            else if ( ((LA20_0>=RULE_SINGLE_QUOTED_STRING && LA20_0<=RULE_DOUBLE_QUOTED_STRING)) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalImperativeOCL.g:4033:1: ( ( rule__ShadowPartCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4033:1: ( ( rule__ShadowPartCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4034:1: ( rule__ShadowPartCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShadowPartCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4035:1: ( rule__ShadowPartCS__Group_0__0 )
                    // InternalImperativeOCL.g:4035:2: rule__ShadowPartCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShadowPartCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShadowPartCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4039:6: ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 ) )
                    {
                    // InternalImperativeOCL.g:4039:6: ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 ) )
                    // InternalImperativeOCL.g:4040:1: ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_1());
                    }
                    // InternalImperativeOCL.g:4041:1: ( rule__ShadowPartCS__OwnedInitExpressionAssignment_1 )
                    // InternalImperativeOCL.g:4041:2: rule__ShadowPartCS__OwnedInitExpressionAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShadowPartCS__OwnedInitExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Alternatives"


    // $ANTLR start "rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0"
    // InternalImperativeOCL.g:4050:1: rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 : ( ( ruleExpCS ) | ( rulePatternExpCS ) );
    public final void rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4054:1: ( ( ruleExpCS ) | ( rulePatternExpCS ) )
            int alt21=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_SINGLE_QUOTED_STRING:
            case RULE_DOUBLE_QUOTED_STRING:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 63:
            case 64:
            case 66:
            case 68:
            case 71:
            case 73:
            case 76:
            case 77:
            case 78:
            case 81:
            case 83:
            case 85:
            case 86:
            case 90:
            case 92:
            case 93:
            case 94:
            case 97:
            case 99:
            case 100:
            case 105:
            case 108:
            case 109:
            case 113:
            case 114:
            case 115:
            case 116:
                {
                alt21=1;
                }
                break;
            case RULE_SIMPLE_ID:
                {
                int LA21_2 = input.LA(2);

                if ( (LA21_2==EOF||LA21_2==21||(LA21_2>=23 && LA21_2<=39)||(LA21_2>=60 && LA21_2<=62)||LA21_2==64||LA21_2==67||(LA21_2>=73 && LA21_2<=74)||LA21_2==82||LA21_2==102||LA21_2==110) ) {
                    alt21=1;
                }
                else if ( (LA21_2==75) ) {
                    alt21=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ESCAPED_ID:
                {
                int LA21_3 = input.LA(2);

                if ( (LA21_3==EOF||LA21_3==21||(LA21_3>=23 && LA21_3<=39)||(LA21_3>=60 && LA21_3<=62)||LA21_3==64||LA21_3==67||(LA21_3>=73 && LA21_3<=74)||LA21_3==82||LA21_3==102||LA21_3==110) ) {
                    alt21=1;
                }
                else if ( (LA21_3==75) ) {
                    alt21=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 3, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                alt21=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalImperativeOCL.g:4055:1: ( ruleExpCS )
                    {
                    // InternalImperativeOCL.g:4055:1: ( ruleExpCS )
                    // InternalImperativeOCL.g:4056:1: ruleExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4061:6: ( rulePatternExpCS )
                    {
                    // InternalImperativeOCL.g:4061:6: ( rulePatternExpCS )
                    // InternalImperativeOCL.g:4062:1: rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0"


    // $ANTLR start "rule__PrimitiveLiteralExpCS__Alternatives"
    // InternalImperativeOCL.g:4072:1: rule__PrimitiveLiteralExpCS__Alternatives : ( ( ruleNumberLiteralExpCS ) | ( ruleStringLiteralExpCS ) | ( ruleBooleanLiteralExpCS ) | ( ruleUnlimitedNaturalLiteralExpCS ) | ( ruleInvalidLiteralExpCS ) | ( ruleNullLiteralExpCS ) );
    public final void rule__PrimitiveLiteralExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4076:1: ( ( ruleNumberLiteralExpCS ) | ( ruleStringLiteralExpCS ) | ( ruleBooleanLiteralExpCS ) | ( ruleUnlimitedNaturalLiteralExpCS ) | ( ruleInvalidLiteralExpCS ) | ( ruleNullLiteralExpCS ) )
            int alt22=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt22=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
            case RULE_DOUBLE_QUOTED_STRING:
                {
                alt22=2;
                }
                break;
            case 115:
            case 116:
                {
                alt22=3;
                }
                break;
            case 23:
                {
                alt22=4;
                }
                break;
            case 99:
                {
                alt22=5;
                }
                break;
            case 100:
                {
                alt22=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalImperativeOCL.g:4077:1: ( ruleNumberLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4077:1: ( ruleNumberLiteralExpCS )
                    // InternalImperativeOCL.g:4078:1: ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4083:6: ( ruleStringLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4083:6: ( ruleStringLiteralExpCS )
                    // InternalImperativeOCL.g:4084:1: ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4089:6: ( ruleBooleanLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4089:6: ( ruleBooleanLiteralExpCS )
                    // InternalImperativeOCL.g:4090:1: ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalImperativeOCL.g:4095:6: ( ruleUnlimitedNaturalLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4095:6: ( ruleUnlimitedNaturalLiteralExpCS )
                    // InternalImperativeOCL.g:4096:1: ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalImperativeOCL.g:4101:6: ( ruleInvalidLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4101:6: ( ruleInvalidLiteralExpCS )
                    // InternalImperativeOCL.g:4102:1: ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalImperativeOCL.g:4107:6: ( ruleNullLiteralExpCS )
                    {
                    // InternalImperativeOCL.g:4107:6: ( ruleNullLiteralExpCS )
                    // InternalImperativeOCL.g:4108:1: ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimitiveLiteralExpCS__Alternatives"


    // $ANTLR start "rule__BooleanLiteralExpCS__Alternatives"
    // InternalImperativeOCL.g:4118:1: rule__BooleanLiteralExpCS__Alternatives : ( ( ( rule__BooleanLiteralExpCS__SymbolAssignment_0 ) ) | ( ( rule__BooleanLiteralExpCS__SymbolAssignment_1 ) ) );
    public final void rule__BooleanLiteralExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4122:1: ( ( ( rule__BooleanLiteralExpCS__SymbolAssignment_0 ) ) | ( ( rule__BooleanLiteralExpCS__SymbolAssignment_1 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==115) ) {
                alt23=1;
            }
            else if ( (LA23_0==116) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalImperativeOCL.g:4123:1: ( ( rule__BooleanLiteralExpCS__SymbolAssignment_0 ) )
                    {
                    // InternalImperativeOCL.g:4123:1: ( ( rule__BooleanLiteralExpCS__SymbolAssignment_0 ) )
                    // InternalImperativeOCL.g:4124:1: ( rule__BooleanLiteralExpCS__SymbolAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_0());
                    }
                    // InternalImperativeOCL.g:4125:1: ( rule__BooleanLiteralExpCS__SymbolAssignment_0 )
                    // InternalImperativeOCL.g:4125:2: rule__BooleanLiteralExpCS__SymbolAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BooleanLiteralExpCS__SymbolAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4129:6: ( ( rule__BooleanLiteralExpCS__SymbolAssignment_1 ) )
                    {
                    // InternalImperativeOCL.g:4129:6: ( ( rule__BooleanLiteralExpCS__SymbolAssignment_1 ) )
                    // InternalImperativeOCL.g:4130:1: ( rule__BooleanLiteralExpCS__SymbolAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_1());
                    }
                    // InternalImperativeOCL.g:4131:1: ( rule__BooleanLiteralExpCS__SymbolAssignment_1 )
                    // InternalImperativeOCL.g:4131:2: rule__BooleanLiteralExpCS__SymbolAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BooleanLiteralExpCS__SymbolAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteralExpCS__Alternatives"


    // $ANTLR start "rule__TypeExpWithoutMultiplicityCS__Alternatives"
    // InternalImperativeOCL.g:4140:1: rule__TypeExpWithoutMultiplicityCS__Alternatives : ( ( ruleTypeNameExpCS ) | ( ruleTypeLiteralCS ) | ( ruleCollectionPatternCS ) );
    public final void rule__TypeExpWithoutMultiplicityCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4144:1: ( ( ruleTypeNameExpCS ) | ( ruleTypeLiteralCS ) | ( ruleCollectionPatternCS ) )
            int alt24=3;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalImperativeOCL.g:4145:1: ( ruleTypeNameExpCS )
                    {
                    // InternalImperativeOCL.g:4145:1: ( ruleTypeNameExpCS )
                    // InternalImperativeOCL.g:4146:1: ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4151:6: ( ruleTypeLiteralCS )
                    {
                    // InternalImperativeOCL.g:4151:6: ( ruleTypeLiteralCS )
                    // InternalImperativeOCL.g:4152:1: ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4157:6: ( ruleCollectionPatternCS )
                    {
                    // InternalImperativeOCL.g:4157:6: ( ruleCollectionPatternCS )
                    // InternalImperativeOCL.g:4158:1: ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpWithoutMultiplicityCS__Alternatives"


    // $ANTLR start "rule__ExpCS__Alternatives"
    // InternalImperativeOCL.g:4168:1: rule__ExpCS__Alternatives : ( ( ( rule__ExpCS__Group_0__0 ) ) | ( rulePrefixedLetExpCS ) );
    public final void rule__ExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4172:1: ( ( ( rule__ExpCS__Group_0__0 ) ) | ( rulePrefixedLetExpCS ) )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalImperativeOCL.g:4173:1: ( ( rule__ExpCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4173:1: ( ( rule__ExpCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4174:1: ( rule__ExpCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4175:1: ( rule__ExpCS__Group_0__0 )
                    // InternalImperativeOCL.g:4175:2: rule__ExpCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4179:6: ( rulePrefixedLetExpCS )
                    {
                    // InternalImperativeOCL.g:4179:6: ( rulePrefixedLetExpCS )
                    // InternalImperativeOCL.g:4180:1: rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Alternatives"


    // $ANTLR start "rule__PrefixedLetExpCS__Alternatives"
    // InternalImperativeOCL.g:4190:1: rule__PrefixedLetExpCS__Alternatives : ( ( ( rule__PrefixedLetExpCS__Group_0__0 ) ) | ( ruleLetExpCS ) );
    public final void rule__PrefixedLetExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4194:1: ( ( ( rule__PrefixedLetExpCS__Group_0__0 ) ) | ( ruleLetExpCS ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=21 && LA26_0<=22)) ) {
                alt26=1;
            }
            else if ( (LA26_0==108) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalImperativeOCL.g:4195:1: ( ( rule__PrefixedLetExpCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4195:1: ( ( rule__PrefixedLetExpCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4196:1: ( rule__PrefixedLetExpCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrefixedLetExpCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4197:1: ( rule__PrefixedLetExpCS__Group_0__0 )
                    // InternalImperativeOCL.g:4197:2: rule__PrefixedLetExpCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PrefixedLetExpCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrefixedLetExpCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4201:6: ( ruleLetExpCS )
                    {
                    // InternalImperativeOCL.g:4201:6: ( ruleLetExpCS )
                    // InternalImperativeOCL.g:4202:1: ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Alternatives"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Alternatives"
    // InternalImperativeOCL.g:4212:1: rule__PrefixedPrimaryExpCS__Alternatives : ( ( ( rule__PrefixedPrimaryExpCS__Group_0__0 ) ) | ( rulePrimaryExpCS ) );
    public final void rule__PrefixedPrimaryExpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4216:1: ( ( ( rule__PrefixedPrimaryExpCS__Group_0__0 ) ) | ( rulePrimaryExpCS ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=21 && LA27_0<=22)) ) {
                alt27=1;
            }
            else if ( ((LA27_0>=RULE_INT && LA27_0<=RULE_ESCAPED_ID)||(LA27_0>=16 && LA27_0<=20)||LA27_0==23||(LA27_0>=40 && LA27_0<=54)||(LA27_0>=63 && LA27_0<=64)||LA27_0==66||LA27_0==68||LA27_0==71||LA27_0==73||(LA27_0>=76 && LA27_0<=78)||LA27_0==81||LA27_0==83||(LA27_0>=85 && LA27_0<=86)||LA27_0==90||(LA27_0>=92 && LA27_0<=94)||LA27_0==97||(LA27_0>=99 && LA27_0<=100)||LA27_0==105||LA27_0==109||(LA27_0>=113 && LA27_0<=116)) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalImperativeOCL.g:4217:1: ( ( rule__PrefixedPrimaryExpCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4217:1: ( ( rule__PrefixedPrimaryExpCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4218:1: ( rule__PrefixedPrimaryExpCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrefixedPrimaryExpCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4219:1: ( rule__PrefixedPrimaryExpCS__Group_0__0 )
                    // InternalImperativeOCL.g:4219:2: rule__PrefixedPrimaryExpCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PrefixedPrimaryExpCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrefixedPrimaryExpCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4223:6: ( rulePrimaryExpCS )
                    {
                    // InternalImperativeOCL.g:4223:6: ( rulePrimaryExpCS )
                    // InternalImperativeOCL.g:4224:1: rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Alternatives"


    // $ANTLR start "rule__NavigatingArgCS__Alternatives"
    // InternalImperativeOCL.g:4234:1: rule__NavigatingArgCS__Alternatives : ( ( ( rule__NavigatingArgCS__Group_0__0 ) ) | ( ( rule__NavigatingArgCS__Group_1__0 ) ) );
    public final void rule__NavigatingArgCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4238:1: ( ( ( rule__NavigatingArgCS__Group_0__0 ) ) | ( ( rule__NavigatingArgCS__Group_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=RULE_INT && LA28_0<=RULE_ESCAPED_ID)||(LA28_0>=16 && LA28_0<=23)||(LA28_0>=40 && LA28_0<=54)||(LA28_0>=63 && LA28_0<=64)||LA28_0==66||LA28_0==68||LA28_0==71||LA28_0==73||(LA28_0>=76 && LA28_0<=78)||LA28_0==81||LA28_0==83||(LA28_0>=85 && LA28_0<=86)||LA28_0==90||(LA28_0>=92 && LA28_0<=94)||LA28_0==97||(LA28_0>=99 && LA28_0<=100)||LA28_0==105||(LA28_0>=108 && LA28_0<=109)||(LA28_0>=113 && LA28_0<=116)) ) {
                alt28=1;
            }
            else if ( (LA28_0==75) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalImperativeOCL.g:4239:1: ( ( rule__NavigatingArgCS__Group_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4239:1: ( ( rule__NavigatingArgCS__Group_0__0 ) )
                    // InternalImperativeOCL.g:4240:1: ( rule__NavigatingArgCS__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingArgCSAccess().getGroup_0());
                    }
                    // InternalImperativeOCL.g:4241:1: ( rule__NavigatingArgCS__Group_0__0 )
                    // InternalImperativeOCL.g:4241:2: rule__NavigatingArgCS__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingArgCSAccess().getGroup_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4245:6: ( ( rule__NavigatingArgCS__Group_1__0 ) )
                    {
                    // InternalImperativeOCL.g:4245:6: ( ( rule__NavigatingArgCS__Group_1__0 ) )
                    // InternalImperativeOCL.g:4246:1: ( rule__NavigatingArgCS__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingArgCSAccess().getGroup_1());
                    }
                    // InternalImperativeOCL.g:4247:1: ( rule__NavigatingArgCS__Group_1__0 )
                    // InternalImperativeOCL.g:4247:2: rule__NavigatingArgCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingArgCSAccess().getGroup_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Alternatives"


    // $ANTLR start "rule__NavigatingArgCS__Alternatives_0_1"
    // InternalImperativeOCL.g:4256:1: rule__NavigatingArgCS__Alternatives_0_1 : ( ( ( rule__NavigatingArgCS__Group_0_1_0__0 ) ) | ( ( rule__NavigatingArgCS__Group_0_1_1__0 ) ) );
    public final void rule__NavigatingArgCS__Alternatives_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4260:1: ( ( ( rule__NavigatingArgCS__Group_0_1_0__0 ) ) | ( ( rule__NavigatingArgCS__Group_0_1_1__0 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==75) ) {
                alt29=1;
            }
            else if ( (LA29_0==104) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalImperativeOCL.g:4261:1: ( ( rule__NavigatingArgCS__Group_0_1_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4261:1: ( ( rule__NavigatingArgCS__Group_0_1_0__0 ) )
                    // InternalImperativeOCL.g:4262:1: ( rule__NavigatingArgCS__Group_0_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0());
                    }
                    // InternalImperativeOCL.g:4263:1: ( rule__NavigatingArgCS__Group_0_1_0__0 )
                    // InternalImperativeOCL.g:4263:2: rule__NavigatingArgCS__Group_0_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Group_0_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4267:6: ( ( rule__NavigatingArgCS__Group_0_1_1__0 ) )
                    {
                    // InternalImperativeOCL.g:4267:6: ( ( rule__NavigatingArgCS__Group_0_1_1__0 ) )
                    // InternalImperativeOCL.g:4268:1: ( rule__NavigatingArgCS__Group_0_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_1());
                    }
                    // InternalImperativeOCL.g:4269:1: ( rule__NavigatingArgCS__Group_0_1_1__0 )
                    // InternalImperativeOCL.g:4269:2: rule__NavigatingArgCS__Group_0_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Group_0_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Alternatives_0_1"


    // $ANTLR start "rule__NavigatingCommaArgCS__Alternatives_2"
    // InternalImperativeOCL.g:4278:1: rule__NavigatingCommaArgCS__Alternatives_2 : ( ( ( rule__NavigatingCommaArgCS__Group_2_0__0 ) ) | ( ( rule__NavigatingCommaArgCS__Group_2_1__0 ) ) );
    public final void rule__NavigatingCommaArgCS__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4282:1: ( ( ( rule__NavigatingCommaArgCS__Group_2_0__0 ) ) | ( ( rule__NavigatingCommaArgCS__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==75) ) {
                alt30=1;
            }
            else if ( (LA30_0==104) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalImperativeOCL.g:4283:1: ( ( rule__NavigatingCommaArgCS__Group_2_0__0 ) )
                    {
                    // InternalImperativeOCL.g:4283:1: ( ( rule__NavigatingCommaArgCS__Group_2_0__0 ) )
                    // InternalImperativeOCL.g:4284:1: ( rule__NavigatingCommaArgCS__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0());
                    }
                    // InternalImperativeOCL.g:4285:1: ( rule__NavigatingCommaArgCS__Group_2_0__0 )
                    // InternalImperativeOCL.g:4285:2: rule__NavigatingCommaArgCS__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingCommaArgCS__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4289:6: ( ( rule__NavigatingCommaArgCS__Group_2_1__0 ) )
                    {
                    // InternalImperativeOCL.g:4289:6: ( ( rule__NavigatingCommaArgCS__Group_2_1__0 ) )
                    // InternalImperativeOCL.g:4290:1: ( rule__NavigatingCommaArgCS__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_1());
                    }
                    // InternalImperativeOCL.g:4291:1: ( rule__NavigatingCommaArgCS__Group_2_1__0 )
                    // InternalImperativeOCL.g:4291:2: rule__NavigatingCommaArgCS__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingCommaArgCS__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Alternatives_2"


    // $ANTLR start "rule__IfExpCS__OwnedConditionAlternatives_1_0"
    // InternalImperativeOCL.g:4300:1: rule__IfExpCS__OwnedConditionAlternatives_1_0 : ( ( ruleExpCS ) | ( rulePatternExpCS ) );
    public final void rule__IfExpCS__OwnedConditionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4304:1: ( ( ruleExpCS ) | ( rulePatternExpCS ) )
            int alt31=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_SINGLE_QUOTED_STRING:
            case RULE_DOUBLE_QUOTED_STRING:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 63:
            case 64:
            case 66:
            case 68:
            case 71:
            case 73:
            case 76:
            case 77:
            case 78:
            case 81:
            case 83:
            case 85:
            case 86:
            case 90:
            case 92:
            case 93:
            case 94:
            case 97:
            case 99:
            case 100:
            case 105:
            case 108:
            case 109:
            case 113:
            case 114:
            case 115:
            case 116:
                {
                alt31=1;
                }
                break;
            case RULE_SIMPLE_ID:
                {
                int LA31_2 = input.LA(2);

                if ( (LA31_2==75) ) {
                    alt31=2;
                }
                else if ( (LA31_2==21||(LA31_2>=23 && LA31_2<=39)||(LA31_2>=60 && LA31_2<=62)||LA31_2==64||LA31_2==73||LA31_2==82||LA31_2==102||LA31_2==106||LA31_2==110) ) {
                    alt31=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ESCAPED_ID:
                {
                int LA31_3 = input.LA(2);

                if ( (LA31_3==21||(LA31_3>=23 && LA31_3<=39)||(LA31_3>=60 && LA31_3<=62)||LA31_3==64||LA31_3==73||LA31_3==82||LA31_3==102||LA31_3==106||LA31_3==110) ) {
                    alt31=1;
                }
                else if ( (LA31_3==75) ) {
                    alt31=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 3, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                alt31=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalImperativeOCL.g:4305:1: ( ruleExpCS )
                    {
                    // InternalImperativeOCL.g:4305:1: ( ruleExpCS )
                    // InternalImperativeOCL.g:4306:1: ruleExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4311:6: ( rulePatternExpCS )
                    {
                    // InternalImperativeOCL.g:4311:6: ( rulePatternExpCS )
                    // InternalImperativeOCL.g:4312:1: rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__OwnedConditionAlternatives_1_0"


    // $ANTLR start "rule__MultiplicityCS__Alternatives_1"
    // InternalImperativeOCL.g:4322:1: rule__MultiplicityCS__Alternatives_1 : ( ( ruleMultiplicityBoundsCS ) | ( ruleMultiplicityStringCS ) );
    public final void rule__MultiplicityCS__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4326:1: ( ( ruleMultiplicityBoundsCS ) | ( ruleMultiplicityStringCS ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_INT) ) {
                alt32=1;
            }
            else if ( (LA32_0==23||LA32_0==25||LA32_0==56) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalImperativeOCL.g:4327:1: ( ruleMultiplicityBoundsCS )
                    {
                    // InternalImperativeOCL.g:4327:1: ( ruleMultiplicityBoundsCS )
                    // InternalImperativeOCL.g:4328:1: ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4333:6: ( ruleMultiplicityStringCS )
                    {
                    // InternalImperativeOCL.g:4333:6: ( ruleMultiplicityStringCS )
                    // InternalImperativeOCL.g:4334:1: ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Alternatives_1"


    // $ANTLR start "rule__MultiplicityCS__Alternatives_2"
    // InternalImperativeOCL.g:4344:1: rule__MultiplicityCS__Alternatives_2 : ( ( '|?' ) | ( ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 ) ) );
    public final void rule__MultiplicityCS__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4348:1: ( ( '|?' ) | ( ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==55) ) {
                alt33=1;
            }
            else if ( (LA33_0==117) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalImperativeOCL.g:4349:1: ( '|?' )
                    {
                    // InternalImperativeOCL.g:4349:1: ( '|?' )
                    // InternalImperativeOCL.g:4350:1: '|?'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());
                    }
                    match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4357:6: ( ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 ) )
                    {
                    // InternalImperativeOCL.g:4357:6: ( ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 ) )
                    // InternalImperativeOCL.g:4358:1: ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityCSAccess().getIsNullFreeAssignment_2_1());
                    }
                    // InternalImperativeOCL.g:4359:1: ( rule__MultiplicityCS__IsNullFreeAssignment_2_1 )
                    // InternalImperativeOCL.g:4359:2: rule__MultiplicityCS__IsNullFreeAssignment_2_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MultiplicityCS__IsNullFreeAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityCSAccess().getIsNullFreeAssignment_2_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Alternatives_2"


    // $ANTLR start "rule__MultiplicityStringCS__StringBoundsAlternatives_0"
    // InternalImperativeOCL.g:4368:1: rule__MultiplicityStringCS__StringBoundsAlternatives_0 : ( ( '*' ) | ( '+' ) | ( '?' ) );
    public final void rule__MultiplicityStringCS__StringBoundsAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4372:1: ( ( '*' ) | ( '+' ) | ( '?' ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt34=1;
                }
                break;
            case 25:
                {
                alt34=2;
                }
                break;
            case 56:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalImperativeOCL.g:4373:1: ( '*' )
                    {
                    // InternalImperativeOCL.g:4373:1: ( '*' )
                    // InternalImperativeOCL.g:4374:1: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4381:6: ( '+' )
                    {
                    // InternalImperativeOCL.g:4381:6: ( '+' )
                    // InternalImperativeOCL.g:4382:1: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());
                    }
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4389:6: ( '?' )
                    {
                    // InternalImperativeOCL.g:4389:6: ( '?' )
                    // InternalImperativeOCL.g:4390:1: '?'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());
                    }
                    match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityStringCS__StringBoundsAlternatives_0"


    // $ANTLR start "rule__TypeRefCS__Alternatives"
    // InternalImperativeOCL.g:4402:1: rule__TypeRefCS__Alternatives : ( ( ruleTypedRefCS ) | ( ruleWildcardTypeRefCS ) );
    public final void rule__TypeRefCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4406:1: ( ( ruleTypedRefCS ) | ( ruleWildcardTypeRefCS ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_SIMPLE_ID && LA35_0<=RULE_ESCAPED_ID)) ) {
                alt35=1;
            }
            else if ( (LA35_0==56) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalImperativeOCL.g:4407:1: ( ruleTypedRefCS )
                    {
                    // InternalImperativeOCL.g:4407:1: ( ruleTypedRefCS )
                    // InternalImperativeOCL.g:4408:1: ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4413:6: ( ruleWildcardTypeRefCS )
                    {
                    // InternalImperativeOCL.g:4413:6: ( ruleWildcardTypeRefCS )
                    // InternalImperativeOCL.g:4414:1: ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeRefCS__Alternatives"


    // $ANTLR start "rule__ID__Alternatives"
    // InternalImperativeOCL.g:4424:1: rule__ID__Alternatives : ( ( RULE_SIMPLE_ID ) | ( RULE_ESCAPED_ID ) );
    public final void rule__ID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4428:1: ( ( RULE_SIMPLE_ID ) | ( RULE_ESCAPED_ID ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_SIMPLE_ID) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_ESCAPED_ID) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalImperativeOCL.g:4429:1: ( RULE_SIMPLE_ID )
                    {
                    // InternalImperativeOCL.g:4429:1: ( RULE_SIMPLE_ID )
                    // InternalImperativeOCL.g:4430:1: RULE_SIMPLE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());
                    }
                    match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4435:6: ( RULE_ESCAPED_ID )
                    {
                    // InternalImperativeOCL.g:4435:6: ( RULE_ESCAPED_ID )
                    // InternalImperativeOCL.g:4436:1: RULE_ESCAPED_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());
                    }
                    match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID__Alternatives"


    // $ANTLR start "rule__UPPER__Alternatives"
    // InternalImperativeOCL.g:4446:1: rule__UPPER__Alternatives : ( ( RULE_INT ) | ( '*' ) );
    public final void rule__UPPER__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4450:1: ( ( RULE_INT ) | ( '*' ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_INT) ) {
                alt37=1;
            }
            else if ( (LA37_0==23) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalImperativeOCL.g:4451:1: ( RULE_INT )
                    {
                    // InternalImperativeOCL.g:4451:1: ( RULE_INT )
                    // InternalImperativeOCL.g:4452:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4457:6: ( '*' )
                    {
                    // InternalImperativeOCL.g:4457:6: ( '*' )
                    // InternalImperativeOCL.g:4458:1: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUPPERAccess().getAsteriskKeyword_1());
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUPPERAccess().getAsteriskKeyword_1());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UPPER__Alternatives"


    // $ANTLR start "rule__SeverityKindCS__Alternatives"
    // InternalImperativeOCL.g:4470:1: rule__SeverityKindCS__Alternatives : ( ( ( 'error' ) ) | ( ( 'warning' ) ) | ( ( 'fatal' ) ) );
    public final void rule__SeverityKindCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4474:1: ( ( ( 'error' ) ) | ( ( 'warning' ) ) | ( ( 'fatal' ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt38=1;
                }
                break;
            case 58:
                {
                alt38=2;
                }
                break;
            case 59:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalImperativeOCL.g:4475:1: ( ( 'error' ) )
                    {
                    // InternalImperativeOCL.g:4475:1: ( ( 'error' ) )
                    // InternalImperativeOCL.g:4476:1: ( 'error' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeverityKindCSAccess().getErrorEnumLiteralDeclaration_0());
                    }
                    // InternalImperativeOCL.g:4477:1: ( 'error' )
                    // InternalImperativeOCL.g:4477:3: 'error'
                    {
                    match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeverityKindCSAccess().getErrorEnumLiteralDeclaration_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4482:6: ( ( 'warning' ) )
                    {
                    // InternalImperativeOCL.g:4482:6: ( ( 'warning' ) )
                    // InternalImperativeOCL.g:4483:1: ( 'warning' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeverityKindCSAccess().getWarningEnumLiteralDeclaration_1());
                    }
                    // InternalImperativeOCL.g:4484:1: ( 'warning' )
                    // InternalImperativeOCL.g:4484:3: 'warning'
                    {
                    match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeverityKindCSAccess().getWarningEnumLiteralDeclaration_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4489:6: ( ( 'fatal' ) )
                    {
                    // InternalImperativeOCL.g:4489:6: ( ( 'fatal' ) )
                    // InternalImperativeOCL.g:4490:1: ( 'fatal' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSeverityKindCSAccess().getFatalEnumLiteralDeclaration_2());
                    }
                    // InternalImperativeOCL.g:4491:1: ( 'fatal' )
                    // InternalImperativeOCL.g:4491:3: 'fatal'
                    {
                    match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSeverityKindCSAccess().getFatalEnumLiteralDeclaration_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SeverityKindCS__Alternatives"


    // $ANTLR start "rule__InitOpCS__Alternatives"
    // InternalImperativeOCL.g:4501:1: rule__InitOpCS__Alternatives : ( ( ( '=' ) ) | ( ( ':=' ) ) | ( ( '::=' ) ) );
    public final void rule__InitOpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4505:1: ( ( ( '=' ) ) | ( ( ':=' ) ) | ( ( '::=' ) ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt39=1;
                }
                break;
            case 60:
                {
                alt39=2;
                }
                break;
            case 61:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalImperativeOCL.g:4506:1: ( ( '=' ) )
                    {
                    // InternalImperativeOCL.g:4506:1: ( ( '=' ) )
                    // InternalImperativeOCL.g:4507:1: ( '=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitOpCSAccess().getEqualsEnumLiteralDeclaration_0());
                    }
                    // InternalImperativeOCL.g:4508:1: ( '=' )
                    // InternalImperativeOCL.g:4508:3: '='
                    {
                    match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitOpCSAccess().getEqualsEnumLiteralDeclaration_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4513:6: ( ( ':=' ) )
                    {
                    // InternalImperativeOCL.g:4513:6: ( ( ':=' ) )
                    // InternalImperativeOCL.g:4514:1: ( ':=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitOpCSAccess().getColonEqualsEnumLiteralDeclaration_1());
                    }
                    // InternalImperativeOCL.g:4515:1: ( ':=' )
                    // InternalImperativeOCL.g:4515:3: ':='
                    {
                    match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitOpCSAccess().getColonEqualsEnumLiteralDeclaration_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4520:6: ( ( '::=' ) )
                    {
                    // InternalImperativeOCL.g:4520:6: ( ( '::=' ) )
                    // InternalImperativeOCL.g:4521:1: ( '::=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitOpCSAccess().getColonColonEqualsEnumLiteralDeclaration_2());
                    }
                    // InternalImperativeOCL.g:4522:1: ( '::=' )
                    // InternalImperativeOCL.g:4522:3: '::='
                    {
                    match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitOpCSAccess().getColonColonEqualsEnumLiteralDeclaration_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitOpCS__Alternatives"


    // $ANTLR start "rule__AssignOpCS__Alternatives"
    // InternalImperativeOCL.g:4532:1: rule__AssignOpCS__Alternatives : ( ( ( ':=' ) ) | ( ( '::=' ) ) | ( ( '+=' ) ) );
    public final void rule__AssignOpCS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4536:1: ( ( ( ':=' ) ) | ( ( '::=' ) ) | ( ( '+=' ) ) )
            int alt40=3;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt40=1;
                }
                break;
            case 61:
                {
                alt40=2;
                }
                break;
            case 62:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalImperativeOCL.g:4537:1: ( ( ':=' ) )
                    {
                    // InternalImperativeOCL.g:4537:1: ( ( ':=' ) )
                    // InternalImperativeOCL.g:4538:1: ( ':=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOpCSAccess().getSingleEnumLiteralDeclaration_0());
                    }
                    // InternalImperativeOCL.g:4539:1: ( ':=' )
                    // InternalImperativeOCL.g:4539:3: ':='
                    {
                    match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOpCSAccess().getSingleEnumLiteralDeclaration_0());
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalImperativeOCL.g:4544:6: ( ( '::=' ) )
                    {
                    // InternalImperativeOCL.g:4544:6: ( ( '::=' ) )
                    // InternalImperativeOCL.g:4545:1: ( '::=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOpCSAccess().getMultiWithResetEnumLiteralDeclaration_1());
                    }
                    // InternalImperativeOCL.g:4546:1: ( '::=' )
                    // InternalImperativeOCL.g:4546:3: '::='
                    {
                    match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOpCSAccess().getMultiWithResetEnumLiteralDeclaration_1());
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalImperativeOCL.g:4551:6: ( ( '+=' ) )
                    {
                    // InternalImperativeOCL.g:4551:6: ( ( '+=' ) )
                    // InternalImperativeOCL.g:4552:1: ( '+=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignOpCSAccess().getMultiWithoutResetEnumLiteralDeclaration_2());
                    }
                    // InternalImperativeOCL.g:4553:1: ( '+=' )
                    // InternalImperativeOCL.g:4553:3: '+='
                    {
                    match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignOpCSAccess().getMultiWithoutResetEnumLiteralDeclaration_2());
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignOpCS__Alternatives"


    // $ANTLR start "rule__ListTypeCS__Group__0"
    // InternalImperativeOCL.g:4565:1: rule__ListTypeCS__Group__0 : rule__ListTypeCS__Group__0__Impl rule__ListTypeCS__Group__1 ;
    public final void rule__ListTypeCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4569:1: ( rule__ListTypeCS__Group__0__Impl rule__ListTypeCS__Group__1 )
            // InternalImperativeOCL.g:4570:2: rule__ListTypeCS__Group__0__Impl rule__ListTypeCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ListTypeCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__0"


    // $ANTLR start "rule__ListTypeCS__Group__0__Impl"
    // InternalImperativeOCL.g:4577:1: rule__ListTypeCS__Group__0__Impl : ( 'List' ) ;
    public final void rule__ListTypeCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4581:1: ( ( 'List' ) )
            // InternalImperativeOCL.g:4582:1: ( 'List' )
            {
            // InternalImperativeOCL.g:4582:1: ( 'List' )
            // InternalImperativeOCL.g:4583:1: 'List'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getListKeyword_0());
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getListKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__0__Impl"


    // $ANTLR start "rule__ListTypeCS__Group__1"
    // InternalImperativeOCL.g:4596:1: rule__ListTypeCS__Group__1 : rule__ListTypeCS__Group__1__Impl rule__ListTypeCS__Group__2 ;
    public final void rule__ListTypeCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4600:1: ( rule__ListTypeCS__Group__1__Impl rule__ListTypeCS__Group__2 )
            // InternalImperativeOCL.g:4601:2: rule__ListTypeCS__Group__1__Impl rule__ListTypeCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ListTypeCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__1"


    // $ANTLR start "rule__ListTypeCS__Group__1__Impl"
    // InternalImperativeOCL.g:4608:1: rule__ListTypeCS__Group__1__Impl : ( '(' ) ;
    public final void rule__ListTypeCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4612:1: ( ( '(' ) )
            // InternalImperativeOCL.g:4613:1: ( '(' )
            {
            // InternalImperativeOCL.g:4613:1: ( '(' )
            // InternalImperativeOCL.g:4614:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__1__Impl"


    // $ANTLR start "rule__ListTypeCS__Group__2"
    // InternalImperativeOCL.g:4627:1: rule__ListTypeCS__Group__2 : rule__ListTypeCS__Group__2__Impl rule__ListTypeCS__Group__3 ;
    public final void rule__ListTypeCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4631:1: ( rule__ListTypeCS__Group__2__Impl rule__ListTypeCS__Group__3 )
            // InternalImperativeOCL.g:4632:2: rule__ListTypeCS__Group__2__Impl rule__ListTypeCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__ListTypeCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__2"


    // $ANTLR start "rule__ListTypeCS__Group__2__Impl"
    // InternalImperativeOCL.g:4639:1: rule__ListTypeCS__Group__2__Impl : ( ( rule__ListTypeCS__OwnedTypeRefAssignment_2 ) ) ;
    public final void rule__ListTypeCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4643:1: ( ( ( rule__ListTypeCS__OwnedTypeRefAssignment_2 ) ) )
            // InternalImperativeOCL.g:4644:1: ( ( rule__ListTypeCS__OwnedTypeRefAssignment_2 ) )
            {
            // InternalImperativeOCL.g:4644:1: ( ( rule__ListTypeCS__OwnedTypeRefAssignment_2 ) )
            // InternalImperativeOCL.g:4645:1: ( rule__ListTypeCS__OwnedTypeRefAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getOwnedTypeRefAssignment_2());
            }
            // InternalImperativeOCL.g:4646:1: ( rule__ListTypeCS__OwnedTypeRefAssignment_2 )
            // InternalImperativeOCL.g:4646:2: rule__ListTypeCS__OwnedTypeRefAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__OwnedTypeRefAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getOwnedTypeRefAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__2__Impl"


    // $ANTLR start "rule__ListTypeCS__Group__3"
    // InternalImperativeOCL.g:4656:1: rule__ListTypeCS__Group__3 : rule__ListTypeCS__Group__3__Impl ;
    public final void rule__ListTypeCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4660:1: ( rule__ListTypeCS__Group__3__Impl )
            // InternalImperativeOCL.g:4661:2: rule__ListTypeCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListTypeCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__3"


    // $ANTLR start "rule__ListTypeCS__Group__3__Impl"
    // InternalImperativeOCL.g:4667:1: rule__ListTypeCS__Group__3__Impl : ( ')' ) ;
    public final void rule__ListTypeCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4671:1: ( ( ')' ) )
            // InternalImperativeOCL.g:4672:1: ( ')' )
            {
            // InternalImperativeOCL.g:4672:1: ( ')' )
            // InternalImperativeOCL.g:4673:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getRightParenthesisKeyword_3());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getRightParenthesisKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__Group__3__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__0"
    // InternalImperativeOCL.g:4694:1: rule__DictTypeCS__Group__0 : rule__DictTypeCS__Group__0__Impl rule__DictTypeCS__Group__1 ;
    public final void rule__DictTypeCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4698:1: ( rule__DictTypeCS__Group__0__Impl rule__DictTypeCS__Group__1 )
            // InternalImperativeOCL.g:4699:2: rule__DictTypeCS__Group__0__Impl rule__DictTypeCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DictTypeCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__0"


    // $ANTLR start "rule__DictTypeCS__Group__0__Impl"
    // InternalImperativeOCL.g:4706:1: rule__DictTypeCS__Group__0__Impl : ( 'Dict' ) ;
    public final void rule__DictTypeCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4710:1: ( ( 'Dict' ) )
            // InternalImperativeOCL.g:4711:1: ( 'Dict' )
            {
            // InternalImperativeOCL.g:4711:1: ( 'Dict' )
            // InternalImperativeOCL.g:4712:1: 'Dict'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getDictKeyword_0());
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getDictKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__0__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__1"
    // InternalImperativeOCL.g:4725:1: rule__DictTypeCS__Group__1 : rule__DictTypeCS__Group__1__Impl rule__DictTypeCS__Group__2 ;
    public final void rule__DictTypeCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4729:1: ( rule__DictTypeCS__Group__1__Impl rule__DictTypeCS__Group__2 )
            // InternalImperativeOCL.g:4730:2: rule__DictTypeCS__Group__1__Impl rule__DictTypeCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DictTypeCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__1"


    // $ANTLR start "rule__DictTypeCS__Group__1__Impl"
    // InternalImperativeOCL.g:4737:1: rule__DictTypeCS__Group__1__Impl : ( '(' ) ;
    public final void rule__DictTypeCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4741:1: ( ( '(' ) )
            // InternalImperativeOCL.g:4742:1: ( '(' )
            {
            // InternalImperativeOCL.g:4742:1: ( '(' )
            // InternalImperativeOCL.g:4743:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__1__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__2"
    // InternalImperativeOCL.g:4756:1: rule__DictTypeCS__Group__2 : rule__DictTypeCS__Group__2__Impl rule__DictTypeCS__Group__3 ;
    public final void rule__DictTypeCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4760:1: ( rule__DictTypeCS__Group__2__Impl rule__DictTypeCS__Group__3 )
            // InternalImperativeOCL.g:4761:2: rule__DictTypeCS__Group__2__Impl rule__DictTypeCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__DictTypeCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__2"


    // $ANTLR start "rule__DictTypeCS__Group__2__Impl"
    // InternalImperativeOCL.g:4768:1: rule__DictTypeCS__Group__2__Impl : ( ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 ) ) ;
    public final void rule__DictTypeCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4772:1: ( ( ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 ) ) )
            // InternalImperativeOCL.g:4773:1: ( ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 ) )
            {
            // InternalImperativeOCL.g:4773:1: ( ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 ) )
            // InternalImperativeOCL.g:4774:1: ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getOwnedKeyTypeRefAssignment_2());
            }
            // InternalImperativeOCL.g:4775:1: ( rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 )
            // InternalImperativeOCL.g:4775:2: rule__DictTypeCS__OwnedKeyTypeRefAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__OwnedKeyTypeRefAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getOwnedKeyTypeRefAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__2__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__3"
    // InternalImperativeOCL.g:4785:1: rule__DictTypeCS__Group__3 : rule__DictTypeCS__Group__3__Impl rule__DictTypeCS__Group__4 ;
    public final void rule__DictTypeCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4789:1: ( rule__DictTypeCS__Group__3__Impl rule__DictTypeCS__Group__4 )
            // InternalImperativeOCL.g:4790:2: rule__DictTypeCS__Group__3__Impl rule__DictTypeCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DictTypeCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__3"


    // $ANTLR start "rule__DictTypeCS__Group__3__Impl"
    // InternalImperativeOCL.g:4797:1: rule__DictTypeCS__Group__3__Impl : ( ',' ) ;
    public final void rule__DictTypeCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4801:1: ( ( ',' ) )
            // InternalImperativeOCL.g:4802:1: ( ',' )
            {
            // InternalImperativeOCL.g:4802:1: ( ',' )
            // InternalImperativeOCL.g:4803:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getCommaKeyword_3());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getCommaKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__3__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__4"
    // InternalImperativeOCL.g:4816:1: rule__DictTypeCS__Group__4 : rule__DictTypeCS__Group__4__Impl rule__DictTypeCS__Group__5 ;
    public final void rule__DictTypeCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4820:1: ( rule__DictTypeCS__Group__4__Impl rule__DictTypeCS__Group__5 )
            // InternalImperativeOCL.g:4821:2: rule__DictTypeCS__Group__4__Impl rule__DictTypeCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DictTypeCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__4"


    // $ANTLR start "rule__DictTypeCS__Group__4__Impl"
    // InternalImperativeOCL.g:4828:1: rule__DictTypeCS__Group__4__Impl : ( ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 ) ) ;
    public final void rule__DictTypeCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4832:1: ( ( ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 ) ) )
            // InternalImperativeOCL.g:4833:1: ( ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 ) )
            {
            // InternalImperativeOCL.g:4833:1: ( ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 ) )
            // InternalImperativeOCL.g:4834:1: ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getOwnedValueTypeRefAssignment_4());
            }
            // InternalImperativeOCL.g:4835:1: ( rule__DictTypeCS__OwnedValueTypeRefAssignment_4 )
            // InternalImperativeOCL.g:4835:2: rule__DictTypeCS__OwnedValueTypeRefAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__OwnedValueTypeRefAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getOwnedValueTypeRefAssignment_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__4__Impl"


    // $ANTLR start "rule__DictTypeCS__Group__5"
    // InternalImperativeOCL.g:4845:1: rule__DictTypeCS__Group__5 : rule__DictTypeCS__Group__5__Impl ;
    public final void rule__DictTypeCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4849:1: ( rule__DictTypeCS__Group__5__Impl )
            // InternalImperativeOCL.g:4850:2: rule__DictTypeCS__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictTypeCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__5"


    // $ANTLR start "rule__DictTypeCS__Group__5__Impl"
    // InternalImperativeOCL.g:4856:1: rule__DictTypeCS__Group__5__Impl : ( ')' ) ;
    public final void rule__DictTypeCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4860:1: ( ( ')' ) )
            // InternalImperativeOCL.g:4861:1: ( ')' )
            {
            // InternalImperativeOCL.g:4861:1: ( ')' )
            // InternalImperativeOCL.g:4862:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__Group__5__Impl"


    // $ANTLR start "rule__AssertExpCS__Group__0"
    // InternalImperativeOCL.g:4887:1: rule__AssertExpCS__Group__0 : rule__AssertExpCS__Group__0__Impl rule__AssertExpCS__Group__1 ;
    public final void rule__AssertExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4891:1: ( rule__AssertExpCS__Group__0__Impl rule__AssertExpCS__Group__1 )
            // InternalImperativeOCL.g:4892:2: rule__AssertExpCS__Group__0__Impl rule__AssertExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AssertExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__0"


    // $ANTLR start "rule__AssertExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:4899:1: rule__AssertExpCS__Group__0__Impl : ( 'assert' ) ;
    public final void rule__AssertExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4903:1: ( ( 'assert' ) )
            // InternalImperativeOCL.g:4904:1: ( 'assert' )
            {
            // InternalImperativeOCL.g:4904:1: ( 'assert' )
            // InternalImperativeOCL.g:4905:1: 'assert'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getAssertKeyword_0());
            }
            match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getAssertKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__0__Impl"


    // $ANTLR start "rule__AssertExpCS__Group__1"
    // InternalImperativeOCL.g:4918:1: rule__AssertExpCS__Group__1 : rule__AssertExpCS__Group__1__Impl rule__AssertExpCS__Group__2 ;
    public final void rule__AssertExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4922:1: ( rule__AssertExpCS__Group__1__Impl rule__AssertExpCS__Group__2 )
            // InternalImperativeOCL.g:4923:2: rule__AssertExpCS__Group__1__Impl rule__AssertExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AssertExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__1"


    // $ANTLR start "rule__AssertExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:4930:1: rule__AssertExpCS__Group__1__Impl : ( ( rule__AssertExpCS__SeverityAssignment_1 )? ) ;
    public final void rule__AssertExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4934:1: ( ( ( rule__AssertExpCS__SeverityAssignment_1 )? ) )
            // InternalImperativeOCL.g:4935:1: ( ( rule__AssertExpCS__SeverityAssignment_1 )? )
            {
            // InternalImperativeOCL.g:4935:1: ( ( rule__AssertExpCS__SeverityAssignment_1 )? )
            // InternalImperativeOCL.g:4936:1: ( rule__AssertExpCS__SeverityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getSeverityAssignment_1());
            }
            // InternalImperativeOCL.g:4937:1: ( rule__AssertExpCS__SeverityAssignment_1 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=57 && LA41_0<=59)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalImperativeOCL.g:4937:2: rule__AssertExpCS__SeverityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssertExpCS__SeverityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getSeverityAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__1__Impl"


    // $ANTLR start "rule__AssertExpCS__Group__2"
    // InternalImperativeOCL.g:4947:1: rule__AssertExpCS__Group__2 : rule__AssertExpCS__Group__2__Impl rule__AssertExpCS__Group__3 ;
    public final void rule__AssertExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4951:1: ( rule__AssertExpCS__Group__2__Impl rule__AssertExpCS__Group__3 )
            // InternalImperativeOCL.g:4952:2: rule__AssertExpCS__Group__2__Impl rule__AssertExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AssertExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__2"


    // $ANTLR start "rule__AssertExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:4959:1: rule__AssertExpCS__Group__2__Impl : ( ( rule__AssertExpCS__OwnedAssertionAssignment_2 ) ) ;
    public final void rule__AssertExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4963:1: ( ( ( rule__AssertExpCS__OwnedAssertionAssignment_2 ) ) )
            // InternalImperativeOCL.g:4964:1: ( ( rule__AssertExpCS__OwnedAssertionAssignment_2 ) )
            {
            // InternalImperativeOCL.g:4964:1: ( ( rule__AssertExpCS__OwnedAssertionAssignment_2 ) )
            // InternalImperativeOCL.g:4965:1: ( rule__AssertExpCS__OwnedAssertionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getOwnedAssertionAssignment_2());
            }
            // InternalImperativeOCL.g:4966:1: ( rule__AssertExpCS__OwnedAssertionAssignment_2 )
            // InternalImperativeOCL.g:4966:2: rule__AssertExpCS__OwnedAssertionAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__OwnedAssertionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getOwnedAssertionAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__2__Impl"


    // $ANTLR start "rule__AssertExpCS__Group__3"
    // InternalImperativeOCL.g:4976:1: rule__AssertExpCS__Group__3 : rule__AssertExpCS__Group__3__Impl ;
    public final void rule__AssertExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4980:1: ( rule__AssertExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:4981:2: rule__AssertExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__3"


    // $ANTLR start "rule__AssertExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:4987:1: rule__AssertExpCS__Group__3__Impl : ( ( rule__AssertExpCS__Group_3__0 )? ) ;
    public final void rule__AssertExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:4991:1: ( ( ( rule__AssertExpCS__Group_3__0 )? ) )
            // InternalImperativeOCL.g:4992:1: ( ( rule__AssertExpCS__Group_3__0 )? )
            {
            // InternalImperativeOCL.g:4992:1: ( ( rule__AssertExpCS__Group_3__0 )? )
            // InternalImperativeOCL.g:4993:1: ( rule__AssertExpCS__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:4994:1: ( rule__AssertExpCS__Group_3__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==69) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred107_InternalImperativeOCL()) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalImperativeOCL.g:4994:2: rule__AssertExpCS__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssertExpCS__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group__3__Impl"


    // $ANTLR start "rule__AssertExpCS__Group_3__0"
    // InternalImperativeOCL.g:5012:1: rule__AssertExpCS__Group_3__0 : rule__AssertExpCS__Group_3__0__Impl rule__AssertExpCS__Group_3__1 ;
    public final void rule__AssertExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5016:1: ( rule__AssertExpCS__Group_3__0__Impl rule__AssertExpCS__Group_3__1 )
            // InternalImperativeOCL.g:5017:2: rule__AssertExpCS__Group_3__0__Impl rule__AssertExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__AssertExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group_3__0"


    // $ANTLR start "rule__AssertExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:5024:1: rule__AssertExpCS__Group_3__0__Impl : ( 'with' ) ;
    public final void rule__AssertExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5028:1: ( ( 'with' ) )
            // InternalImperativeOCL.g:5029:1: ( 'with' )
            {
            // InternalImperativeOCL.g:5029:1: ( 'with' )
            // InternalImperativeOCL.g:5030:1: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getWithKeyword_3_0());
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getWithKeyword_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__AssertExpCS__Group_3__1"
    // InternalImperativeOCL.g:5043:1: rule__AssertExpCS__Group_3__1 : rule__AssertExpCS__Group_3__1__Impl ;
    public final void rule__AssertExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5047:1: ( rule__AssertExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:5048:2: rule__AssertExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group_3__1"


    // $ANTLR start "rule__AssertExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:5054:1: rule__AssertExpCS__Group_3__1__Impl : ( ( rule__AssertExpCS__OwnedLogAssignment_3_1 ) ) ;
    public final void rule__AssertExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5058:1: ( ( ( rule__AssertExpCS__OwnedLogAssignment_3_1 ) ) )
            // InternalImperativeOCL.g:5059:1: ( ( rule__AssertExpCS__OwnedLogAssignment_3_1 ) )
            {
            // InternalImperativeOCL.g:5059:1: ( ( rule__AssertExpCS__OwnedLogAssignment_3_1 ) )
            // InternalImperativeOCL.g:5060:1: ( rule__AssertExpCS__OwnedLogAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getOwnedLogAssignment_3_1());
            }
            // InternalImperativeOCL.g:5061:1: ( rule__AssertExpCS__OwnedLogAssignment_3_1 )
            // InternalImperativeOCL.g:5061:2: rule__AssertExpCS__OwnedLogAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssertExpCS__OwnedLogAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getOwnedLogAssignment_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__AssignExpCS__Group__0"
    // InternalImperativeOCL.g:5075:1: rule__AssignExpCS__Group__0 : rule__AssignExpCS__Group__0__Impl rule__AssignExpCS__Group__1 ;
    public final void rule__AssignExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5079:1: ( rule__AssignExpCS__Group__0__Impl rule__AssignExpCS__Group__1 )
            // InternalImperativeOCL.g:5080:2: rule__AssignExpCS__Group__0__Impl rule__AssignExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__AssignExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__0"


    // $ANTLR start "rule__AssignExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:5087:1: rule__AssignExpCS__Group__0__Impl : ( ( rule__AssignExpCS__OwnedLeftAssignment_0 ) ) ;
    public final void rule__AssignExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5091:1: ( ( ( rule__AssignExpCS__OwnedLeftAssignment_0 ) ) )
            // InternalImperativeOCL.g:5092:1: ( ( rule__AssignExpCS__OwnedLeftAssignment_0 ) )
            {
            // InternalImperativeOCL.g:5092:1: ( ( rule__AssignExpCS__OwnedLeftAssignment_0 ) )
            // InternalImperativeOCL.g:5093:1: ( rule__AssignExpCS__OwnedLeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedLeftAssignment_0());
            }
            // InternalImperativeOCL.g:5094:1: ( rule__AssignExpCS__OwnedLeftAssignment_0 )
            // InternalImperativeOCL.g:5094:2: rule__AssignExpCS__OwnedLeftAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__OwnedLeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedLeftAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__0__Impl"


    // $ANTLR start "rule__AssignExpCS__Group__1"
    // InternalImperativeOCL.g:5104:1: rule__AssignExpCS__Group__1 : rule__AssignExpCS__Group__1__Impl rule__AssignExpCS__Group__2 ;
    public final void rule__AssignExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5108:1: ( rule__AssignExpCS__Group__1__Impl rule__AssignExpCS__Group__2 )
            // InternalImperativeOCL.g:5109:2: rule__AssignExpCS__Group__1__Impl rule__AssignExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AssignExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__1"


    // $ANTLR start "rule__AssignExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:5116:1: rule__AssignExpCS__Group__1__Impl : ( ( rule__AssignExpCS__AssignOpAssignment_1 ) ) ;
    public final void rule__AssignExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5120:1: ( ( ( rule__AssignExpCS__AssignOpAssignment_1 ) ) )
            // InternalImperativeOCL.g:5121:1: ( ( rule__AssignExpCS__AssignOpAssignment_1 ) )
            {
            // InternalImperativeOCL.g:5121:1: ( ( rule__AssignExpCS__AssignOpAssignment_1 ) )
            // InternalImperativeOCL.g:5122:1: ( rule__AssignExpCS__AssignOpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getAssignOpAssignment_1());
            }
            // InternalImperativeOCL.g:5123:1: ( rule__AssignExpCS__AssignOpAssignment_1 )
            // InternalImperativeOCL.g:5123:2: rule__AssignExpCS__AssignOpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__AssignOpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getAssignOpAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__1__Impl"


    // $ANTLR start "rule__AssignExpCS__Group__2"
    // InternalImperativeOCL.g:5133:1: rule__AssignExpCS__Group__2 : rule__AssignExpCS__Group__2__Impl rule__AssignExpCS__Group__3 ;
    public final void rule__AssignExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5137:1: ( rule__AssignExpCS__Group__2__Impl rule__AssignExpCS__Group__3 )
            // InternalImperativeOCL.g:5138:2: rule__AssignExpCS__Group__2__Impl rule__AssignExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AssignExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__2"


    // $ANTLR start "rule__AssignExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:5145:1: rule__AssignExpCS__Group__2__Impl : ( ( rule__AssignExpCS__OwnedValueAssignment_2 ) ) ;
    public final void rule__AssignExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5149:1: ( ( ( rule__AssignExpCS__OwnedValueAssignment_2 ) ) )
            // InternalImperativeOCL.g:5150:1: ( ( rule__AssignExpCS__OwnedValueAssignment_2 ) )
            {
            // InternalImperativeOCL.g:5150:1: ( ( rule__AssignExpCS__OwnedValueAssignment_2 ) )
            // InternalImperativeOCL.g:5151:1: ( rule__AssignExpCS__OwnedValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedValueAssignment_2());
            }
            // InternalImperativeOCL.g:5152:1: ( rule__AssignExpCS__OwnedValueAssignment_2 )
            // InternalImperativeOCL.g:5152:2: rule__AssignExpCS__OwnedValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__OwnedValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedValueAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__2__Impl"


    // $ANTLR start "rule__AssignExpCS__Group__3"
    // InternalImperativeOCL.g:5162:1: rule__AssignExpCS__Group__3 : rule__AssignExpCS__Group__3__Impl ;
    public final void rule__AssignExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5166:1: ( rule__AssignExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:5167:2: rule__AssignExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__3"


    // $ANTLR start "rule__AssignExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:5173:1: rule__AssignExpCS__Group__3__Impl : ( ( rule__AssignExpCS__Group_3__0 )? ) ;
    public final void rule__AssignExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5177:1: ( ( ( rule__AssignExpCS__Group_3__0 )? ) )
            // InternalImperativeOCL.g:5178:1: ( ( rule__AssignExpCS__Group_3__0 )? )
            {
            // InternalImperativeOCL.g:5178:1: ( ( rule__AssignExpCS__Group_3__0 )? )
            // InternalImperativeOCL.g:5179:1: ( rule__AssignExpCS__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:5180:1: ( rule__AssignExpCS__Group_3__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==70) ) {
                int LA43_1 = input.LA(2);

                if ( (synpred108_InternalImperativeOCL()) ) {
                    alt43=1;
                }
            }
            switch (alt43) {
                case 1 :
                    // InternalImperativeOCL.g:5180:2: rule__AssignExpCS__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssignExpCS__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group__3__Impl"


    // $ANTLR start "rule__AssignExpCS__Group_3__0"
    // InternalImperativeOCL.g:5198:1: rule__AssignExpCS__Group_3__0 : rule__AssignExpCS__Group_3__0__Impl rule__AssignExpCS__Group_3__1 ;
    public final void rule__AssignExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5202:1: ( rule__AssignExpCS__Group_3__0__Impl rule__AssignExpCS__Group_3__1 )
            // InternalImperativeOCL.g:5203:2: rule__AssignExpCS__Group_3__0__Impl rule__AssignExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AssignExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group_3__0"


    // $ANTLR start "rule__AssignExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:5210:1: rule__AssignExpCS__Group_3__0__Impl : ( 'default' ) ;
    public final void rule__AssignExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5214:1: ( ( 'default' ) )
            // InternalImperativeOCL.g:5215:1: ( 'default' )
            {
            // InternalImperativeOCL.g:5215:1: ( 'default' )
            // InternalImperativeOCL.g:5216:1: 'default'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getDefaultKeyword_3_0());
            }
            match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getDefaultKeyword_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__AssignExpCS__Group_3__1"
    // InternalImperativeOCL.g:5229:1: rule__AssignExpCS__Group_3__1 : rule__AssignExpCS__Group_3__1__Impl ;
    public final void rule__AssignExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5233:1: ( rule__AssignExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:5234:2: rule__AssignExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group_3__1"


    // $ANTLR start "rule__AssignExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:5240:1: rule__AssignExpCS__Group_3__1__Impl : ( ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 ) ) ;
    public final void rule__AssignExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5244:1: ( ( ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 ) ) )
            // InternalImperativeOCL.g:5245:1: ( ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 ) )
            {
            // InternalImperativeOCL.g:5245:1: ( ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 ) )
            // InternalImperativeOCL.g:5246:1: ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedDefaultAssignment_3_1());
            }
            // InternalImperativeOCL.g:5247:1: ( rule__AssignExpCS__OwnedDefaultAssignment_3_1 )
            // InternalImperativeOCL.g:5247:2: rule__AssignExpCS__OwnedDefaultAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignExpCS__OwnedDefaultAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedDefaultAssignment_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__BreakExpCS__Group__0"
    // InternalImperativeOCL.g:5261:1: rule__BreakExpCS__Group__0 : rule__BreakExpCS__Group__0__Impl rule__BreakExpCS__Group__1 ;
    public final void rule__BreakExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5265:1: ( rule__BreakExpCS__Group__0__Impl rule__BreakExpCS__Group__1 )
            // InternalImperativeOCL.g:5266:2: rule__BreakExpCS__Group__0__Impl rule__BreakExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__BreakExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BreakExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakExpCS__Group__0"


    // $ANTLR start "rule__BreakExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:5273:1: rule__BreakExpCS__Group__0__Impl : ( () ) ;
    public final void rule__BreakExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5277:1: ( ( () ) )
            // InternalImperativeOCL.g:5278:1: ( () )
            {
            // InternalImperativeOCL.g:5278:1: ( () )
            // InternalImperativeOCL.g:5279:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakExpCSAccess().getBreakExpCSAction_0());
            }
            // InternalImperativeOCL.g:5280:1: ()
            // InternalImperativeOCL.g:5282:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakExpCSAccess().getBreakExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakExpCS__Group__0__Impl"


    // $ANTLR start "rule__BreakExpCS__Group__1"
    // InternalImperativeOCL.g:5292:1: rule__BreakExpCS__Group__1 : rule__BreakExpCS__Group__1__Impl ;
    public final void rule__BreakExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5296:1: ( rule__BreakExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:5297:2: rule__BreakExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BreakExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakExpCS__Group__1"


    // $ANTLR start "rule__BreakExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:5303:1: rule__BreakExpCS__Group__1__Impl : ( 'break' ) ;
    public final void rule__BreakExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5307:1: ( ( 'break' ) )
            // InternalImperativeOCL.g:5308:1: ( 'break' )
            {
            // InternalImperativeOCL.g:5308:1: ( 'break' )
            // InternalImperativeOCL.g:5309:1: 'break'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakExpCSAccess().getBreakKeyword_1());
            }
            match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakExpCSAccess().getBreakKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakExpCS__Group__1__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__0"
    // InternalImperativeOCL.g:5326:1: rule__CatchExpCS__Group__0 : rule__CatchExpCS__Group__0__Impl rule__CatchExpCS__Group__1 ;
    public final void rule__CatchExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5330:1: ( rule__CatchExpCS__Group__0__Impl rule__CatchExpCS__Group__1 )
            // InternalImperativeOCL.g:5331:2: rule__CatchExpCS__Group__0__Impl rule__CatchExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__CatchExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__0"


    // $ANTLR start "rule__CatchExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:5338:1: rule__CatchExpCS__Group__0__Impl : ( 'except' ) ;
    public final void rule__CatchExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5342:1: ( ( 'except' ) )
            // InternalImperativeOCL.g:5343:1: ( 'except' )
            {
            // InternalImperativeOCL.g:5343:1: ( 'except' )
            // InternalImperativeOCL.g:5344:1: 'except'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getExceptKeyword_0());
            }
            match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getExceptKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__0__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__1"
    // InternalImperativeOCL.g:5357:1: rule__CatchExpCS__Group__1 : rule__CatchExpCS__Group__1__Impl rule__CatchExpCS__Group__2 ;
    public final void rule__CatchExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5361:1: ( rule__CatchExpCS__Group__1__Impl rule__CatchExpCS__Group__2 )
            // InternalImperativeOCL.g:5362:2: rule__CatchExpCS__Group__1__Impl rule__CatchExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CatchExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__1"


    // $ANTLR start "rule__CatchExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:5369:1: rule__CatchExpCS__Group__1__Impl : ( '(' ) ;
    public final void rule__CatchExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5373:1: ( ( '(' ) )
            // InternalImperativeOCL.g:5374:1: ( '(' )
            {
            // InternalImperativeOCL.g:5374:1: ( '(' )
            // InternalImperativeOCL.g:5375:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__1__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__2"
    // InternalImperativeOCL.g:5388:1: rule__CatchExpCS__Group__2 : rule__CatchExpCS__Group__2__Impl rule__CatchExpCS__Group__3 ;
    public final void rule__CatchExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5392:1: ( rule__CatchExpCS__Group__2__Impl rule__CatchExpCS__Group__3 )
            // InternalImperativeOCL.g:5393:2: rule__CatchExpCS__Group__2__Impl rule__CatchExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CatchExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__2"


    // $ANTLR start "rule__CatchExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:5400:1: rule__CatchExpCS__Group__2__Impl : ( ( rule__CatchExpCS__Group_2__0 )? ) ;
    public final void rule__CatchExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5404:1: ( ( ( rule__CatchExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:5405:1: ( ( rule__CatchExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:5405:1: ( ( rule__CatchExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:5406:1: ( rule__CatchExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:5407:1: ( rule__CatchExpCS__Group_2__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_SIMPLE_ID) ) {
                int LA44_1 = input.LA(2);

                if ( (LA44_1==75) ) {
                    alt44=1;
                }
            }
            else if ( (LA44_0==RULE_ESCAPED_ID) ) {
                int LA44_2 = input.LA(2);

                if ( (LA44_2==75) ) {
                    alt44=1;
                }
            }
            switch (alt44) {
                case 1 :
                    // InternalImperativeOCL.g:5407:2: rule__CatchExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CatchExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__2__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__3"
    // InternalImperativeOCL.g:5417:1: rule__CatchExpCS__Group__3 : rule__CatchExpCS__Group__3__Impl rule__CatchExpCS__Group__4 ;
    public final void rule__CatchExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5421:1: ( rule__CatchExpCS__Group__3__Impl rule__CatchExpCS__Group__4 )
            // InternalImperativeOCL.g:5422:2: rule__CatchExpCS__Group__3__Impl rule__CatchExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__CatchExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__3"


    // $ANTLR start "rule__CatchExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:5429:1: rule__CatchExpCS__Group__3__Impl : ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 ) ) ;
    public final void rule__CatchExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5433:1: ( ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 ) ) )
            // InternalImperativeOCL.g:5434:1: ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 ) )
            {
            // InternalImperativeOCL.g:5434:1: ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 ) )
            // InternalImperativeOCL.g:5435:1: ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsAssignment_3());
            }
            // InternalImperativeOCL.g:5436:1: ( rule__CatchExpCS__OwnedExceptionRefsAssignment_3 )
            // InternalImperativeOCL.g:5436:2: rule__CatchExpCS__OwnedExceptionRefsAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__OwnedExceptionRefsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__3__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__4"
    // InternalImperativeOCL.g:5446:1: rule__CatchExpCS__Group__4 : rule__CatchExpCS__Group__4__Impl rule__CatchExpCS__Group__5 ;
    public final void rule__CatchExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5450:1: ( rule__CatchExpCS__Group__4__Impl rule__CatchExpCS__Group__5 )
            // InternalImperativeOCL.g:5451:2: rule__CatchExpCS__Group__4__Impl rule__CatchExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__CatchExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__4"


    // $ANTLR start "rule__CatchExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:5458:1: rule__CatchExpCS__Group__4__Impl : ( ( rule__CatchExpCS__Group_4__0 )* ) ;
    public final void rule__CatchExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5462:1: ( ( ( rule__CatchExpCS__Group_4__0 )* ) )
            // InternalImperativeOCL.g:5463:1: ( ( rule__CatchExpCS__Group_4__0 )* )
            {
            // InternalImperativeOCL.g:5463:1: ( ( rule__CatchExpCS__Group_4__0 )* )
            // InternalImperativeOCL.g:5464:1: ( rule__CatchExpCS__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:5465:1: ( rule__CatchExpCS__Group_4__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==67) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalImperativeOCL.g:5465:2: rule__CatchExpCS__Group_4__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__CatchExpCS__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__4__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__5"
    // InternalImperativeOCL.g:5475:1: rule__CatchExpCS__Group__5 : rule__CatchExpCS__Group__5__Impl rule__CatchExpCS__Group__6 ;
    public final void rule__CatchExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5479:1: ( rule__CatchExpCS__Group__5__Impl rule__CatchExpCS__Group__6 )
            // InternalImperativeOCL.g:5480:2: rule__CatchExpCS__Group__5__Impl rule__CatchExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__CatchExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__5"


    // $ANTLR start "rule__CatchExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:5487:1: rule__CatchExpCS__Group__5__Impl : ( ')' ) ;
    public final void rule__CatchExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5491:1: ( ( ')' ) )
            // InternalImperativeOCL.g:5492:1: ( ')' )
            {
            // InternalImperativeOCL.g:5492:1: ( ')' )
            // InternalImperativeOCL.g:5493:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__5__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__6"
    // InternalImperativeOCL.g:5506:1: rule__CatchExpCS__Group__6 : rule__CatchExpCS__Group__6__Impl rule__CatchExpCS__Group__7 ;
    public final void rule__CatchExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5510:1: ( rule__CatchExpCS__Group__6__Impl rule__CatchExpCS__Group__7 )
            // InternalImperativeOCL.g:5511:2: rule__CatchExpCS__Group__6__Impl rule__CatchExpCS__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__CatchExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__6"


    // $ANTLR start "rule__CatchExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:5518:1: rule__CatchExpCS__Group__6__Impl : ( '{' ) ;
    public final void rule__CatchExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5522:1: ( ( '{' ) )
            // InternalImperativeOCL.g:5523:1: ( '{' )
            {
            // InternalImperativeOCL.g:5523:1: ( '{' )
            // InternalImperativeOCL.g:5524:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getLeftCurlyBracketKeyword_6());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getLeftCurlyBracketKeyword_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__6__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__7"
    // InternalImperativeOCL.g:5537:1: rule__CatchExpCS__Group__7 : rule__CatchExpCS__Group__7__Impl rule__CatchExpCS__Group__8 ;
    public final void rule__CatchExpCS__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5541:1: ( rule__CatchExpCS__Group__7__Impl rule__CatchExpCS__Group__8 )
            // InternalImperativeOCL.g:5542:2: rule__CatchExpCS__Group__7__Impl rule__CatchExpCS__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__CatchExpCS__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__7"


    // $ANTLR start "rule__CatchExpCS__Group__7__Impl"
    // InternalImperativeOCL.g:5549:1: rule__CatchExpCS__Group__7__Impl : ( ( rule__CatchExpCS__OwnedExpsAssignment_7 )* ) ;
    public final void rule__CatchExpCS__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5553:1: ( ( ( rule__CatchExpCS__OwnedExpsAssignment_7 )* ) )
            // InternalImperativeOCL.g:5554:1: ( ( rule__CatchExpCS__OwnedExpsAssignment_7 )* )
            {
            // InternalImperativeOCL.g:5554:1: ( ( rule__CatchExpCS__OwnedExpsAssignment_7 )* )
            // InternalImperativeOCL.g:5555:1: ( rule__CatchExpCS__OwnedExpsAssignment_7 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExpsAssignment_7());
            }
            // InternalImperativeOCL.g:5556:1: ( rule__CatchExpCS__OwnedExpsAssignment_7 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=RULE_INT && LA46_0<=RULE_ESCAPED_ID)||(LA46_0>=16 && LA46_0<=23)||(LA46_0>=40 && LA46_0<=54)||(LA46_0>=63 && LA46_0<=64)||LA46_0==66||LA46_0==68||LA46_0==71||LA46_0==73||(LA46_0>=76 && LA46_0<=78)||LA46_0==81||LA46_0==83||(LA46_0>=85 && LA46_0<=86)||LA46_0==90||(LA46_0>=92 && LA46_0<=94)||LA46_0==97||(LA46_0>=99 && LA46_0<=100)||LA46_0==105||(LA46_0>=108 && LA46_0<=109)||(LA46_0>=113 && LA46_0<=116)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalImperativeOCL.g:5556:2: rule__CatchExpCS__OwnedExpsAssignment_7
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__CatchExpCS__OwnedExpsAssignment_7();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExpsAssignment_7());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__7__Impl"


    // $ANTLR start "rule__CatchExpCS__Group__8"
    // InternalImperativeOCL.g:5566:1: rule__CatchExpCS__Group__8 : rule__CatchExpCS__Group__8__Impl ;
    public final void rule__CatchExpCS__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5570:1: ( rule__CatchExpCS__Group__8__Impl )
            // InternalImperativeOCL.g:5571:2: rule__CatchExpCS__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__8"


    // $ANTLR start "rule__CatchExpCS__Group__8__Impl"
    // InternalImperativeOCL.g:5577:1: rule__CatchExpCS__Group__8__Impl : ( '}' ) ;
    public final void rule__CatchExpCS__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5581:1: ( ( '}' ) )
            // InternalImperativeOCL.g:5582:1: ( '}' )
            {
            // InternalImperativeOCL.g:5582:1: ( '}' )
            // InternalImperativeOCL.g:5583:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getRightCurlyBracketKeyword_8());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getRightCurlyBracketKeyword_8());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group__8__Impl"


    // $ANTLR start "rule__CatchExpCS__Group_2__0"
    // InternalImperativeOCL.g:5614:1: rule__CatchExpCS__Group_2__0 : rule__CatchExpCS__Group_2__0__Impl rule__CatchExpCS__Group_2__1 ;
    public final void rule__CatchExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5618:1: ( rule__CatchExpCS__Group_2__0__Impl rule__CatchExpCS__Group_2__1 )
            // InternalImperativeOCL.g:5619:2: rule__CatchExpCS__Group_2__0__Impl rule__CatchExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CatchExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_2__0"


    // $ANTLR start "rule__CatchExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:5626:1: rule__CatchExpCS__Group_2__0__Impl : ( ( rule__CatchExpCS__VarNameAssignment_2_0 ) ) ;
    public final void rule__CatchExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5630:1: ( ( ( rule__CatchExpCS__VarNameAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:5631:1: ( ( rule__CatchExpCS__VarNameAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:5631:1: ( ( rule__CatchExpCS__VarNameAssignment_2_0 ) )
            // InternalImperativeOCL.g:5632:1: ( rule__CatchExpCS__VarNameAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getVarNameAssignment_2_0());
            }
            // InternalImperativeOCL.g:5633:1: ( rule__CatchExpCS__VarNameAssignment_2_0 )
            // InternalImperativeOCL.g:5633:2: rule__CatchExpCS__VarNameAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__VarNameAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getVarNameAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__CatchExpCS__Group_2__1"
    // InternalImperativeOCL.g:5643:1: rule__CatchExpCS__Group_2__1 : rule__CatchExpCS__Group_2__1__Impl ;
    public final void rule__CatchExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5647:1: ( rule__CatchExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:5648:2: rule__CatchExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_2__1"


    // $ANTLR start "rule__CatchExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:5654:1: rule__CatchExpCS__Group_2__1__Impl : ( ':' ) ;
    public final void rule__CatchExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5658:1: ( ( ':' ) )
            // InternalImperativeOCL.g:5659:1: ( ':' )
            {
            // InternalImperativeOCL.g:5659:1: ( ':' )
            // InternalImperativeOCL.g:5660:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getColonKeyword_2_1());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getColonKeyword_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__CatchExpCS__Group_4__0"
    // InternalImperativeOCL.g:5677:1: rule__CatchExpCS__Group_4__0 : rule__CatchExpCS__Group_4__0__Impl rule__CatchExpCS__Group_4__1 ;
    public final void rule__CatchExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5681:1: ( rule__CatchExpCS__Group_4__0__Impl rule__CatchExpCS__Group_4__1 )
            // InternalImperativeOCL.g:5682:2: rule__CatchExpCS__Group_4__0__Impl rule__CatchExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CatchExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_4__0"


    // $ANTLR start "rule__CatchExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:5689:1: rule__CatchExpCS__Group_4__0__Impl : ( ',' ) ;
    public final void rule__CatchExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5693:1: ( ( ',' ) )
            // InternalImperativeOCL.g:5694:1: ( ',' )
            {
            // InternalImperativeOCL.g:5694:1: ( ',' )
            // InternalImperativeOCL.g:5695:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getCommaKeyword_4_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getCommaKeyword_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__CatchExpCS__Group_4__1"
    // InternalImperativeOCL.g:5708:1: rule__CatchExpCS__Group_4__1 : rule__CatchExpCS__Group_4__1__Impl ;
    public final void rule__CatchExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5712:1: ( rule__CatchExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:5713:2: rule__CatchExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_4__1"


    // $ANTLR start "rule__CatchExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:5719:1: rule__CatchExpCS__Group_4__1__Impl : ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 ) ) ;
    public final void rule__CatchExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5723:1: ( ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 ) ) )
            // InternalImperativeOCL.g:5724:1: ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 ) )
            {
            // InternalImperativeOCL.g:5724:1: ( ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 ) )
            // InternalImperativeOCL.g:5725:1: ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsAssignment_4_1());
            }
            // InternalImperativeOCL.g:5726:1: ( rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 )
            // InternalImperativeOCL.g:5726:2: rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsAssignment_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__0"
    // InternalImperativeOCL.g:5740:1: rule__ComputeExpCS__Group__0 : rule__ComputeExpCS__Group__0__Impl rule__ComputeExpCS__Group__1 ;
    public final void rule__ComputeExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5744:1: ( rule__ComputeExpCS__Group__0__Impl rule__ComputeExpCS__Group__1 )
            // InternalImperativeOCL.g:5745:2: rule__ComputeExpCS__Group__0__Impl rule__ComputeExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ComputeExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__0"


    // $ANTLR start "rule__ComputeExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:5752:1: rule__ComputeExpCS__Group__0__Impl : ( 'compute' ) ;
    public final void rule__ComputeExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5756:1: ( ( 'compute' ) )
            // InternalImperativeOCL.g:5757:1: ( 'compute' )
            {
            // InternalImperativeOCL.g:5757:1: ( 'compute' )
            // InternalImperativeOCL.g:5758:1: 'compute'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getComputeKeyword_0());
            }
            match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getComputeKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__0__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__1"
    // InternalImperativeOCL.g:5771:1: rule__ComputeExpCS__Group__1 : rule__ComputeExpCS__Group__1__Impl rule__ComputeExpCS__Group__2 ;
    public final void rule__ComputeExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5775:1: ( rule__ComputeExpCS__Group__1__Impl rule__ComputeExpCS__Group__2 )
            // InternalImperativeOCL.g:5776:2: rule__ComputeExpCS__Group__1__Impl rule__ComputeExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ComputeExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__1"


    // $ANTLR start "rule__ComputeExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:5783:1: rule__ComputeExpCS__Group__1__Impl : ( '(' ) ;
    public final void rule__ComputeExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5787:1: ( ( '(' ) )
            // InternalImperativeOCL.g:5788:1: ( '(' )
            {
            // InternalImperativeOCL.g:5788:1: ( '(' )
            // InternalImperativeOCL.g:5789:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__1__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__2"
    // InternalImperativeOCL.g:5802:1: rule__ComputeExpCS__Group__2 : rule__ComputeExpCS__Group__2__Impl rule__ComputeExpCS__Group__3 ;
    public final void rule__ComputeExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5806:1: ( rule__ComputeExpCS__Group__2__Impl rule__ComputeExpCS__Group__3 )
            // InternalImperativeOCL.g:5807:2: rule__ComputeExpCS__Group__2__Impl rule__ComputeExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__ComputeExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__2"


    // $ANTLR start "rule__ComputeExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:5814:1: rule__ComputeExpCS__Group__2__Impl : ( ( rule__ComputeExpCS__OwnedResultVarAssignment_2 ) ) ;
    public final void rule__ComputeExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5818:1: ( ( ( rule__ComputeExpCS__OwnedResultVarAssignment_2 ) ) )
            // InternalImperativeOCL.g:5819:1: ( ( rule__ComputeExpCS__OwnedResultVarAssignment_2 ) )
            {
            // InternalImperativeOCL.g:5819:1: ( ( rule__ComputeExpCS__OwnedResultVarAssignment_2 ) )
            // InternalImperativeOCL.g:5820:1: ( rule__ComputeExpCS__OwnedResultVarAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getOwnedResultVarAssignment_2());
            }
            // InternalImperativeOCL.g:5821:1: ( rule__ComputeExpCS__OwnedResultVarAssignment_2 )
            // InternalImperativeOCL.g:5821:2: rule__ComputeExpCS__OwnedResultVarAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__OwnedResultVarAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getOwnedResultVarAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__2__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__3"
    // InternalImperativeOCL.g:5831:1: rule__ComputeExpCS__Group__3 : rule__ComputeExpCS__Group__3__Impl rule__ComputeExpCS__Group__4 ;
    public final void rule__ComputeExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5835:1: ( rule__ComputeExpCS__Group__3__Impl rule__ComputeExpCS__Group__4 )
            // InternalImperativeOCL.g:5836:2: rule__ComputeExpCS__Group__3__Impl rule__ComputeExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ComputeExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__3"


    // $ANTLR start "rule__ComputeExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:5843:1: rule__ComputeExpCS__Group__3__Impl : ( ')' ) ;
    public final void rule__ComputeExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5847:1: ( ( ')' ) )
            // InternalImperativeOCL.g:5848:1: ( ')' )
            {
            // InternalImperativeOCL.g:5848:1: ( ')' )
            // InternalImperativeOCL.g:5849:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getRightParenthesisKeyword_3());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getRightParenthesisKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__3__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__4"
    // InternalImperativeOCL.g:5862:1: rule__ComputeExpCS__Group__4 : rule__ComputeExpCS__Group__4__Impl rule__ComputeExpCS__Group__5 ;
    public final void rule__ComputeExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5866:1: ( rule__ComputeExpCS__Group__4__Impl rule__ComputeExpCS__Group__5 )
            // InternalImperativeOCL.g:5867:2: rule__ComputeExpCS__Group__4__Impl rule__ComputeExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ComputeExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__4"


    // $ANTLR start "rule__ComputeExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:5874:1: rule__ComputeExpCS__Group__4__Impl : ( '{' ) ;
    public final void rule__ComputeExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5878:1: ( ( '{' ) )
            // InternalImperativeOCL.g:5879:1: ( '{' )
            {
            // InternalImperativeOCL.g:5879:1: ( '{' )
            // InternalImperativeOCL.g:5880:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getLeftCurlyBracketKeyword_4());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getLeftCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__4__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__5"
    // InternalImperativeOCL.g:5893:1: rule__ComputeExpCS__Group__5 : rule__ComputeExpCS__Group__5__Impl rule__ComputeExpCS__Group__6 ;
    public final void rule__ComputeExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5897:1: ( rule__ComputeExpCS__Group__5__Impl rule__ComputeExpCS__Group__6 )
            // InternalImperativeOCL.g:5898:2: rule__ComputeExpCS__Group__5__Impl rule__ComputeExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ComputeExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__5"


    // $ANTLR start "rule__ComputeExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:5905:1: rule__ComputeExpCS__Group__5__Impl : ( ( rule__ComputeExpCS__OwnedExpsAssignment_5 ) ) ;
    public final void rule__ComputeExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5909:1: ( ( ( rule__ComputeExpCS__OwnedExpsAssignment_5 ) ) )
            // InternalImperativeOCL.g:5910:1: ( ( rule__ComputeExpCS__OwnedExpsAssignment_5 ) )
            {
            // InternalImperativeOCL.g:5910:1: ( ( rule__ComputeExpCS__OwnedExpsAssignment_5 ) )
            // InternalImperativeOCL.g:5911:1: ( rule__ComputeExpCS__OwnedExpsAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getOwnedExpsAssignment_5());
            }
            // InternalImperativeOCL.g:5912:1: ( rule__ComputeExpCS__OwnedExpsAssignment_5 )
            // InternalImperativeOCL.g:5912:2: rule__ComputeExpCS__OwnedExpsAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__OwnedExpsAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getOwnedExpsAssignment_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__5__Impl"


    // $ANTLR start "rule__ComputeExpCS__Group__6"
    // InternalImperativeOCL.g:5922:1: rule__ComputeExpCS__Group__6 : rule__ComputeExpCS__Group__6__Impl ;
    public final void rule__ComputeExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5926:1: ( rule__ComputeExpCS__Group__6__Impl )
            // InternalImperativeOCL.g:5927:2: rule__ComputeExpCS__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ComputeExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__6"


    // $ANTLR start "rule__ComputeExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:5933:1: rule__ComputeExpCS__Group__6__Impl : ( '}' ) ;
    public final void rule__ComputeExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5937:1: ( ( '}' ) )
            // InternalImperativeOCL.g:5938:1: ( '}' )
            {
            // InternalImperativeOCL.g:5938:1: ( '}' )
            // InternalImperativeOCL.g:5939:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getRightCurlyBracketKeyword_6());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getRightCurlyBracketKeyword_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__Group__6__Impl"


    // $ANTLR start "rule__ContinueExpCS__Group__0"
    // InternalImperativeOCL.g:5966:1: rule__ContinueExpCS__Group__0 : rule__ContinueExpCS__Group__0__Impl rule__ContinueExpCS__Group__1 ;
    public final void rule__ContinueExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5970:1: ( rule__ContinueExpCS__Group__0__Impl rule__ContinueExpCS__Group__1 )
            // InternalImperativeOCL.g:5971:2: rule__ContinueExpCS__Group__0__Impl rule__ContinueExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ContinueExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ContinueExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueExpCS__Group__0"


    // $ANTLR start "rule__ContinueExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:5978:1: rule__ContinueExpCS__Group__0__Impl : ( () ) ;
    public final void rule__ContinueExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:5982:1: ( ( () ) )
            // InternalImperativeOCL.g:5983:1: ( () )
            {
            // InternalImperativeOCL.g:5983:1: ( () )
            // InternalImperativeOCL.g:5984:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueExpCSAccess().getContinueExpCSAction_0());
            }
            // InternalImperativeOCL.g:5985:1: ()
            // InternalImperativeOCL.g:5987:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueExpCSAccess().getContinueExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueExpCS__Group__0__Impl"


    // $ANTLR start "rule__ContinueExpCS__Group__1"
    // InternalImperativeOCL.g:5997:1: rule__ContinueExpCS__Group__1 : rule__ContinueExpCS__Group__1__Impl ;
    public final void rule__ContinueExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6001:1: ( rule__ContinueExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:6002:2: rule__ContinueExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ContinueExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueExpCS__Group__1"


    // $ANTLR start "rule__ContinueExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:6008:1: rule__ContinueExpCS__Group__1__Impl : ( 'continue' ) ;
    public final void rule__ContinueExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6012:1: ( ( 'continue' ) )
            // InternalImperativeOCL.g:6013:1: ( 'continue' )
            {
            // InternalImperativeOCL.g:6013:1: ( 'continue' )
            // InternalImperativeOCL.g:6014:1: 'continue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueExpCSAccess().getContinueKeyword_1());
            }
            match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueExpCSAccess().getContinueKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueExpCS__Group__1__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:6031:1: rule__DictLiteralExpCS__Group__0 : rule__DictLiteralExpCS__Group__0__Impl rule__DictLiteralExpCS__Group__1 ;
    public final void rule__DictLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6035:1: ( rule__DictLiteralExpCS__Group__0__Impl rule__DictLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:6036:2: rule__DictLiteralExpCS__Group__0__Impl rule__DictLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DictLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__0"


    // $ANTLR start "rule__DictLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:6043:1: rule__DictLiteralExpCS__Group__0__Impl : ( 'Dict' ) ;
    public final void rule__DictLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6047:1: ( ( 'Dict' ) )
            // InternalImperativeOCL.g:6048:1: ( 'Dict' )
            {
            // InternalImperativeOCL.g:6048:1: ( 'Dict' )
            // InternalImperativeOCL.g:6049:1: 'Dict'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getDictKeyword_0());
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getDictKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:6062:1: rule__DictLiteralExpCS__Group__1 : rule__DictLiteralExpCS__Group__1__Impl rule__DictLiteralExpCS__Group__2 ;
    public final void rule__DictLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6066:1: ( rule__DictLiteralExpCS__Group__1__Impl rule__DictLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:6067:2: rule__DictLiteralExpCS__Group__1__Impl rule__DictLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__DictLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__1"


    // $ANTLR start "rule__DictLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:6074:1: rule__DictLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__DictLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6078:1: ( ( '{' ) )
            // InternalImperativeOCL.g:6079:1: ( '{' )
            {
            // InternalImperativeOCL.g:6079:1: ( '{' )
            // InternalImperativeOCL.g:6080:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:6093:1: rule__DictLiteralExpCS__Group__2 : rule__DictLiteralExpCS__Group__2__Impl rule__DictLiteralExpCS__Group__3 ;
    public final void rule__DictLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6097:1: ( rule__DictLiteralExpCS__Group__2__Impl rule__DictLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:6098:2: rule__DictLiteralExpCS__Group__2__Impl rule__DictLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__DictLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__2"


    // $ANTLR start "rule__DictLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:6105:1: rule__DictLiteralExpCS__Group__2__Impl : ( () ) ;
    public final void rule__DictLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6109:1: ( ( () ) )
            // InternalImperativeOCL.g:6110:1: ( () )
            {
            // InternalImperativeOCL.g:6110:1: ( () )
            // InternalImperativeOCL.g:6111:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getDictLiteralExpCSAction_2());
            }
            // InternalImperativeOCL.g:6112:1: ()
            // InternalImperativeOCL.g:6114:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getDictLiteralExpCSAction_2());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:6124:1: rule__DictLiteralExpCS__Group__3 : rule__DictLiteralExpCS__Group__3__Impl rule__DictLiteralExpCS__Group__4 ;
    public final void rule__DictLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6128:1: ( rule__DictLiteralExpCS__Group__3__Impl rule__DictLiteralExpCS__Group__4 )
            // InternalImperativeOCL.g:6129:2: rule__DictLiteralExpCS__Group__3__Impl rule__DictLiteralExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__DictLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__3"


    // $ANTLR start "rule__DictLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:6136:1: rule__DictLiteralExpCS__Group__3__Impl : ( ( rule__DictLiteralExpCS__Group_3__0 )? ) ;
    public final void rule__DictLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6140:1: ( ( ( rule__DictLiteralExpCS__Group_3__0 )? ) )
            // InternalImperativeOCL.g:6141:1: ( ( rule__DictLiteralExpCS__Group_3__0 )? )
            {
            // InternalImperativeOCL.g:6141:1: ( ( rule__DictLiteralExpCS__Group_3__0 )? )
            // InternalImperativeOCL.g:6142:1: ( rule__DictLiteralExpCS__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:6143:1: ( rule__DictLiteralExpCS__Group_3__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=RULE_INT && LA47_0<=RULE_DOUBLE_QUOTED_STRING)||LA47_0==23||(LA47_0>=99 && LA47_0<=100)||(LA47_0>=115 && LA47_0<=116)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalImperativeOCL.g:6143:2: rule__DictLiteralExpCS__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DictLiteralExpCS__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group__4"
    // InternalImperativeOCL.g:6153:1: rule__DictLiteralExpCS__Group__4 : rule__DictLiteralExpCS__Group__4__Impl ;
    public final void rule__DictLiteralExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6157:1: ( rule__DictLiteralExpCS__Group__4__Impl )
            // InternalImperativeOCL.g:6158:2: rule__DictLiteralExpCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__4"


    // $ANTLR start "rule__DictLiteralExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:6164:1: rule__DictLiteralExpCS__Group__4__Impl : ( '}' ) ;
    public final void rule__DictLiteralExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6168:1: ( ( '}' ) )
            // InternalImperativeOCL.g:6169:1: ( '}' )
            {
            // InternalImperativeOCL.g:6169:1: ( '}' )
            // InternalImperativeOCL.g:6170:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group__4__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3__0"
    // InternalImperativeOCL.g:6193:1: rule__DictLiteralExpCS__Group_3__0 : rule__DictLiteralExpCS__Group_3__0__Impl rule__DictLiteralExpCS__Group_3__1 ;
    public final void rule__DictLiteralExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6197:1: ( rule__DictLiteralExpCS__Group_3__0__Impl rule__DictLiteralExpCS__Group_3__1 )
            // InternalImperativeOCL.g:6198:2: rule__DictLiteralExpCS__Group_3__0__Impl rule__DictLiteralExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__DictLiteralExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3__0"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:6205:1: rule__DictLiteralExpCS__Group_3__0__Impl : ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 ) ) ;
    public final void rule__DictLiteralExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6209:1: ( ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 ) ) )
            // InternalImperativeOCL.g:6210:1: ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 ) )
            {
            // InternalImperativeOCL.g:6210:1: ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 ) )
            // InternalImperativeOCL.g:6211:1: ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_0());
            }
            // InternalImperativeOCL.g:6212:1: ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 )
            // InternalImperativeOCL.g:6212:2: rule__DictLiteralExpCS__OwnedPartsAssignment_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__OwnedPartsAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3__1"
    // InternalImperativeOCL.g:6222:1: rule__DictLiteralExpCS__Group_3__1 : rule__DictLiteralExpCS__Group_3__1__Impl ;
    public final void rule__DictLiteralExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6226:1: ( rule__DictLiteralExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:6227:2: rule__DictLiteralExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3__1"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:6233:1: rule__DictLiteralExpCS__Group_3__1__Impl : ( ( rule__DictLiteralExpCS__Group_3_1__0 )* ) ;
    public final void rule__DictLiteralExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6237:1: ( ( ( rule__DictLiteralExpCS__Group_3_1__0 )* ) )
            // InternalImperativeOCL.g:6238:1: ( ( rule__DictLiteralExpCS__Group_3_1__0 )* )
            {
            // InternalImperativeOCL.g:6238:1: ( ( rule__DictLiteralExpCS__Group_3_1__0 )* )
            // InternalImperativeOCL.g:6239:1: ( rule__DictLiteralExpCS__Group_3_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getGroup_3_1());
            }
            // InternalImperativeOCL.g:6240:1: ( rule__DictLiteralExpCS__Group_3_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==67) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalImperativeOCL.g:6240:2: rule__DictLiteralExpCS__Group_3_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__DictLiteralExpCS__Group_3_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getGroup_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3_1__0"
    // InternalImperativeOCL.g:6254:1: rule__DictLiteralExpCS__Group_3_1__0 : rule__DictLiteralExpCS__Group_3_1__0__Impl rule__DictLiteralExpCS__Group_3_1__1 ;
    public final void rule__DictLiteralExpCS__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6258:1: ( rule__DictLiteralExpCS__Group_3_1__0__Impl rule__DictLiteralExpCS__Group_3_1__1 )
            // InternalImperativeOCL.g:6259:2: rule__DictLiteralExpCS__Group_3_1__0__Impl rule__DictLiteralExpCS__Group_3_1__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__DictLiteralExpCS__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3_1__0"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3_1__0__Impl"
    // InternalImperativeOCL.g:6266:1: rule__DictLiteralExpCS__Group_3_1__0__Impl : ( ',' ) ;
    public final void rule__DictLiteralExpCS__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6270:1: ( ( ',' ) )
            // InternalImperativeOCL.g:6271:1: ( ',' )
            {
            // InternalImperativeOCL.g:6271:1: ( ',' )
            // InternalImperativeOCL.g:6272:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getCommaKeyword_3_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getCommaKeyword_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3_1__0__Impl"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3_1__1"
    // InternalImperativeOCL.g:6285:1: rule__DictLiteralExpCS__Group_3_1__1 : rule__DictLiteralExpCS__Group_3_1__1__Impl ;
    public final void rule__DictLiteralExpCS__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6289:1: ( rule__DictLiteralExpCS__Group_3_1__1__Impl )
            // InternalImperativeOCL.g:6290:2: rule__DictLiteralExpCS__Group_3_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3_1__1"


    // $ANTLR start "rule__DictLiteralExpCS__Group_3_1__1__Impl"
    // InternalImperativeOCL.g:6296:1: rule__DictLiteralExpCS__Group_3_1__1__Impl : ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 ) ) ;
    public final void rule__DictLiteralExpCS__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6300:1: ( ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 ) ) )
            // InternalImperativeOCL.g:6301:1: ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 ) )
            {
            // InternalImperativeOCL.g:6301:1: ( ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 ) )
            // InternalImperativeOCL.g:6302:1: ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1());
            }
            // InternalImperativeOCL.g:6303:1: ( rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 )
            // InternalImperativeOCL.g:6303:2: rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__Group_3_1__1__Impl"


    // $ANTLR start "rule__DictLiteralPartCS__Group__0"
    // InternalImperativeOCL.g:6317:1: rule__DictLiteralPartCS__Group__0 : rule__DictLiteralPartCS__Group__0__Impl rule__DictLiteralPartCS__Group__1 ;
    public final void rule__DictLiteralPartCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6321:1: ( rule__DictLiteralPartCS__Group__0__Impl rule__DictLiteralPartCS__Group__1 )
            // InternalImperativeOCL.g:6322:2: rule__DictLiteralPartCS__Group__0__Impl rule__DictLiteralPartCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__DictLiteralPartCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__0"


    // $ANTLR start "rule__DictLiteralPartCS__Group__0__Impl"
    // InternalImperativeOCL.g:6329:1: rule__DictLiteralPartCS__Group__0__Impl : ( ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 ) ) ;
    public final void rule__DictLiteralPartCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6333:1: ( ( ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 ) ) )
            // InternalImperativeOCL.g:6334:1: ( ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 ) )
            {
            // InternalImperativeOCL.g:6334:1: ( ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 ) )
            // InternalImperativeOCL.g:6335:1: ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getOwnedKeyAssignment_0());
            }
            // InternalImperativeOCL.g:6336:1: ( rule__DictLiteralPartCS__OwnedKeyAssignment_0 )
            // InternalImperativeOCL.g:6336:2: rule__DictLiteralPartCS__OwnedKeyAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__OwnedKeyAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getOwnedKeyAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__0__Impl"


    // $ANTLR start "rule__DictLiteralPartCS__Group__1"
    // InternalImperativeOCL.g:6346:1: rule__DictLiteralPartCS__Group__1 : rule__DictLiteralPartCS__Group__1__Impl rule__DictLiteralPartCS__Group__2 ;
    public final void rule__DictLiteralPartCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6350:1: ( rule__DictLiteralPartCS__Group__1__Impl rule__DictLiteralPartCS__Group__2 )
            // InternalImperativeOCL.g:6351:2: rule__DictLiteralPartCS__Group__1__Impl rule__DictLiteralPartCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__DictLiteralPartCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__1"


    // $ANTLR start "rule__DictLiteralPartCS__Group__1__Impl"
    // InternalImperativeOCL.g:6358:1: rule__DictLiteralPartCS__Group__1__Impl : ( '=' ) ;
    public final void rule__DictLiteralPartCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6362:1: ( ( '=' ) )
            // InternalImperativeOCL.g:6363:1: ( '=' )
            {
            // InternalImperativeOCL.g:6363:1: ( '=' )
            // InternalImperativeOCL.g:6364:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getEqualsSignKeyword_1());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getEqualsSignKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__1__Impl"


    // $ANTLR start "rule__DictLiteralPartCS__Group__2"
    // InternalImperativeOCL.g:6377:1: rule__DictLiteralPartCS__Group__2 : rule__DictLiteralPartCS__Group__2__Impl ;
    public final void rule__DictLiteralPartCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6381:1: ( rule__DictLiteralPartCS__Group__2__Impl )
            // InternalImperativeOCL.g:6382:2: rule__DictLiteralPartCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__2"


    // $ANTLR start "rule__DictLiteralPartCS__Group__2__Impl"
    // InternalImperativeOCL.g:6388:1: rule__DictLiteralPartCS__Group__2__Impl : ( ( rule__DictLiteralPartCS__OwnedValueAssignment_2 ) ) ;
    public final void rule__DictLiteralPartCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6392:1: ( ( ( rule__DictLiteralPartCS__OwnedValueAssignment_2 ) ) )
            // InternalImperativeOCL.g:6393:1: ( ( rule__DictLiteralPartCS__OwnedValueAssignment_2 ) )
            {
            // InternalImperativeOCL.g:6393:1: ( ( rule__DictLiteralPartCS__OwnedValueAssignment_2 ) )
            // InternalImperativeOCL.g:6394:1: ( rule__DictLiteralPartCS__OwnedValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getOwnedValueAssignment_2());
            }
            // InternalImperativeOCL.g:6395:1: ( rule__DictLiteralPartCS__OwnedValueAssignment_2 )
            // InternalImperativeOCL.g:6395:2: rule__DictLiteralPartCS__OwnedValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DictLiteralPartCS__OwnedValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getOwnedValueAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__Group__2__Impl"


    // $ANTLR start "rule__ExpressionBlockCS__Group__0"
    // InternalImperativeOCL.g:6411:1: rule__ExpressionBlockCS__Group__0 : rule__ExpressionBlockCS__Group__0__Impl rule__ExpressionBlockCS__Group__1 ;
    public final void rule__ExpressionBlockCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6415:1: ( rule__ExpressionBlockCS__Group__0__Impl rule__ExpressionBlockCS__Group__1 )
            // InternalImperativeOCL.g:6416:2: rule__ExpressionBlockCS__Group__0__Impl rule__ExpressionBlockCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ExpressionBlockCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__0"


    // $ANTLR start "rule__ExpressionBlockCS__Group__0__Impl"
    // InternalImperativeOCL.g:6423:1: rule__ExpressionBlockCS__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionBlockCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6427:1: ( ( () ) )
            // InternalImperativeOCL.g:6428:1: ( () )
            {
            // InternalImperativeOCL.g:6428:1: ( () )
            // InternalImperativeOCL.g:6429:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getExpressionBlockCSAction_0());
            }
            // InternalImperativeOCL.g:6430:1: ()
            // InternalImperativeOCL.g:6432:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getExpressionBlockCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__0__Impl"


    // $ANTLR start "rule__ExpressionBlockCS__Group__1"
    // InternalImperativeOCL.g:6442:1: rule__ExpressionBlockCS__Group__1 : rule__ExpressionBlockCS__Group__1__Impl rule__ExpressionBlockCS__Group__2 ;
    public final void rule__ExpressionBlockCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6446:1: ( rule__ExpressionBlockCS__Group__1__Impl rule__ExpressionBlockCS__Group__2 )
            // InternalImperativeOCL.g:6447:2: rule__ExpressionBlockCS__Group__1__Impl rule__ExpressionBlockCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ExpressionBlockCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__1"


    // $ANTLR start "rule__ExpressionBlockCS__Group__1__Impl"
    // InternalImperativeOCL.g:6454:1: rule__ExpressionBlockCS__Group__1__Impl : ( ( 'do' )? ) ;
    public final void rule__ExpressionBlockCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6458:1: ( ( ( 'do' )? ) )
            // InternalImperativeOCL.g:6459:1: ( ( 'do' )? )
            {
            // InternalImperativeOCL.g:6459:1: ( ( 'do' )? )
            // InternalImperativeOCL.g:6460:1: ( 'do' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getDoKeyword_1());
            }
            // InternalImperativeOCL.g:6461:1: ( 'do' )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==78) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalImperativeOCL.g:6462:2: 'do'
                    {
                    match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getDoKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__1__Impl"


    // $ANTLR start "rule__ExpressionBlockCS__Group__2"
    // InternalImperativeOCL.g:6473:1: rule__ExpressionBlockCS__Group__2 : rule__ExpressionBlockCS__Group__2__Impl rule__ExpressionBlockCS__Group__3 ;
    public final void rule__ExpressionBlockCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6477:1: ( rule__ExpressionBlockCS__Group__2__Impl rule__ExpressionBlockCS__Group__3 )
            // InternalImperativeOCL.g:6478:2: rule__ExpressionBlockCS__Group__2__Impl rule__ExpressionBlockCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ExpressionBlockCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__2"


    // $ANTLR start "rule__ExpressionBlockCS__Group__2__Impl"
    // InternalImperativeOCL.g:6485:1: rule__ExpressionBlockCS__Group__2__Impl : ( '{' ) ;
    public final void rule__ExpressionBlockCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6489:1: ( ( '{' ) )
            // InternalImperativeOCL.g:6490:1: ( '{' )
            {
            // InternalImperativeOCL.g:6490:1: ( '{' )
            // InternalImperativeOCL.g:6491:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getLeftCurlyBracketKeyword_2());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getLeftCurlyBracketKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__2__Impl"


    // $ANTLR start "rule__ExpressionBlockCS__Group__3"
    // InternalImperativeOCL.g:6504:1: rule__ExpressionBlockCS__Group__3 : rule__ExpressionBlockCS__Group__3__Impl rule__ExpressionBlockCS__Group__4 ;
    public final void rule__ExpressionBlockCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6508:1: ( rule__ExpressionBlockCS__Group__3__Impl rule__ExpressionBlockCS__Group__4 )
            // InternalImperativeOCL.g:6509:2: rule__ExpressionBlockCS__Group__3__Impl rule__ExpressionBlockCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ExpressionBlockCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__3"


    // $ANTLR start "rule__ExpressionBlockCS__Group__3__Impl"
    // InternalImperativeOCL.g:6516:1: rule__ExpressionBlockCS__Group__3__Impl : ( ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )* ) ;
    public final void rule__ExpressionBlockCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6520:1: ( ( ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )* ) )
            // InternalImperativeOCL.g:6521:1: ( ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )* )
            {
            // InternalImperativeOCL.g:6521:1: ( ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )* )
            // InternalImperativeOCL.g:6522:1: ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getOwnedExpsAssignment_3());
            }
            // InternalImperativeOCL.g:6523:1: ( rule__ExpressionBlockCS__OwnedExpsAssignment_3 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0>=RULE_INT && LA50_0<=RULE_ESCAPED_ID)||(LA50_0>=16 && LA50_0<=23)||(LA50_0>=40 && LA50_0<=54)||(LA50_0>=63 && LA50_0<=64)||LA50_0==66||LA50_0==68||LA50_0==71||LA50_0==73||(LA50_0>=76 && LA50_0<=78)||LA50_0==81||LA50_0==83||(LA50_0>=85 && LA50_0<=86)||LA50_0==90||(LA50_0>=92 && LA50_0<=94)||LA50_0==97||(LA50_0>=99 && LA50_0<=100)||LA50_0==105||(LA50_0>=108 && LA50_0<=109)||(LA50_0>=113 && LA50_0<=116)) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalImperativeOCL.g:6523:2: rule__ExpressionBlockCS__OwnedExpsAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__ExpressionBlockCS__OwnedExpsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getOwnedExpsAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__3__Impl"


    // $ANTLR start "rule__ExpressionBlockCS__Group__4"
    // InternalImperativeOCL.g:6533:1: rule__ExpressionBlockCS__Group__4 : rule__ExpressionBlockCS__Group__4__Impl ;
    public final void rule__ExpressionBlockCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6537:1: ( rule__ExpressionBlockCS__Group__4__Impl )
            // InternalImperativeOCL.g:6538:2: rule__ExpressionBlockCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionBlockCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__4"


    // $ANTLR start "rule__ExpressionBlockCS__Group__4__Impl"
    // InternalImperativeOCL.g:6544:1: rule__ExpressionBlockCS__Group__4__Impl : ( '}' ) ;
    public final void rule__ExpressionBlockCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6548:1: ( ( '}' ) )
            // InternalImperativeOCL.g:6549:1: ( '}' )
            {
            // InternalImperativeOCL.g:6549:1: ( '}' )
            // InternalImperativeOCL.g:6550:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getRightCurlyBracketKeyword_4());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getRightCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__Group__4__Impl"


    // $ANTLR start "rule__ExpressionStatementCS__Group__0"
    // InternalImperativeOCL.g:6573:1: rule__ExpressionStatementCS__Group__0 : rule__ExpressionStatementCS__Group__0__Impl rule__ExpressionStatementCS__Group__1 ;
    public final void rule__ExpressionStatementCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6577:1: ( rule__ExpressionStatementCS__Group__0__Impl rule__ExpressionStatementCS__Group__1 )
            // InternalImperativeOCL.g:6578:2: rule__ExpressionStatementCS__Group__0__Impl rule__ExpressionStatementCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ExpressionStatementCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionStatementCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionStatementCS__Group__0"


    // $ANTLR start "rule__ExpressionStatementCS__Group__0__Impl"
    // InternalImperativeOCL.g:6585:1: rule__ExpressionStatementCS__Group__0__Impl : ( ruleExpCS ) ;
    public final void rule__ExpressionStatementCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6589:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:6590:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:6590:1: ( ruleExpCS )
            // InternalImperativeOCL.g:6591:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStatementCSAccess().getExpCSParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStatementCSAccess().getExpCSParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionStatementCS__Group__0__Impl"


    // $ANTLR start "rule__ExpressionStatementCS__Group__1"
    // InternalImperativeOCL.g:6602:1: rule__ExpressionStatementCS__Group__1 : rule__ExpressionStatementCS__Group__1__Impl ;
    public final void rule__ExpressionStatementCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6606:1: ( rule__ExpressionStatementCS__Group__1__Impl )
            // InternalImperativeOCL.g:6607:2: rule__ExpressionStatementCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionStatementCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionStatementCS__Group__1"


    // $ANTLR start "rule__ExpressionStatementCS__Group__1__Impl"
    // InternalImperativeOCL.g:6613:1: rule__ExpressionStatementCS__Group__1__Impl : ( ( ';' )? ) ;
    public final void rule__ExpressionStatementCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6617:1: ( ( ( ';' )? ) )
            // InternalImperativeOCL.g:6618:1: ( ( ';' )? )
            {
            // InternalImperativeOCL.g:6618:1: ( ( ';' )? )
            // InternalImperativeOCL.g:6619:1: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStatementCSAccess().getSemicolonKeyword_1());
            }
            // InternalImperativeOCL.g:6620:1: ( ';' )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==79) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalImperativeOCL.g:6621:2: ';'
                    {
                    match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStatementCSAccess().getSemicolonKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionStatementCS__Group__1__Impl"


    // $ANTLR start "rule__ForExpCS__Group__0"
    // InternalImperativeOCL.g:6636:1: rule__ForExpCS__Group__0 : rule__ForExpCS__Group__0__Impl rule__ForExpCS__Group__1 ;
    public final void rule__ForExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6640:1: ( rule__ForExpCS__Group__0__Impl rule__ForExpCS__Group__1 )
            // InternalImperativeOCL.g:6641:2: rule__ForExpCS__Group__0__Impl rule__ForExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ForExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__0"


    // $ANTLR start "rule__ForExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:6648:1: rule__ForExpCS__Group__0__Impl : ( ( rule__ForExpCS__Alternatives_0 ) ) ;
    public final void rule__ForExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6652:1: ( ( ( rule__ForExpCS__Alternatives_0 ) ) )
            // InternalImperativeOCL.g:6653:1: ( ( rule__ForExpCS__Alternatives_0 ) )
            {
            // InternalImperativeOCL.g:6653:1: ( ( rule__ForExpCS__Alternatives_0 ) )
            // InternalImperativeOCL.g:6654:1: ( rule__ForExpCS__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getAlternatives_0());
            }
            // InternalImperativeOCL.g:6655:1: ( rule__ForExpCS__Alternatives_0 )
            // InternalImperativeOCL.g:6655:2: rule__ForExpCS__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getAlternatives_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__0__Impl"


    // $ANTLR start "rule__ForExpCS__Group__1"
    // InternalImperativeOCL.g:6665:1: rule__ForExpCS__Group__1 : rule__ForExpCS__Group__1__Impl rule__ForExpCS__Group__2 ;
    public final void rule__ForExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6669:1: ( rule__ForExpCS__Group__1__Impl rule__ForExpCS__Group__2 )
            // InternalImperativeOCL.g:6670:2: rule__ForExpCS__Group__1__Impl rule__ForExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ForExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__1"


    // $ANTLR start "rule__ForExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:6677:1: rule__ForExpCS__Group__1__Impl : ( '(' ) ;
    public final void rule__ForExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6681:1: ( ( '(' ) )
            // InternalImperativeOCL.g:6682:1: ( '(' )
            {
            // InternalImperativeOCL.g:6682:1: ( '(' )
            // InternalImperativeOCL.g:6683:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__1__Impl"


    // $ANTLR start "rule__ForExpCS__Group__2"
    // InternalImperativeOCL.g:6696:1: rule__ForExpCS__Group__2 : rule__ForExpCS__Group__2__Impl rule__ForExpCS__Group__3 ;
    public final void rule__ForExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6700:1: ( rule__ForExpCS__Group__2__Impl rule__ForExpCS__Group__3 )
            // InternalImperativeOCL.g:6701:2: rule__ForExpCS__Group__2__Impl rule__ForExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ForExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__2"


    // $ANTLR start "rule__ForExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:6708:1: rule__ForExpCS__Group__2__Impl : ( ( rule__ForExpCS__Group_2__0 )? ) ;
    public final void rule__ForExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6712:1: ( ( ( rule__ForExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:6713:1: ( ( rule__ForExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:6713:1: ( ( rule__ForExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:6714:1: ( rule__ForExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:6715:1: ( rule__ForExpCS__Group_2__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_SIMPLE_ID) ) {
                int LA52_1 = input.LA(2);

                if ( (synpred117_InternalImperativeOCL()) ) {
                    alt52=1;
                }
            }
            else if ( (LA52_0==RULE_ESCAPED_ID) ) {
                int LA52_2 = input.LA(2);

                if ( (synpred117_InternalImperativeOCL()) ) {
                    alt52=1;
                }
            }
            switch (alt52) {
                case 1 :
                    // InternalImperativeOCL.g:6715:2: rule__ForExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ForExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__2__Impl"


    // $ANTLR start "rule__ForExpCS__Group__3"
    // InternalImperativeOCL.g:6725:1: rule__ForExpCS__Group__3 : rule__ForExpCS__Group__3__Impl rule__ForExpCS__Group__4 ;
    public final void rule__ForExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6729:1: ( rule__ForExpCS__Group__3__Impl rule__ForExpCS__Group__4 )
            // InternalImperativeOCL.g:6730:2: rule__ForExpCS__Group__3__Impl rule__ForExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ForExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__3"


    // $ANTLR start "rule__ForExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:6737:1: rule__ForExpCS__Group__3__Impl : ( ( rule__ForExpCS__OwnedIteratorAssignment_3 ) ) ;
    public final void rule__ForExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6741:1: ( ( ( rule__ForExpCS__OwnedIteratorAssignment_3 ) ) )
            // InternalImperativeOCL.g:6742:1: ( ( rule__ForExpCS__OwnedIteratorAssignment_3 ) )
            {
            // InternalImperativeOCL.g:6742:1: ( ( rule__ForExpCS__OwnedIteratorAssignment_3 ) )
            // InternalImperativeOCL.g:6743:1: ( rule__ForExpCS__OwnedIteratorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedIteratorAssignment_3());
            }
            // InternalImperativeOCL.g:6744:1: ( rule__ForExpCS__OwnedIteratorAssignment_3 )
            // InternalImperativeOCL.g:6744:2: rule__ForExpCS__OwnedIteratorAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__OwnedIteratorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedIteratorAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__3__Impl"


    // $ANTLR start "rule__ForExpCS__Group__4"
    // InternalImperativeOCL.g:6754:1: rule__ForExpCS__Group__4 : rule__ForExpCS__Group__4__Impl rule__ForExpCS__Group__5 ;
    public final void rule__ForExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6758:1: ( rule__ForExpCS__Group__4__Impl rule__ForExpCS__Group__5 )
            // InternalImperativeOCL.g:6759:2: rule__ForExpCS__Group__4__Impl rule__ForExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ForExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__4"


    // $ANTLR start "rule__ForExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:6766:1: rule__ForExpCS__Group__4__Impl : ( ( rule__ForExpCS__Group_4__0 )? ) ;
    public final void rule__ForExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6770:1: ( ( ( rule__ForExpCS__Group_4__0 )? ) )
            // InternalImperativeOCL.g:6771:1: ( ( rule__ForExpCS__Group_4__0 )? )
            {
            // InternalImperativeOCL.g:6771:1: ( ( rule__ForExpCS__Group_4__0 )? )
            // InternalImperativeOCL.g:6772:1: ( rule__ForExpCS__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:6773:1: ( rule__ForExpCS__Group_4__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==80) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalImperativeOCL.g:6773:2: rule__ForExpCS__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ForExpCS__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__4__Impl"


    // $ANTLR start "rule__ForExpCS__Group__5"
    // InternalImperativeOCL.g:6783:1: rule__ForExpCS__Group__5 : rule__ForExpCS__Group__5__Impl rule__ForExpCS__Group__6 ;
    public final void rule__ForExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6787:1: ( rule__ForExpCS__Group__5__Impl rule__ForExpCS__Group__6 )
            // InternalImperativeOCL.g:6788:2: rule__ForExpCS__Group__5__Impl rule__ForExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ForExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__5"


    // $ANTLR start "rule__ForExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:6795:1: rule__ForExpCS__Group__5__Impl : ( ')' ) ;
    public final void rule__ForExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6799:1: ( ( ')' ) )
            // InternalImperativeOCL.g:6800:1: ( ')' )
            {
            // InternalImperativeOCL.g:6800:1: ( ')' )
            // InternalImperativeOCL.g:6801:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__5__Impl"


    // $ANTLR start "rule__ForExpCS__Group__6"
    // InternalImperativeOCL.g:6814:1: rule__ForExpCS__Group__6 : rule__ForExpCS__Group__6__Impl ;
    public final void rule__ForExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6818:1: ( rule__ForExpCS__Group__6__Impl )
            // InternalImperativeOCL.g:6819:2: rule__ForExpCS__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__6"


    // $ANTLR start "rule__ForExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:6825:1: rule__ForExpCS__Group__6__Impl : ( ( rule__ForExpCS__OwnedBodyAssignment_6 ) ) ;
    public final void rule__ForExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6829:1: ( ( ( rule__ForExpCS__OwnedBodyAssignment_6 ) ) )
            // InternalImperativeOCL.g:6830:1: ( ( rule__ForExpCS__OwnedBodyAssignment_6 ) )
            {
            // InternalImperativeOCL.g:6830:1: ( ( rule__ForExpCS__OwnedBodyAssignment_6 ) )
            // InternalImperativeOCL.g:6831:1: ( rule__ForExpCS__OwnedBodyAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedBodyAssignment_6());
            }
            // InternalImperativeOCL.g:6832:1: ( rule__ForExpCS__OwnedBodyAssignment_6 )
            // InternalImperativeOCL.g:6832:2: rule__ForExpCS__OwnedBodyAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__OwnedBodyAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedBodyAssignment_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group__6__Impl"


    // $ANTLR start "rule__ForExpCS__Group_2__0"
    // InternalImperativeOCL.g:6856:1: rule__ForExpCS__Group_2__0 : rule__ForExpCS__Group_2__0__Impl rule__ForExpCS__Group_2__1 ;
    public final void rule__ForExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6860:1: ( rule__ForExpCS__Group_2__0__Impl rule__ForExpCS__Group_2__1 )
            // InternalImperativeOCL.g:6861:2: rule__ForExpCS__Group_2__0__Impl rule__ForExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ForExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_2__0"


    // $ANTLR start "rule__ForExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:6868:1: rule__ForExpCS__Group_2__0__Impl : ( ( rule__ForExpCS__OwnedTargetAssignment_2_0 ) ) ;
    public final void rule__ForExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6872:1: ( ( ( rule__ForExpCS__OwnedTargetAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:6873:1: ( ( rule__ForExpCS__OwnedTargetAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:6873:1: ( ( rule__ForExpCS__OwnedTargetAssignment_2_0 ) )
            // InternalImperativeOCL.g:6874:1: ( rule__ForExpCS__OwnedTargetAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedTargetAssignment_2_0());
            }
            // InternalImperativeOCL.g:6875:1: ( rule__ForExpCS__OwnedTargetAssignment_2_0 )
            // InternalImperativeOCL.g:6875:2: rule__ForExpCS__OwnedTargetAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__OwnedTargetAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedTargetAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__ForExpCS__Group_2__1"
    // InternalImperativeOCL.g:6885:1: rule__ForExpCS__Group_2__1 : rule__ForExpCS__Group_2__1__Impl ;
    public final void rule__ForExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6889:1: ( rule__ForExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:6890:2: rule__ForExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_2__1"


    // $ANTLR start "rule__ForExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:6896:1: rule__ForExpCS__Group_2__1__Impl : ( ';' ) ;
    public final void rule__ForExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6900:1: ( ( ';' ) )
            // InternalImperativeOCL.g:6901:1: ( ';' )
            {
            // InternalImperativeOCL.g:6901:1: ( ';' )
            // InternalImperativeOCL.g:6902:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getSemicolonKeyword_2_1());
            }
            match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getSemicolonKeyword_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__ForExpCS__Group_4__0"
    // InternalImperativeOCL.g:6919:1: rule__ForExpCS__Group_4__0 : rule__ForExpCS__Group_4__0__Impl rule__ForExpCS__Group_4__1 ;
    public final void rule__ForExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6923:1: ( rule__ForExpCS__Group_4__0__Impl rule__ForExpCS__Group_4__1 )
            // InternalImperativeOCL.g:6924:2: rule__ForExpCS__Group_4__0__Impl rule__ForExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ForExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_4__0"


    // $ANTLR start "rule__ForExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:6931:1: rule__ForExpCS__Group_4__0__Impl : ( '|' ) ;
    public final void rule__ForExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6935:1: ( ( '|' ) )
            // InternalImperativeOCL.g:6936:1: ( '|' )
            {
            // InternalImperativeOCL.g:6936:1: ( '|' )
            // InternalImperativeOCL.g:6937:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getVerticalLineKeyword_4_0());
            }
            match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getVerticalLineKeyword_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__ForExpCS__Group_4__1"
    // InternalImperativeOCL.g:6950:1: rule__ForExpCS__Group_4__1 : rule__ForExpCS__Group_4__1__Impl ;
    public final void rule__ForExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6954:1: ( rule__ForExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:6955:2: rule__ForExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_4__1"


    // $ANTLR start "rule__ForExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:6961:1: rule__ForExpCS__Group_4__1__Impl : ( ( rule__ForExpCS__OwnedConditionAssignment_4_1 ) ) ;
    public final void rule__ForExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6965:1: ( ( ( rule__ForExpCS__OwnedConditionAssignment_4_1 ) ) )
            // InternalImperativeOCL.g:6966:1: ( ( rule__ForExpCS__OwnedConditionAssignment_4_1 ) )
            {
            // InternalImperativeOCL.g:6966:1: ( ( rule__ForExpCS__OwnedConditionAssignment_4_1 ) )
            // InternalImperativeOCL.g:6967:1: ( rule__ForExpCS__OwnedConditionAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedConditionAssignment_4_1());
            }
            // InternalImperativeOCL.g:6968:1: ( rule__ForExpCS__OwnedConditionAssignment_4_1 )
            // InternalImperativeOCL.g:6968:2: rule__ForExpCS__OwnedConditionAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ForExpCS__OwnedConditionAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedConditionAssignment_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__0"
    // InternalImperativeOCL.g:6982:1: rule__ImperativeIterateExpCS__Group_0__0 : rule__ImperativeIterateExpCS__Group_0__0__Impl rule__ImperativeIterateExpCS__Group_0__1 ;
    public final void rule__ImperativeIterateExpCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6986:1: ( rule__ImperativeIterateExpCS__Group_0__0__Impl rule__ImperativeIterateExpCS__Group_0__1 )
            // InternalImperativeOCL.g:6987:2: rule__ImperativeIterateExpCS__Group_0__0__Impl rule__ImperativeIterateExpCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ImperativeIterateExpCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:6994:1: rule__ImperativeIterateExpCS__Group_0__0__Impl : ( ( rule__ImperativeIterateExpCS__NameAssignment_0_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:6998:1: ( ( ( rule__ImperativeIterateExpCS__NameAssignment_0_0 ) ) )
            // InternalImperativeOCL.g:6999:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_0_0 ) )
            {
            // InternalImperativeOCL.g:6999:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_0_0 ) )
            // InternalImperativeOCL.g:7000:1: ( rule__ImperativeIterateExpCS__NameAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_0_0());
            }
            // InternalImperativeOCL.g:7001:1: ( rule__ImperativeIterateExpCS__NameAssignment_0_0 )
            // InternalImperativeOCL.g:7001:2: rule__ImperativeIterateExpCS__NameAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__NameAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__1"
    // InternalImperativeOCL.g:7011:1: rule__ImperativeIterateExpCS__Group_0__1 : rule__ImperativeIterateExpCS__Group_0__1__Impl rule__ImperativeIterateExpCS__Group_0__2 ;
    public final void rule__ImperativeIterateExpCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7015:1: ( rule__ImperativeIterateExpCS__Group_0__1__Impl rule__ImperativeIterateExpCS__Group_0__2 )
            // InternalImperativeOCL.g:7016:2: rule__ImperativeIterateExpCS__Group_0__1__Impl rule__ImperativeIterateExpCS__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:7023:1: rule__ImperativeIterateExpCS__Group_0__1__Impl : ( '(' ) ;
    public final void rule__ImperativeIterateExpCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7027:1: ( ( '(' ) )
            // InternalImperativeOCL.g:7028:1: ( '(' )
            {
            // InternalImperativeOCL.g:7028:1: ( '(' )
            // InternalImperativeOCL.g:7029:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_0_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__2"
    // InternalImperativeOCL.g:7042:1: rule__ImperativeIterateExpCS__Group_0__2 : rule__ImperativeIterateExpCS__Group_0__2__Impl rule__ImperativeIterateExpCS__Group_0__3 ;
    public final void rule__ImperativeIterateExpCS__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7046:1: ( rule__ImperativeIterateExpCS__Group_0__2__Impl rule__ImperativeIterateExpCS__Group_0__3 )
            // InternalImperativeOCL.g:7047:2: rule__ImperativeIterateExpCS__Group_0__2__Impl rule__ImperativeIterateExpCS__Group_0__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__2"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__2__Impl"
    // InternalImperativeOCL.g:7054:1: rule__ImperativeIterateExpCS__Group_0__2__Impl : ( ( rule__ImperativeIterateExpCS__Group_0_2__0 )? ) ;
    public final void rule__ImperativeIterateExpCS__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7058:1: ( ( ( rule__ImperativeIterateExpCS__Group_0_2__0 )? ) )
            // InternalImperativeOCL.g:7059:1: ( ( rule__ImperativeIterateExpCS__Group_0_2__0 )? )
            {
            // InternalImperativeOCL.g:7059:1: ( ( rule__ImperativeIterateExpCS__Group_0_2__0 )? )
            // InternalImperativeOCL.g:7060:1: ( rule__ImperativeIterateExpCS__Group_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_0_2());
            }
            // InternalImperativeOCL.g:7061:1: ( rule__ImperativeIterateExpCS__Group_0_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_SIMPLE_ID) ) {
                int LA54_1 = input.LA(2);

                if ( (LA54_1==75||LA54_1==80) ) {
                    alt54=1;
                }
            }
            else if ( (LA54_0==RULE_ESCAPED_ID) ) {
                int LA54_2 = input.LA(2);

                if ( (LA54_2==75||LA54_2==80) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    // InternalImperativeOCL.g:7061:2: rule__ImperativeIterateExpCS__Group_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__2__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__3"
    // InternalImperativeOCL.g:7071:1: rule__ImperativeIterateExpCS__Group_0__3 : rule__ImperativeIterateExpCS__Group_0__3__Impl rule__ImperativeIterateExpCS__Group_0__4 ;
    public final void rule__ImperativeIterateExpCS__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7075:1: ( rule__ImperativeIterateExpCS__Group_0__3__Impl rule__ImperativeIterateExpCS__Group_0__4 )
            // InternalImperativeOCL.g:7076:2: rule__ImperativeIterateExpCS__Group_0__3__Impl rule__ImperativeIterateExpCS__Group_0__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__ImperativeIterateExpCS__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__3"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__3__Impl"
    // InternalImperativeOCL.g:7083:1: rule__ImperativeIterateExpCS__Group_0__3__Impl : ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7087:1: ( ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 ) ) )
            // InternalImperativeOCL.g:7088:1: ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 ) )
            {
            // InternalImperativeOCL.g:7088:1: ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 ) )
            // InternalImperativeOCL.g:7089:1: ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyAssignment_0_3());
            }
            // InternalImperativeOCL.g:7090:1: ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 )
            // InternalImperativeOCL.g:7090:2: rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyAssignment_0_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__3__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__4"
    // InternalImperativeOCL.g:7100:1: rule__ImperativeIterateExpCS__Group_0__4 : rule__ImperativeIterateExpCS__Group_0__4__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7104:1: ( rule__ImperativeIterateExpCS__Group_0__4__Impl )
            // InternalImperativeOCL.g:7105:2: rule__ImperativeIterateExpCS__Group_0__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__4"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0__4__Impl"
    // InternalImperativeOCL.g:7111:1: rule__ImperativeIterateExpCS__Group_0__4__Impl : ( ')' ) ;
    public final void rule__ImperativeIterateExpCS__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7115:1: ( ( ')' ) )
            // InternalImperativeOCL.g:7116:1: ( ')' )
            {
            // InternalImperativeOCL.g:7116:1: ( ')' )
            // InternalImperativeOCL.g:7117:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_0_4());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_0_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0__4__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0_2__0"
    // InternalImperativeOCL.g:7140:1: rule__ImperativeIterateExpCS__Group_0_2__0 : rule__ImperativeIterateExpCS__Group_0_2__0__Impl rule__ImperativeIterateExpCS__Group_0_2__1 ;
    public final void rule__ImperativeIterateExpCS__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7144:1: ( rule__ImperativeIterateExpCS__Group_0_2__0__Impl rule__ImperativeIterateExpCS__Group_0_2__1 )
            // InternalImperativeOCL.g:7145:2: rule__ImperativeIterateExpCS__Group_0_2__0__Impl rule__ImperativeIterateExpCS__Group_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ImperativeIterateExpCS__Group_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0_2__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0_2__0__Impl"
    // InternalImperativeOCL.g:7152:1: rule__ImperativeIterateExpCS__Group_0_2__0__Impl : ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7156:1: ( ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 ) ) )
            // InternalImperativeOCL.g:7157:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 ) )
            {
            // InternalImperativeOCL.g:7157:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 ) )
            // InternalImperativeOCL.g:7158:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_0_2_0());
            }
            // InternalImperativeOCL.g:7159:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 )
            // InternalImperativeOCL.g:7159:2: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0_2__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0_2__1"
    // InternalImperativeOCL.g:7169:1: rule__ImperativeIterateExpCS__Group_0_2__1 : rule__ImperativeIterateExpCS__Group_0_2__1__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7173:1: ( rule__ImperativeIterateExpCS__Group_0_2__1__Impl )
            // InternalImperativeOCL.g:7174:2: rule__ImperativeIterateExpCS__Group_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0_2__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_0_2__1__Impl"
    // InternalImperativeOCL.g:7180:1: rule__ImperativeIterateExpCS__Group_0_2__1__Impl : ( '|' ) ;
    public final void rule__ImperativeIterateExpCS__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7184:1: ( ( '|' ) )
            // InternalImperativeOCL.g:7185:1: ( '|' )
            {
            // InternalImperativeOCL.g:7185:1: ( '|' )
            // InternalImperativeOCL.g:7186:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_0_2_1());
            }
            match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_0_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_0_2__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__0"
    // InternalImperativeOCL.g:7203:1: rule__ImperativeIterateExpCS__Group_1__0 : rule__ImperativeIterateExpCS__Group_1__0__Impl rule__ImperativeIterateExpCS__Group_1__1 ;
    public final void rule__ImperativeIterateExpCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7207:1: ( rule__ImperativeIterateExpCS__Group_1__0__Impl rule__ImperativeIterateExpCS__Group_1__1 )
            // InternalImperativeOCL.g:7208:2: rule__ImperativeIterateExpCS__Group_1__0__Impl rule__ImperativeIterateExpCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ImperativeIterateExpCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:7215:1: rule__ImperativeIterateExpCS__Group_1__0__Impl : ( ( rule__ImperativeIterateExpCS__NameAssignment_1_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7219:1: ( ( ( rule__ImperativeIterateExpCS__NameAssignment_1_0 ) ) )
            // InternalImperativeOCL.g:7220:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_1_0 ) )
            {
            // InternalImperativeOCL.g:7220:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_1_0 ) )
            // InternalImperativeOCL.g:7221:1: ( rule__ImperativeIterateExpCS__NameAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_1_0());
            }
            // InternalImperativeOCL.g:7222:1: ( rule__ImperativeIterateExpCS__NameAssignment_1_0 )
            // InternalImperativeOCL.g:7222:2: rule__ImperativeIterateExpCS__NameAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__NameAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__1"
    // InternalImperativeOCL.g:7232:1: rule__ImperativeIterateExpCS__Group_1__1 : rule__ImperativeIterateExpCS__Group_1__1__Impl rule__ImperativeIterateExpCS__Group_1__2 ;
    public final void rule__ImperativeIterateExpCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7236:1: ( rule__ImperativeIterateExpCS__Group_1__1__Impl rule__ImperativeIterateExpCS__Group_1__2 )
            // InternalImperativeOCL.g:7237:2: rule__ImperativeIterateExpCS__Group_1__1__Impl rule__ImperativeIterateExpCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:7244:1: rule__ImperativeIterateExpCS__Group_1__1__Impl : ( '(' ) ;
    public final void rule__ImperativeIterateExpCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7248:1: ( ( '(' ) )
            // InternalImperativeOCL.g:7249:1: ( '(' )
            {
            // InternalImperativeOCL.g:7249:1: ( '(' )
            // InternalImperativeOCL.g:7250:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_1_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__2"
    // InternalImperativeOCL.g:7263:1: rule__ImperativeIterateExpCS__Group_1__2 : rule__ImperativeIterateExpCS__Group_1__2__Impl rule__ImperativeIterateExpCS__Group_1__3 ;
    public final void rule__ImperativeIterateExpCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7267:1: ( rule__ImperativeIterateExpCS__Group_1__2__Impl rule__ImperativeIterateExpCS__Group_1__3 )
            // InternalImperativeOCL.g:7268:2: rule__ImperativeIterateExpCS__Group_1__2__Impl rule__ImperativeIterateExpCS__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__2"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:7275:1: rule__ImperativeIterateExpCS__Group_1__2__Impl : ( ( rule__ImperativeIterateExpCS__Group_1_2__0 )? ) ;
    public final void rule__ImperativeIterateExpCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7279:1: ( ( ( rule__ImperativeIterateExpCS__Group_1_2__0 )? ) )
            // InternalImperativeOCL.g:7280:1: ( ( rule__ImperativeIterateExpCS__Group_1_2__0 )? )
            {
            // InternalImperativeOCL.g:7280:1: ( ( rule__ImperativeIterateExpCS__Group_1_2__0 )? )
            // InternalImperativeOCL.g:7281:1: ( rule__ImperativeIterateExpCS__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_1_2());
            }
            // InternalImperativeOCL.g:7282:1: ( rule__ImperativeIterateExpCS__Group_1_2__0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_SIMPLE_ID) ) {
                int LA55_1 = input.LA(2);

                if ( (LA55_1==75||LA55_1==80) ) {
                    alt55=1;
                }
            }
            else if ( (LA55_0==RULE_ESCAPED_ID) ) {
                int LA55_2 = input.LA(2);

                if ( (LA55_2==75||LA55_2==80) ) {
                    alt55=1;
                }
            }
            switch (alt55) {
                case 1 :
                    // InternalImperativeOCL.g:7282:2: rule__ImperativeIterateExpCS__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__2__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__3"
    // InternalImperativeOCL.g:7292:1: rule__ImperativeIterateExpCS__Group_1__3 : rule__ImperativeIterateExpCS__Group_1__3__Impl rule__ImperativeIterateExpCS__Group_1__4 ;
    public final void rule__ImperativeIterateExpCS__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7296:1: ( rule__ImperativeIterateExpCS__Group_1__3__Impl rule__ImperativeIterateExpCS__Group_1__4 )
            // InternalImperativeOCL.g:7297:2: rule__ImperativeIterateExpCS__Group_1__3__Impl rule__ImperativeIterateExpCS__Group_1__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__ImperativeIterateExpCS__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__3"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__3__Impl"
    // InternalImperativeOCL.g:7304:1: rule__ImperativeIterateExpCS__Group_1__3__Impl : ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7308:1: ( ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 ) ) )
            // InternalImperativeOCL.g:7309:1: ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 ) )
            {
            // InternalImperativeOCL.g:7309:1: ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 ) )
            // InternalImperativeOCL.g:7310:1: ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionAssignment_1_3());
            }
            // InternalImperativeOCL.g:7311:1: ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 )
            // InternalImperativeOCL.g:7311:2: rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionAssignment_1_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__3__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__4"
    // InternalImperativeOCL.g:7321:1: rule__ImperativeIterateExpCS__Group_1__4 : rule__ImperativeIterateExpCS__Group_1__4__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7325:1: ( rule__ImperativeIterateExpCS__Group_1__4__Impl )
            // InternalImperativeOCL.g:7326:2: rule__ImperativeIterateExpCS__Group_1__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__4"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1__4__Impl"
    // InternalImperativeOCL.g:7332:1: rule__ImperativeIterateExpCS__Group_1__4__Impl : ( ')' ) ;
    public final void rule__ImperativeIterateExpCS__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7336:1: ( ( ')' ) )
            // InternalImperativeOCL.g:7337:1: ( ')' )
            {
            // InternalImperativeOCL.g:7337:1: ( ')' )
            // InternalImperativeOCL.g:7338:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_1_4());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_1_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1__4__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1_2__0"
    // InternalImperativeOCL.g:7361:1: rule__ImperativeIterateExpCS__Group_1_2__0 : rule__ImperativeIterateExpCS__Group_1_2__0__Impl rule__ImperativeIterateExpCS__Group_1_2__1 ;
    public final void rule__ImperativeIterateExpCS__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7365:1: ( rule__ImperativeIterateExpCS__Group_1_2__0__Impl rule__ImperativeIterateExpCS__Group_1_2__1 )
            // InternalImperativeOCL.g:7366:2: rule__ImperativeIterateExpCS__Group_1_2__0__Impl rule__ImperativeIterateExpCS__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ImperativeIterateExpCS__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1_2__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1_2__0__Impl"
    // InternalImperativeOCL.g:7373:1: rule__ImperativeIterateExpCS__Group_1_2__0__Impl : ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7377:1: ( ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 ) ) )
            // InternalImperativeOCL.g:7378:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 ) )
            {
            // InternalImperativeOCL.g:7378:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 ) )
            // InternalImperativeOCL.g:7379:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_1_2_0());
            }
            // InternalImperativeOCL.g:7380:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 )
            // InternalImperativeOCL.g:7380:2: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_1_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1_2__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1_2__1"
    // InternalImperativeOCL.g:7390:1: rule__ImperativeIterateExpCS__Group_1_2__1 : rule__ImperativeIterateExpCS__Group_1_2__1__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7394:1: ( rule__ImperativeIterateExpCS__Group_1_2__1__Impl )
            // InternalImperativeOCL.g:7395:2: rule__ImperativeIterateExpCS__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1_2__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_1_2__1__Impl"
    // InternalImperativeOCL.g:7401:1: rule__ImperativeIterateExpCS__Group_1_2__1__Impl : ( '|' ) ;
    public final void rule__ImperativeIterateExpCS__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7405:1: ( ( '|' ) )
            // InternalImperativeOCL.g:7406:1: ( '|' )
            {
            // InternalImperativeOCL.g:7406:1: ( '|' )
            // InternalImperativeOCL.g:7407:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_1_2_1());
            }
            match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_1_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_1_2__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__0"
    // InternalImperativeOCL.g:7424:1: rule__ImperativeIterateExpCS__Group_2__0 : rule__ImperativeIterateExpCS__Group_2__0__Impl rule__ImperativeIterateExpCS__Group_2__1 ;
    public final void rule__ImperativeIterateExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7428:1: ( rule__ImperativeIterateExpCS__Group_2__0__Impl rule__ImperativeIterateExpCS__Group_2__1 )
            // InternalImperativeOCL.g:7429:2: rule__ImperativeIterateExpCS__Group_2__0__Impl rule__ImperativeIterateExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ImperativeIterateExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:7436:1: rule__ImperativeIterateExpCS__Group_2__0__Impl : ( ( rule__ImperativeIterateExpCS__NameAssignment_2_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7440:1: ( ( ( rule__ImperativeIterateExpCS__NameAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:7441:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:7441:1: ( ( rule__ImperativeIterateExpCS__NameAssignment_2_0 ) )
            // InternalImperativeOCL.g:7442:1: ( rule__ImperativeIterateExpCS__NameAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_2_0());
            }
            // InternalImperativeOCL.g:7443:1: ( rule__ImperativeIterateExpCS__NameAssignment_2_0 )
            // InternalImperativeOCL.g:7443:2: rule__ImperativeIterateExpCS__NameAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__NameAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__1"
    // InternalImperativeOCL.g:7453:1: rule__ImperativeIterateExpCS__Group_2__1 : rule__ImperativeIterateExpCS__Group_2__1__Impl rule__ImperativeIterateExpCS__Group_2__2 ;
    public final void rule__ImperativeIterateExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7457:1: ( rule__ImperativeIterateExpCS__Group_2__1__Impl rule__ImperativeIterateExpCS__Group_2__2 )
            // InternalImperativeOCL.g:7458:2: rule__ImperativeIterateExpCS__Group_2__1__Impl rule__ImperativeIterateExpCS__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ImperativeIterateExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:7465:1: rule__ImperativeIterateExpCS__Group_2__1__Impl : ( '(' ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7469:1: ( ( '(' ) )
            // InternalImperativeOCL.g:7470:1: ( '(' )
            {
            // InternalImperativeOCL.g:7470:1: ( '(' )
            // InternalImperativeOCL.g:7471:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_2_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getLeftParenthesisKeyword_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__2"
    // InternalImperativeOCL.g:7484:1: rule__ImperativeIterateExpCS__Group_2__2 : rule__ImperativeIterateExpCS__Group_2__2__Impl rule__ImperativeIterateExpCS__Group_2__3 ;
    public final void rule__ImperativeIterateExpCS__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7488:1: ( rule__ImperativeIterateExpCS__Group_2__2__Impl rule__ImperativeIterateExpCS__Group_2__3 )
            // InternalImperativeOCL.g:7489:2: rule__ImperativeIterateExpCS__Group_2__2__Impl rule__ImperativeIterateExpCS__Group_2__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ImperativeIterateExpCS__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__2"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__2__Impl"
    // InternalImperativeOCL.g:7496:1: rule__ImperativeIterateExpCS__Group_2__2__Impl : ( ( rule__ImperativeIterateExpCS__Group_2_2__0 )? ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7500:1: ( ( ( rule__ImperativeIterateExpCS__Group_2_2__0 )? ) )
            // InternalImperativeOCL.g:7501:1: ( ( rule__ImperativeIterateExpCS__Group_2_2__0 )? )
            {
            // InternalImperativeOCL.g:7501:1: ( ( rule__ImperativeIterateExpCS__Group_2_2__0 )? )
            // InternalImperativeOCL.g:7502:1: ( rule__ImperativeIterateExpCS__Group_2_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getGroup_2_2());
            }
            // InternalImperativeOCL.g:7503:1: ( rule__ImperativeIterateExpCS__Group_2_2__0 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_SIMPLE_ID) ) {
                int LA56_1 = input.LA(2);

                if ( (synpred121_InternalImperativeOCL()) ) {
                    alt56=1;
                }
            }
            else if ( (LA56_0==RULE_ESCAPED_ID) ) {
                int LA56_2 = input.LA(2);

                if ( (synpred121_InternalImperativeOCL()) ) {
                    alt56=1;
                }
            }
            switch (alt56) {
                case 1 :
                    // InternalImperativeOCL.g:7503:2: rule__ImperativeIterateExpCS__Group_2_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ImperativeIterateExpCS__Group_2_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getGroup_2_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__2__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__3"
    // InternalImperativeOCL.g:7513:1: rule__ImperativeIterateExpCS__Group_2__3 : rule__ImperativeIterateExpCS__Group_2__3__Impl rule__ImperativeIterateExpCS__Group_2__4 ;
    public final void rule__ImperativeIterateExpCS__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7517:1: ( rule__ImperativeIterateExpCS__Group_2__3__Impl rule__ImperativeIterateExpCS__Group_2__4 )
            // InternalImperativeOCL.g:7518:2: rule__ImperativeIterateExpCS__Group_2__3__Impl rule__ImperativeIterateExpCS__Group_2__4
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__ImperativeIterateExpCS__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__3"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__3__Impl"
    // InternalImperativeOCL.g:7525:1: rule__ImperativeIterateExpCS__Group_2__3__Impl : ( ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7529:1: ( ( ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 ) ) )
            // InternalImperativeOCL.g:7530:1: ( ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 ) )
            {
            // InternalImperativeOCL.g:7530:1: ( ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 ) )
            // InternalImperativeOCL.g:7531:1: ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedTargetAssignment_2_3());
            }
            // InternalImperativeOCL.g:7532:1: ( rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 )
            // InternalImperativeOCL.g:7532:2: rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedTargetAssignment_2_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__3__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__4"
    // InternalImperativeOCL.g:7542:1: rule__ImperativeIterateExpCS__Group_2__4 : rule__ImperativeIterateExpCS__Group_2__4__Impl rule__ImperativeIterateExpCS__Group_2__5 ;
    public final void rule__ImperativeIterateExpCS__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7546:1: ( rule__ImperativeIterateExpCS__Group_2__4__Impl rule__ImperativeIterateExpCS__Group_2__5 )
            // InternalImperativeOCL.g:7547:2: rule__ImperativeIterateExpCS__Group_2__4__Impl rule__ImperativeIterateExpCS__Group_2__5
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_2__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__4"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__4__Impl"
    // InternalImperativeOCL.g:7554:1: rule__ImperativeIterateExpCS__Group_2__4__Impl : ( ':=' ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7558:1: ( ( ':=' ) )
            // InternalImperativeOCL.g:7559:1: ( ':=' )
            {
            // InternalImperativeOCL.g:7559:1: ( ':=' )
            // InternalImperativeOCL.g:7560:1: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getColonEqualsSignKeyword_2_4());
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getColonEqualsSignKeyword_2_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__4__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__5"
    // InternalImperativeOCL.g:7573:1: rule__ImperativeIterateExpCS__Group_2__5 : rule__ImperativeIterateExpCS__Group_2__5__Impl rule__ImperativeIterateExpCS__Group_2__6 ;
    public final void rule__ImperativeIterateExpCS__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7577:1: ( rule__ImperativeIterateExpCS__Group_2__5__Impl rule__ImperativeIterateExpCS__Group_2__6 )
            // InternalImperativeOCL.g:7578:2: rule__ImperativeIterateExpCS__Group_2__5__Impl rule__ImperativeIterateExpCS__Group_2__6
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ImperativeIterateExpCS__Group_2__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__5"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__5__Impl"
    // InternalImperativeOCL.g:7585:1: rule__ImperativeIterateExpCS__Group_2__5__Impl : ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7589:1: ( ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 ) ) )
            // InternalImperativeOCL.g:7590:1: ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 ) )
            {
            // InternalImperativeOCL.g:7590:1: ( ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 ) )
            // InternalImperativeOCL.g:7591:1: ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyAssignment_2_5());
            }
            // InternalImperativeOCL.g:7592:1: ( rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 )
            // InternalImperativeOCL.g:7592:2: rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyAssignment_2_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__5__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__6"
    // InternalImperativeOCL.g:7602:1: rule__ImperativeIterateExpCS__Group_2__6 : rule__ImperativeIterateExpCS__Group_2__6__Impl rule__ImperativeIterateExpCS__Group_2__7 ;
    public final void rule__ImperativeIterateExpCS__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7606:1: ( rule__ImperativeIterateExpCS__Group_2__6__Impl rule__ImperativeIterateExpCS__Group_2__7 )
            // InternalImperativeOCL.g:7607:2: rule__ImperativeIterateExpCS__Group_2__6__Impl rule__ImperativeIterateExpCS__Group_2__7
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ImperativeIterateExpCS__Group_2__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__6"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__6__Impl"
    // InternalImperativeOCL.g:7614:1: rule__ImperativeIterateExpCS__Group_2__6__Impl : ( '|' ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7618:1: ( ( '|' ) )
            // InternalImperativeOCL.g:7619:1: ( '|' )
            {
            // InternalImperativeOCL.g:7619:1: ( '|' )
            // InternalImperativeOCL.g:7620:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_2_6());
            }
            match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getVerticalLineKeyword_2_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__6__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__7"
    // InternalImperativeOCL.g:7633:1: rule__ImperativeIterateExpCS__Group_2__7 : rule__ImperativeIterateExpCS__Group_2__7__Impl rule__ImperativeIterateExpCS__Group_2__8 ;
    public final void rule__ImperativeIterateExpCS__Group_2__7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7637:1: ( rule__ImperativeIterateExpCS__Group_2__7__Impl rule__ImperativeIterateExpCS__Group_2__8 )
            // InternalImperativeOCL.g:7638:2: rule__ImperativeIterateExpCS__Group_2__7__Impl rule__ImperativeIterateExpCS__Group_2__8
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__ImperativeIterateExpCS__Group_2__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__7"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__7__Impl"
    // InternalImperativeOCL.g:7645:1: rule__ImperativeIterateExpCS__Group_2__7__Impl : ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7649:1: ( ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 ) ) )
            // InternalImperativeOCL.g:7650:1: ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 ) )
            {
            // InternalImperativeOCL.g:7650:1: ( ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 ) )
            // InternalImperativeOCL.g:7651:1: ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionAssignment_2_7());
            }
            // InternalImperativeOCL.g:7652:1: ( rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 )
            // InternalImperativeOCL.g:7652:2: rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionAssignment_2_7());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__7__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__8"
    // InternalImperativeOCL.g:7662:1: rule__ImperativeIterateExpCS__Group_2__8 : rule__ImperativeIterateExpCS__Group_2__8__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_2__8() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7666:1: ( rule__ImperativeIterateExpCS__Group_2__8__Impl )
            // InternalImperativeOCL.g:7667:2: rule__ImperativeIterateExpCS__Group_2__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__8"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2__8__Impl"
    // InternalImperativeOCL.g:7673:1: rule__ImperativeIterateExpCS__Group_2__8__Impl : ( ')' ) ;
    public final void rule__ImperativeIterateExpCS__Group_2__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7677:1: ( ( ')' ) )
            // InternalImperativeOCL.g:7678:1: ( ')' )
            {
            // InternalImperativeOCL.g:7678:1: ( ')' )
            // InternalImperativeOCL.g:7679:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_2_8());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getRightParenthesisKeyword_2_8());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2__8__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2_2__0"
    // InternalImperativeOCL.g:7710:1: rule__ImperativeIterateExpCS__Group_2_2__0 : rule__ImperativeIterateExpCS__Group_2_2__0__Impl rule__ImperativeIterateExpCS__Group_2_2__1 ;
    public final void rule__ImperativeIterateExpCS__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7714:1: ( rule__ImperativeIterateExpCS__Group_2_2__0__Impl rule__ImperativeIterateExpCS__Group_2_2__1 )
            // InternalImperativeOCL.g:7715:2: rule__ImperativeIterateExpCS__Group_2_2__0__Impl rule__ImperativeIterateExpCS__Group_2_2__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ImperativeIterateExpCS__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2_2__0"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2_2__0__Impl"
    // InternalImperativeOCL.g:7722:1: rule__ImperativeIterateExpCS__Group_2_2__0__Impl : ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7726:1: ( ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 ) ) )
            // InternalImperativeOCL.g:7727:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 ) )
            {
            // InternalImperativeOCL.g:7727:1: ( ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 ) )
            // InternalImperativeOCL.g:7728:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_2_2_0());
            }
            // InternalImperativeOCL.g:7729:1: ( rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 )
            // InternalImperativeOCL.g:7729:2: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorAssignment_2_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2_2__0__Impl"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2_2__1"
    // InternalImperativeOCL.g:7739:1: rule__ImperativeIterateExpCS__Group_2_2__1 : rule__ImperativeIterateExpCS__Group_2_2__1__Impl ;
    public final void rule__ImperativeIterateExpCS__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7743:1: ( rule__ImperativeIterateExpCS__Group_2_2__1__Impl )
            // InternalImperativeOCL.g:7744:2: rule__ImperativeIterateExpCS__Group_2_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2_2__1"


    // $ANTLR start "rule__ImperativeIterateExpCS__Group_2_2__1__Impl"
    // InternalImperativeOCL.g:7750:1: rule__ImperativeIterateExpCS__Group_2_2__1__Impl : ( ';' ) ;
    public final void rule__ImperativeIterateExpCS__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7754:1: ( ( ';' ) )
            // InternalImperativeOCL.g:7755:1: ( ';' )
            {
            // InternalImperativeOCL.g:7755:1: ( ';' )
            // InternalImperativeOCL.g:7756:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getSemicolonKeyword_2_2_1());
            }
            match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getSemicolonKeyword_2_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__Group_2_2__1__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__0"
    // InternalImperativeOCL.g:7773:1: rule__InstantiationExpCS__Group__0 : rule__InstantiationExpCS__Group__0__Impl rule__InstantiationExpCS__Group__1 ;
    public final void rule__InstantiationExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7777:1: ( rule__InstantiationExpCS__Group__0__Impl rule__InstantiationExpCS__Group__1 )
            // InternalImperativeOCL.g:7778:2: rule__InstantiationExpCS__Group__0__Impl rule__InstantiationExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__InstantiationExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__0"


    // $ANTLR start "rule__InstantiationExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:7785:1: rule__InstantiationExpCS__Group__0__Impl : ( 'new' ) ;
    public final void rule__InstantiationExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7789:1: ( ( 'new' ) )
            // InternalImperativeOCL.g:7790:1: ( 'new' )
            {
            // InternalImperativeOCL.g:7790:1: ( 'new' )
            // InternalImperativeOCL.g:7791:1: 'new'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getNewKeyword_0());
            }
            match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getNewKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__0__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__1"
    // InternalImperativeOCL.g:7804:1: rule__InstantiationExpCS__Group__1 : rule__InstantiationExpCS__Group__1__Impl rule__InstantiationExpCS__Group__2 ;
    public final void rule__InstantiationExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7808:1: ( rule__InstantiationExpCS__Group__1__Impl rule__InstantiationExpCS__Group__2 )
            // InternalImperativeOCL.g:7809:2: rule__InstantiationExpCS__Group__1__Impl rule__InstantiationExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__InstantiationExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__1"


    // $ANTLR start "rule__InstantiationExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:7816:1: rule__InstantiationExpCS__Group__1__Impl : ( ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 ) ) ;
    public final void rule__InstantiationExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7820:1: ( ( ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 ) ) )
            // InternalImperativeOCL.g:7821:1: ( ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 ) )
            {
            // InternalImperativeOCL.g:7821:1: ( ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 ) )
            // InternalImperativeOCL.g:7822:1: ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedClassRefAssignment_1());
            }
            // InternalImperativeOCL.g:7823:1: ( rule__InstantiationExpCS__OwnedClassRefAssignment_1 )
            // InternalImperativeOCL.g:7823:2: rule__InstantiationExpCS__OwnedClassRefAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__OwnedClassRefAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedClassRefAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__1__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__2"
    // InternalImperativeOCL.g:7833:1: rule__InstantiationExpCS__Group__2 : rule__InstantiationExpCS__Group__2__Impl rule__InstantiationExpCS__Group__3 ;
    public final void rule__InstantiationExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7837:1: ( rule__InstantiationExpCS__Group__2__Impl rule__InstantiationExpCS__Group__3 )
            // InternalImperativeOCL.g:7838:2: rule__InstantiationExpCS__Group__2__Impl rule__InstantiationExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__InstantiationExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__2"


    // $ANTLR start "rule__InstantiationExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:7845:1: rule__InstantiationExpCS__Group__2__Impl : ( ( rule__InstantiationExpCS__Group_2__0 )? ) ;
    public final void rule__InstantiationExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7849:1: ( ( ( rule__InstantiationExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:7850:1: ( ( rule__InstantiationExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:7850:1: ( ( rule__InstantiationExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:7851:1: ( rule__InstantiationExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:7852:1: ( rule__InstantiationExpCS__Group_2__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==82) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalImperativeOCL.g:7852:2: rule__InstantiationExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InstantiationExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__2__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__3"
    // InternalImperativeOCL.g:7862:1: rule__InstantiationExpCS__Group__3 : rule__InstantiationExpCS__Group__3__Impl rule__InstantiationExpCS__Group__4 ;
    public final void rule__InstantiationExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7866:1: ( rule__InstantiationExpCS__Group__3__Impl rule__InstantiationExpCS__Group__4 )
            // InternalImperativeOCL.g:7867:2: rule__InstantiationExpCS__Group__3__Impl rule__InstantiationExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__InstantiationExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__3"


    // $ANTLR start "rule__InstantiationExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:7874:1: rule__InstantiationExpCS__Group__3__Impl : ( '(' ) ;
    public final void rule__InstantiationExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7878:1: ( ( '(' ) )
            // InternalImperativeOCL.g:7879:1: ( '(' )
            {
            // InternalImperativeOCL.g:7879:1: ( '(' )
            // InternalImperativeOCL.g:7880:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getLeftParenthesisKeyword_3());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getLeftParenthesisKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__3__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__4"
    // InternalImperativeOCL.g:7893:1: rule__InstantiationExpCS__Group__4 : rule__InstantiationExpCS__Group__4__Impl rule__InstantiationExpCS__Group__5 ;
    public final void rule__InstantiationExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7897:1: ( rule__InstantiationExpCS__Group__4__Impl rule__InstantiationExpCS__Group__5 )
            // InternalImperativeOCL.g:7898:2: rule__InstantiationExpCS__Group__4__Impl rule__InstantiationExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__InstantiationExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__4"


    // $ANTLR start "rule__InstantiationExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:7905:1: rule__InstantiationExpCS__Group__4__Impl : ( ( rule__InstantiationExpCS__Group_4__0 )? ) ;
    public final void rule__InstantiationExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7909:1: ( ( ( rule__InstantiationExpCS__Group_4__0 )? ) )
            // InternalImperativeOCL.g:7910:1: ( ( rule__InstantiationExpCS__Group_4__0 )? )
            {
            // InternalImperativeOCL.g:7910:1: ( ( rule__InstantiationExpCS__Group_4__0 )? )
            // InternalImperativeOCL.g:7911:1: ( rule__InstantiationExpCS__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:7912:1: ( rule__InstantiationExpCS__Group_4__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=RULE_INT && LA58_0<=RULE_ESCAPED_ID)||(LA58_0>=16 && LA58_0<=23)||(LA58_0>=40 && LA58_0<=54)||(LA58_0>=63 && LA58_0<=64)||LA58_0==66||LA58_0==68||LA58_0==71||LA58_0==73||(LA58_0>=76 && LA58_0<=78)||LA58_0==81||LA58_0==83||(LA58_0>=85 && LA58_0<=86)||LA58_0==90||(LA58_0>=92 && LA58_0<=94)||LA58_0==97||(LA58_0>=99 && LA58_0<=100)||LA58_0==105||(LA58_0>=108 && LA58_0<=109)||(LA58_0>=113 && LA58_0<=116)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalImperativeOCL.g:7912:2: rule__InstantiationExpCS__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InstantiationExpCS__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__4__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group__5"
    // InternalImperativeOCL.g:7922:1: rule__InstantiationExpCS__Group__5 : rule__InstantiationExpCS__Group__5__Impl ;
    public final void rule__InstantiationExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7926:1: ( rule__InstantiationExpCS__Group__5__Impl )
            // InternalImperativeOCL.g:7927:2: rule__InstantiationExpCS__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__5"


    // $ANTLR start "rule__InstantiationExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:7933:1: rule__InstantiationExpCS__Group__5__Impl : ( ')' ) ;
    public final void rule__InstantiationExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7937:1: ( ( ')' ) )
            // InternalImperativeOCL.g:7938:1: ( ')' )
            {
            // InternalImperativeOCL.g:7938:1: ( ')' )
            // InternalImperativeOCL.g:7939:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group__5__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_2__0"
    // InternalImperativeOCL.g:7964:1: rule__InstantiationExpCS__Group_2__0 : rule__InstantiationExpCS__Group_2__0__Impl rule__InstantiationExpCS__Group_2__1 ;
    public final void rule__InstantiationExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7968:1: ( rule__InstantiationExpCS__Group_2__0__Impl rule__InstantiationExpCS__Group_2__1 )
            // InternalImperativeOCL.g:7969:2: rule__InstantiationExpCS__Group_2__0__Impl rule__InstantiationExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__InstantiationExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_2__0"


    // $ANTLR start "rule__InstantiationExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:7976:1: rule__InstantiationExpCS__Group_2__0__Impl : ( '@' ) ;
    public final void rule__InstantiationExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7980:1: ( ( '@' ) )
            // InternalImperativeOCL.g:7981:1: ( '@' )
            {
            // InternalImperativeOCL.g:7981:1: ( '@' )
            // InternalImperativeOCL.g:7982:1: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getCommercialAtKeyword_2_0());
            }
            match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getCommercialAtKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_2__1"
    // InternalImperativeOCL.g:7995:1: rule__InstantiationExpCS__Group_2__1 : rule__InstantiationExpCS__Group_2__1__Impl ;
    public final void rule__InstantiationExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:7999:1: ( rule__InstantiationExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:8000:2: rule__InstantiationExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_2__1"


    // $ANTLR start "rule__InstantiationExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:8006:1: rule__InstantiationExpCS__Group_2__1__Impl : ( ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 ) ) ;
    public final void rule__InstantiationExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8010:1: ( ( ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:8011:1: ( ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:8011:1: ( ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 ) )
            // InternalImperativeOCL.g:8012:1: ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedExtentRefAssignment_2_1());
            }
            // InternalImperativeOCL.g:8013:1: ( rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 )
            // InternalImperativeOCL.g:8013:2: rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedExtentRefAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_4__0"
    // InternalImperativeOCL.g:8027:1: rule__InstantiationExpCS__Group_4__0 : rule__InstantiationExpCS__Group_4__0__Impl rule__InstantiationExpCS__Group_4__1 ;
    public final void rule__InstantiationExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8031:1: ( rule__InstantiationExpCS__Group_4__0__Impl rule__InstantiationExpCS__Group_4__1 )
            // InternalImperativeOCL.g:8032:2: rule__InstantiationExpCS__Group_4__0__Impl rule__InstantiationExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__InstantiationExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4__0"


    // $ANTLR start "rule__InstantiationExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:8039:1: rule__InstantiationExpCS__Group_4__0__Impl : ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 ) ) ;
    public final void rule__InstantiationExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8043:1: ( ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 ) ) )
            // InternalImperativeOCL.g:8044:1: ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 ) )
            {
            // InternalImperativeOCL.g:8044:1: ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 ) )
            // InternalImperativeOCL.g:8045:1: ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsAssignment_4_0());
            }
            // InternalImperativeOCL.g:8046:1: ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 )
            // InternalImperativeOCL.g:8046:2: rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsAssignment_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_4__1"
    // InternalImperativeOCL.g:8056:1: rule__InstantiationExpCS__Group_4__1 : rule__InstantiationExpCS__Group_4__1__Impl ;
    public final void rule__InstantiationExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8060:1: ( rule__InstantiationExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:8061:2: rule__InstantiationExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4__1"


    // $ANTLR start "rule__InstantiationExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:8067:1: rule__InstantiationExpCS__Group_4__1__Impl : ( ( rule__InstantiationExpCS__Group_4_1__0 )* ) ;
    public final void rule__InstantiationExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8071:1: ( ( ( rule__InstantiationExpCS__Group_4_1__0 )* ) )
            // InternalImperativeOCL.g:8072:1: ( ( rule__InstantiationExpCS__Group_4_1__0 )* )
            {
            // InternalImperativeOCL.g:8072:1: ( ( rule__InstantiationExpCS__Group_4_1__0 )* )
            // InternalImperativeOCL.g:8073:1: ( rule__InstantiationExpCS__Group_4_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getGroup_4_1());
            }
            // InternalImperativeOCL.g:8074:1: ( rule__InstantiationExpCS__Group_4_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==67) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalImperativeOCL.g:8074:2: rule__InstantiationExpCS__Group_4_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__InstantiationExpCS__Group_4_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getGroup_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_4_1__0"
    // InternalImperativeOCL.g:8088:1: rule__InstantiationExpCS__Group_4_1__0 : rule__InstantiationExpCS__Group_4_1__0__Impl rule__InstantiationExpCS__Group_4_1__1 ;
    public final void rule__InstantiationExpCS__Group_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8092:1: ( rule__InstantiationExpCS__Group_4_1__0__Impl rule__InstantiationExpCS__Group_4_1__1 )
            // InternalImperativeOCL.g:8093:2: rule__InstantiationExpCS__Group_4_1__0__Impl rule__InstantiationExpCS__Group_4_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__InstantiationExpCS__Group_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4_1__0"


    // $ANTLR start "rule__InstantiationExpCS__Group_4_1__0__Impl"
    // InternalImperativeOCL.g:8100:1: rule__InstantiationExpCS__Group_4_1__0__Impl : ( ',' ) ;
    public final void rule__InstantiationExpCS__Group_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8104:1: ( ( ',' ) )
            // InternalImperativeOCL.g:8105:1: ( ',' )
            {
            // InternalImperativeOCL.g:8105:1: ( ',' )
            // InternalImperativeOCL.g:8106:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getCommaKeyword_4_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getCommaKeyword_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4_1__0__Impl"


    // $ANTLR start "rule__InstantiationExpCS__Group_4_1__1"
    // InternalImperativeOCL.g:8119:1: rule__InstantiationExpCS__Group_4_1__1 : rule__InstantiationExpCS__Group_4_1__1__Impl ;
    public final void rule__InstantiationExpCS__Group_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8123:1: ( rule__InstantiationExpCS__Group_4_1__1__Impl )
            // InternalImperativeOCL.g:8124:2: rule__InstantiationExpCS__Group_4_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__Group_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4_1__1"


    // $ANTLR start "rule__InstantiationExpCS__Group_4_1__1__Impl"
    // InternalImperativeOCL.g:8130:1: rule__InstantiationExpCS__Group_4_1__1__Impl : ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 ) ) ;
    public final void rule__InstantiationExpCS__Group_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8134:1: ( ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 ) ) )
            // InternalImperativeOCL.g:8135:1: ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 ) )
            {
            // InternalImperativeOCL.g:8135:1: ( ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 ) )
            // InternalImperativeOCL.g:8136:1: ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsAssignment_4_1_1());
            }
            // InternalImperativeOCL.g:8137:1: ( rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 )
            // InternalImperativeOCL.g:8137:2: rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsAssignment_4_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__Group_4_1__1__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:8151:1: rule__ListLiteralExpCS__Group__0 : rule__ListLiteralExpCS__Group__0__Impl rule__ListLiteralExpCS__Group__1 ;
    public final void rule__ListLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8155:1: ( rule__ListLiteralExpCS__Group__0__Impl rule__ListLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:8156:2: rule__ListLiteralExpCS__Group__0__Impl rule__ListLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ListLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__0"


    // $ANTLR start "rule__ListLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:8163:1: rule__ListLiteralExpCS__Group__0__Impl : ( 'List' ) ;
    public final void rule__ListLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8167:1: ( ( 'List' ) )
            // InternalImperativeOCL.g:8168:1: ( 'List' )
            {
            // InternalImperativeOCL.g:8168:1: ( 'List' )
            // InternalImperativeOCL.g:8169:1: 'List'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getListKeyword_0());
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getListKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:8182:1: rule__ListLiteralExpCS__Group__1 : rule__ListLiteralExpCS__Group__1__Impl rule__ListLiteralExpCS__Group__2 ;
    public final void rule__ListLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8186:1: ( rule__ListLiteralExpCS__Group__1__Impl rule__ListLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:8187:2: rule__ListLiteralExpCS__Group__1__Impl rule__ListLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ListLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__1"


    // $ANTLR start "rule__ListLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:8194:1: rule__ListLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__ListLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8198:1: ( ( '{' ) )
            // InternalImperativeOCL.g:8199:1: ( '{' )
            {
            // InternalImperativeOCL.g:8199:1: ( '{' )
            // InternalImperativeOCL.g:8200:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:8213:1: rule__ListLiteralExpCS__Group__2 : rule__ListLiteralExpCS__Group__2__Impl rule__ListLiteralExpCS__Group__3 ;
    public final void rule__ListLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8217:1: ( rule__ListLiteralExpCS__Group__2__Impl rule__ListLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:8218:2: rule__ListLiteralExpCS__Group__2__Impl rule__ListLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ListLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__2"


    // $ANTLR start "rule__ListLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:8225:1: rule__ListLiteralExpCS__Group__2__Impl : ( () ) ;
    public final void rule__ListLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8229:1: ( ( () ) )
            // InternalImperativeOCL.g:8230:1: ( () )
            {
            // InternalImperativeOCL.g:8230:1: ( () )
            // InternalImperativeOCL.g:8231:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getListLiteralExpCSAction_2());
            }
            // InternalImperativeOCL.g:8232:1: ()
            // InternalImperativeOCL.g:8234:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getListLiteralExpCSAction_2());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:8244:1: rule__ListLiteralExpCS__Group__3 : rule__ListLiteralExpCS__Group__3__Impl rule__ListLiteralExpCS__Group__4 ;
    public final void rule__ListLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8248:1: ( rule__ListLiteralExpCS__Group__3__Impl rule__ListLiteralExpCS__Group__4 )
            // InternalImperativeOCL.g:8249:2: rule__ListLiteralExpCS__Group__3__Impl rule__ListLiteralExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ListLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__3"


    // $ANTLR start "rule__ListLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:8256:1: rule__ListLiteralExpCS__Group__3__Impl : ( ( rule__ListLiteralExpCS__Group_3__0 )? ) ;
    public final void rule__ListLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8260:1: ( ( ( rule__ListLiteralExpCS__Group_3__0 )? ) )
            // InternalImperativeOCL.g:8261:1: ( ( rule__ListLiteralExpCS__Group_3__0 )? )
            {
            // InternalImperativeOCL.g:8261:1: ( ( rule__ListLiteralExpCS__Group_3__0 )? )
            // InternalImperativeOCL.g:8262:1: ( rule__ListLiteralExpCS__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:8263:1: ( rule__ListLiteralExpCS__Group_3__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=RULE_INT && LA60_0<=RULE_ESCAPED_ID)||(LA60_0>=16 && LA60_0<=23)||(LA60_0>=40 && LA60_0<=54)||(LA60_0>=63 && LA60_0<=64)||LA60_0==66||LA60_0==68||LA60_0==71||LA60_0==73||(LA60_0>=75 && LA60_0<=78)||LA60_0==81||LA60_0==83||(LA60_0>=85 && LA60_0<=86)||LA60_0==90||(LA60_0>=92 && LA60_0<=94)||LA60_0==97||(LA60_0>=99 && LA60_0<=100)||LA60_0==105||(LA60_0>=108 && LA60_0<=109)||(LA60_0>=113 && LA60_0<=116)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalImperativeOCL.g:8263:2: rule__ListLiteralExpCS__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ListLiteralExpCS__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group__4"
    // InternalImperativeOCL.g:8273:1: rule__ListLiteralExpCS__Group__4 : rule__ListLiteralExpCS__Group__4__Impl ;
    public final void rule__ListLiteralExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8277:1: ( rule__ListLiteralExpCS__Group__4__Impl )
            // InternalImperativeOCL.g:8278:2: rule__ListLiteralExpCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__4"


    // $ANTLR start "rule__ListLiteralExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:8284:1: rule__ListLiteralExpCS__Group__4__Impl : ( '}' ) ;
    public final void rule__ListLiteralExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8288:1: ( ( '}' ) )
            // InternalImperativeOCL.g:8289:1: ( '}' )
            {
            // InternalImperativeOCL.g:8289:1: ( '}' )
            // InternalImperativeOCL.g:8290:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group__4__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3__0"
    // InternalImperativeOCL.g:8313:1: rule__ListLiteralExpCS__Group_3__0 : rule__ListLiteralExpCS__Group_3__0__Impl rule__ListLiteralExpCS__Group_3__1 ;
    public final void rule__ListLiteralExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8317:1: ( rule__ListLiteralExpCS__Group_3__0__Impl rule__ListLiteralExpCS__Group_3__1 )
            // InternalImperativeOCL.g:8318:2: rule__ListLiteralExpCS__Group_3__0__Impl rule__ListLiteralExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ListLiteralExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3__0"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:8325:1: rule__ListLiteralExpCS__Group_3__0__Impl : ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 ) ) ;
    public final void rule__ListLiteralExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8329:1: ( ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 ) ) )
            // InternalImperativeOCL.g:8330:1: ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 ) )
            {
            // InternalImperativeOCL.g:8330:1: ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 ) )
            // InternalImperativeOCL.g:8331:1: ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_0());
            }
            // InternalImperativeOCL.g:8332:1: ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 )
            // InternalImperativeOCL.g:8332:2: rule__ListLiteralExpCS__OwnedPartsAssignment_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__OwnedPartsAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3__1"
    // InternalImperativeOCL.g:8342:1: rule__ListLiteralExpCS__Group_3__1 : rule__ListLiteralExpCS__Group_3__1__Impl ;
    public final void rule__ListLiteralExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8346:1: ( rule__ListLiteralExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:8347:2: rule__ListLiteralExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3__1"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:8353:1: rule__ListLiteralExpCS__Group_3__1__Impl : ( ( rule__ListLiteralExpCS__Group_3_1__0 )* ) ;
    public final void rule__ListLiteralExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8357:1: ( ( ( rule__ListLiteralExpCS__Group_3_1__0 )* ) )
            // InternalImperativeOCL.g:8358:1: ( ( rule__ListLiteralExpCS__Group_3_1__0 )* )
            {
            // InternalImperativeOCL.g:8358:1: ( ( rule__ListLiteralExpCS__Group_3_1__0 )* )
            // InternalImperativeOCL.g:8359:1: ( rule__ListLiteralExpCS__Group_3_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getGroup_3_1());
            }
            // InternalImperativeOCL.g:8360:1: ( rule__ListLiteralExpCS__Group_3_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==67) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalImperativeOCL.g:8360:2: rule__ListLiteralExpCS__Group_3_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__ListLiteralExpCS__Group_3_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getGroup_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3_1__0"
    // InternalImperativeOCL.g:8374:1: rule__ListLiteralExpCS__Group_3_1__0 : rule__ListLiteralExpCS__Group_3_1__0__Impl rule__ListLiteralExpCS__Group_3_1__1 ;
    public final void rule__ListLiteralExpCS__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8378:1: ( rule__ListLiteralExpCS__Group_3_1__0__Impl rule__ListLiteralExpCS__Group_3_1__1 )
            // InternalImperativeOCL.g:8379:2: rule__ListLiteralExpCS__Group_3_1__0__Impl rule__ListLiteralExpCS__Group_3_1__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__ListLiteralExpCS__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3_1__0"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3_1__0__Impl"
    // InternalImperativeOCL.g:8386:1: rule__ListLiteralExpCS__Group_3_1__0__Impl : ( ',' ) ;
    public final void rule__ListLiteralExpCS__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8390:1: ( ( ',' ) )
            // InternalImperativeOCL.g:8391:1: ( ',' )
            {
            // InternalImperativeOCL.g:8391:1: ( ',' )
            // InternalImperativeOCL.g:8392:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getCommaKeyword_3_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getCommaKeyword_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3_1__0__Impl"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3_1__1"
    // InternalImperativeOCL.g:8405:1: rule__ListLiteralExpCS__Group_3_1__1 : rule__ListLiteralExpCS__Group_3_1__1__Impl ;
    public final void rule__ListLiteralExpCS__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8409:1: ( rule__ListLiteralExpCS__Group_3_1__1__Impl )
            // InternalImperativeOCL.g:8410:2: rule__ListLiteralExpCS__Group_3_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3_1__1"


    // $ANTLR start "rule__ListLiteralExpCS__Group_3_1__1__Impl"
    // InternalImperativeOCL.g:8416:1: rule__ListLiteralExpCS__Group_3_1__1__Impl : ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 ) ) ;
    public final void rule__ListLiteralExpCS__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8420:1: ( ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 ) ) )
            // InternalImperativeOCL.g:8421:1: ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 ) )
            {
            // InternalImperativeOCL.g:8421:1: ( ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 ) )
            // InternalImperativeOCL.g:8422:1: ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1());
            }
            // InternalImperativeOCL.g:8423:1: ( rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 )
            // InternalImperativeOCL.g:8423:2: rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__Group_3_1__1__Impl"


    // $ANTLR start "rule__LogExpCS__Group__0"
    // InternalImperativeOCL.g:8437:1: rule__LogExpCS__Group__0 : rule__LogExpCS__Group__0__Impl rule__LogExpCS__Group__1 ;
    public final void rule__LogExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8441:1: ( rule__LogExpCS__Group__0__Impl rule__LogExpCS__Group__1 )
            // InternalImperativeOCL.g:8442:2: rule__LogExpCS__Group__0__Impl rule__LogExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__LogExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__0"


    // $ANTLR start "rule__LogExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:8449:1: rule__LogExpCS__Group__0__Impl : ( 'log' ) ;
    public final void rule__LogExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8453:1: ( ( 'log' ) )
            // InternalImperativeOCL.g:8454:1: ( 'log' )
            {
            // InternalImperativeOCL.g:8454:1: ( 'log' )
            // InternalImperativeOCL.g:8455:1: 'log'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getLogKeyword_0());
            }
            match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getLogKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__0__Impl"


    // $ANTLR start "rule__LogExpCS__Group__1"
    // InternalImperativeOCL.g:8468:1: rule__LogExpCS__Group__1 : rule__LogExpCS__Group__1__Impl rule__LogExpCS__Group__2 ;
    public final void rule__LogExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8472:1: ( rule__LogExpCS__Group__1__Impl rule__LogExpCS__Group__2 )
            // InternalImperativeOCL.g:8473:2: rule__LogExpCS__Group__1__Impl rule__LogExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__LogExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__1"


    // $ANTLR start "rule__LogExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:8480:1: rule__LogExpCS__Group__1__Impl : ( '(' ) ;
    public final void rule__LogExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8484:1: ( ( '(' ) )
            // InternalImperativeOCL.g:8485:1: ( '(' )
            {
            // InternalImperativeOCL.g:8485:1: ( '(' )
            // InternalImperativeOCL.g:8486:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__1__Impl"


    // $ANTLR start "rule__LogExpCS__Group__2"
    // InternalImperativeOCL.g:8499:1: rule__LogExpCS__Group__2 : rule__LogExpCS__Group__2__Impl rule__LogExpCS__Group__3 ;
    public final void rule__LogExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8503:1: ( rule__LogExpCS__Group__2__Impl rule__LogExpCS__Group__3 )
            // InternalImperativeOCL.g:8504:2: rule__LogExpCS__Group__2__Impl rule__LogExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LogExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__2"


    // $ANTLR start "rule__LogExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:8511:1: rule__LogExpCS__Group__2__Impl : ( ( rule__LogExpCS__OwnedMessageAssignment_2 ) ) ;
    public final void rule__LogExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8515:1: ( ( ( rule__LogExpCS__OwnedMessageAssignment_2 ) ) )
            // InternalImperativeOCL.g:8516:1: ( ( rule__LogExpCS__OwnedMessageAssignment_2 ) )
            {
            // InternalImperativeOCL.g:8516:1: ( ( rule__LogExpCS__OwnedMessageAssignment_2 ) )
            // InternalImperativeOCL.g:8517:1: ( rule__LogExpCS__OwnedMessageAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedMessageAssignment_2());
            }
            // InternalImperativeOCL.g:8518:1: ( rule__LogExpCS__OwnedMessageAssignment_2 )
            // InternalImperativeOCL.g:8518:2: rule__LogExpCS__OwnedMessageAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__OwnedMessageAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedMessageAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__2__Impl"


    // $ANTLR start "rule__LogExpCS__Group__3"
    // InternalImperativeOCL.g:8528:1: rule__LogExpCS__Group__3 : rule__LogExpCS__Group__3__Impl rule__LogExpCS__Group__4 ;
    public final void rule__LogExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8532:1: ( rule__LogExpCS__Group__3__Impl rule__LogExpCS__Group__4 )
            // InternalImperativeOCL.g:8533:2: rule__LogExpCS__Group__3__Impl rule__LogExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LogExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__3"


    // $ANTLR start "rule__LogExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:8540:1: rule__LogExpCS__Group__3__Impl : ( ( rule__LogExpCS__Group_3__0 )? ) ;
    public final void rule__LogExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8544:1: ( ( ( rule__LogExpCS__Group_3__0 )? ) )
            // InternalImperativeOCL.g:8545:1: ( ( rule__LogExpCS__Group_3__0 )? )
            {
            // InternalImperativeOCL.g:8545:1: ( ( rule__LogExpCS__Group_3__0 )? )
            // InternalImperativeOCL.g:8546:1: ( rule__LogExpCS__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:8547:1: ( rule__LogExpCS__Group_3__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==67) ) {
                int LA62_1 = input.LA(2);

                if ( ((LA62_1>=RULE_INT && LA62_1<=RULE_ESCAPED_ID)||(LA62_1>=16 && LA62_1<=23)||(LA62_1>=40 && LA62_1<=54)||(LA62_1>=63 && LA62_1<=64)||LA62_1==66||LA62_1==68||LA62_1==71||LA62_1==73||(LA62_1>=76 && LA62_1<=78)||LA62_1==81||LA62_1==83||(LA62_1>=85 && LA62_1<=86)||LA62_1==90||(LA62_1>=92 && LA62_1<=94)||LA62_1==97||(LA62_1>=99 && LA62_1<=100)||LA62_1==105||(LA62_1>=108 && LA62_1<=109)||(LA62_1>=113 && LA62_1<=116)) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    // InternalImperativeOCL.g:8547:2: rule__LogExpCS__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LogExpCS__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__3__Impl"


    // $ANTLR start "rule__LogExpCS__Group__4"
    // InternalImperativeOCL.g:8557:1: rule__LogExpCS__Group__4 : rule__LogExpCS__Group__4__Impl rule__LogExpCS__Group__5 ;
    public final void rule__LogExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8561:1: ( rule__LogExpCS__Group__4__Impl rule__LogExpCS__Group__5 )
            // InternalImperativeOCL.g:8562:2: rule__LogExpCS__Group__4__Impl rule__LogExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LogExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__4"


    // $ANTLR start "rule__LogExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:8569:1: rule__LogExpCS__Group__4__Impl : ( ( rule__LogExpCS__Group_4__0 )? ) ;
    public final void rule__LogExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8573:1: ( ( ( rule__LogExpCS__Group_4__0 )? ) )
            // InternalImperativeOCL.g:8574:1: ( ( rule__LogExpCS__Group_4__0 )? )
            {
            // InternalImperativeOCL.g:8574:1: ( ( rule__LogExpCS__Group_4__0 )? )
            // InternalImperativeOCL.g:8575:1: ( rule__LogExpCS__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:8576:1: ( rule__LogExpCS__Group_4__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==67) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalImperativeOCL.g:8576:2: rule__LogExpCS__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LogExpCS__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__4__Impl"


    // $ANTLR start "rule__LogExpCS__Group__5"
    // InternalImperativeOCL.g:8586:1: rule__LogExpCS__Group__5 : rule__LogExpCS__Group__5__Impl rule__LogExpCS__Group__6 ;
    public final void rule__LogExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8590:1: ( rule__LogExpCS__Group__5__Impl rule__LogExpCS__Group__6 )
            // InternalImperativeOCL.g:8591:2: rule__LogExpCS__Group__5__Impl rule__LogExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__LogExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__5"


    // $ANTLR start "rule__LogExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:8598:1: rule__LogExpCS__Group__5__Impl : ( ')' ) ;
    public final void rule__LogExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8602:1: ( ( ')' ) )
            // InternalImperativeOCL.g:8603:1: ( ')' )
            {
            // InternalImperativeOCL.g:8603:1: ( ')' )
            // InternalImperativeOCL.g:8604:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__5__Impl"


    // $ANTLR start "rule__LogExpCS__Group__6"
    // InternalImperativeOCL.g:8617:1: rule__LogExpCS__Group__6 : rule__LogExpCS__Group__6__Impl ;
    public final void rule__LogExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8621:1: ( rule__LogExpCS__Group__6__Impl )
            // InternalImperativeOCL.g:8622:2: rule__LogExpCS__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__6"


    // $ANTLR start "rule__LogExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:8628:1: rule__LogExpCS__Group__6__Impl : ( ( rule__LogExpCS__Group_6__0 )? ) ;
    public final void rule__LogExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8632:1: ( ( ( rule__LogExpCS__Group_6__0 )? ) )
            // InternalImperativeOCL.g:8633:1: ( ( rule__LogExpCS__Group_6__0 )? )
            {
            // InternalImperativeOCL.g:8633:1: ( ( rule__LogExpCS__Group_6__0 )? )
            // InternalImperativeOCL.g:8634:1: ( rule__LogExpCS__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getGroup_6());
            }
            // InternalImperativeOCL.g:8635:1: ( rule__LogExpCS__Group_6__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==84) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalImperativeOCL.g:8635:2: rule__LogExpCS__Group_6__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LogExpCS__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getGroup_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group__6__Impl"


    // $ANTLR start "rule__LogExpCS__Group_3__0"
    // InternalImperativeOCL.g:8659:1: rule__LogExpCS__Group_3__0 : rule__LogExpCS__Group_3__0__Impl rule__LogExpCS__Group_3__1 ;
    public final void rule__LogExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8663:1: ( rule__LogExpCS__Group_3__0__Impl rule__LogExpCS__Group_3__1 )
            // InternalImperativeOCL.g:8664:2: rule__LogExpCS__Group_3__0__Impl rule__LogExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LogExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_3__0"


    // $ANTLR start "rule__LogExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:8671:1: rule__LogExpCS__Group_3__0__Impl : ( ',' ) ;
    public final void rule__LogExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8675:1: ( ( ',' ) )
            // InternalImperativeOCL.g:8676:1: ( ',' )
            {
            // InternalImperativeOCL.g:8676:1: ( ',' )
            // InternalImperativeOCL.g:8677:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getCommaKeyword_3_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getCommaKeyword_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__LogExpCS__Group_3__1"
    // InternalImperativeOCL.g:8690:1: rule__LogExpCS__Group_3__1 : rule__LogExpCS__Group_3__1__Impl ;
    public final void rule__LogExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8694:1: ( rule__LogExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:8695:2: rule__LogExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_3__1"


    // $ANTLR start "rule__LogExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:8701:1: rule__LogExpCS__Group_3__1__Impl : ( ( rule__LogExpCS__OwnedElementAssignment_3_1 ) ) ;
    public final void rule__LogExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8705:1: ( ( ( rule__LogExpCS__OwnedElementAssignment_3_1 ) ) )
            // InternalImperativeOCL.g:8706:1: ( ( rule__LogExpCS__OwnedElementAssignment_3_1 ) )
            {
            // InternalImperativeOCL.g:8706:1: ( ( rule__LogExpCS__OwnedElementAssignment_3_1 ) )
            // InternalImperativeOCL.g:8707:1: ( rule__LogExpCS__OwnedElementAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedElementAssignment_3_1());
            }
            // InternalImperativeOCL.g:8708:1: ( rule__LogExpCS__OwnedElementAssignment_3_1 )
            // InternalImperativeOCL.g:8708:2: rule__LogExpCS__OwnedElementAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__OwnedElementAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedElementAssignment_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__LogExpCS__Group_4__0"
    // InternalImperativeOCL.g:8722:1: rule__LogExpCS__Group_4__0 : rule__LogExpCS__Group_4__0__Impl rule__LogExpCS__Group_4__1 ;
    public final void rule__LogExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8726:1: ( rule__LogExpCS__Group_4__0__Impl rule__LogExpCS__Group_4__1 )
            // InternalImperativeOCL.g:8727:2: rule__LogExpCS__Group_4__0__Impl rule__LogExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__LogExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_4__0"


    // $ANTLR start "rule__LogExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:8734:1: rule__LogExpCS__Group_4__0__Impl : ( ',' ) ;
    public final void rule__LogExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8738:1: ( ( ',' ) )
            // InternalImperativeOCL.g:8739:1: ( ',' )
            {
            // InternalImperativeOCL.g:8739:1: ( ',' )
            // InternalImperativeOCL.g:8740:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getCommaKeyword_4_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getCommaKeyword_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__LogExpCS__Group_4__1"
    // InternalImperativeOCL.g:8753:1: rule__LogExpCS__Group_4__1 : rule__LogExpCS__Group_4__1__Impl ;
    public final void rule__LogExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8757:1: ( rule__LogExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:8758:2: rule__LogExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_4__1"


    // $ANTLR start "rule__LogExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:8764:1: rule__LogExpCS__Group_4__1__Impl : ( ( rule__LogExpCS__SeverityAssignment_4_1 ) ) ;
    public final void rule__LogExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8768:1: ( ( ( rule__LogExpCS__SeverityAssignment_4_1 ) ) )
            // InternalImperativeOCL.g:8769:1: ( ( rule__LogExpCS__SeverityAssignment_4_1 ) )
            {
            // InternalImperativeOCL.g:8769:1: ( ( rule__LogExpCS__SeverityAssignment_4_1 ) )
            // InternalImperativeOCL.g:8770:1: ( rule__LogExpCS__SeverityAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getSeverityAssignment_4_1());
            }
            // InternalImperativeOCL.g:8771:1: ( rule__LogExpCS__SeverityAssignment_4_1 )
            // InternalImperativeOCL.g:8771:2: rule__LogExpCS__SeverityAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__SeverityAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getSeverityAssignment_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__LogExpCS__Group_6__0"
    // InternalImperativeOCL.g:8785:1: rule__LogExpCS__Group_6__0 : rule__LogExpCS__Group_6__0__Impl rule__LogExpCS__Group_6__1 ;
    public final void rule__LogExpCS__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8789:1: ( rule__LogExpCS__Group_6__0__Impl rule__LogExpCS__Group_6__1 )
            // InternalImperativeOCL.g:8790:2: rule__LogExpCS__Group_6__0__Impl rule__LogExpCS__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LogExpCS__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_6__0"


    // $ANTLR start "rule__LogExpCS__Group_6__0__Impl"
    // InternalImperativeOCL.g:8797:1: rule__LogExpCS__Group_6__0__Impl : ( 'when' ) ;
    public final void rule__LogExpCS__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8801:1: ( ( 'when' ) )
            // InternalImperativeOCL.g:8802:1: ( 'when' )
            {
            // InternalImperativeOCL.g:8802:1: ( 'when' )
            // InternalImperativeOCL.g:8803:1: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getWhenKeyword_6_0());
            }
            match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getWhenKeyword_6_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_6__0__Impl"


    // $ANTLR start "rule__LogExpCS__Group_6__1"
    // InternalImperativeOCL.g:8816:1: rule__LogExpCS__Group_6__1 : rule__LogExpCS__Group_6__1__Impl ;
    public final void rule__LogExpCS__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8820:1: ( rule__LogExpCS__Group_6__1__Impl )
            // InternalImperativeOCL.g:8821:2: rule__LogExpCS__Group_6__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_6__1"


    // $ANTLR start "rule__LogExpCS__Group_6__1__Impl"
    // InternalImperativeOCL.g:8827:1: rule__LogExpCS__Group_6__1__Impl : ( ( rule__LogExpCS__OwnedConditionAssignment_6_1 ) ) ;
    public final void rule__LogExpCS__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8831:1: ( ( ( rule__LogExpCS__OwnedConditionAssignment_6_1 ) ) )
            // InternalImperativeOCL.g:8832:1: ( ( rule__LogExpCS__OwnedConditionAssignment_6_1 ) )
            {
            // InternalImperativeOCL.g:8832:1: ( ( rule__LogExpCS__OwnedConditionAssignment_6_1 ) )
            // InternalImperativeOCL.g:8833:1: ( rule__LogExpCS__OwnedConditionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedConditionAssignment_6_1());
            }
            // InternalImperativeOCL.g:8834:1: ( rule__LogExpCS__OwnedConditionAssignment_6_1 )
            // InternalImperativeOCL.g:8834:2: rule__LogExpCS__OwnedConditionAssignment_6_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogExpCS__OwnedConditionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedConditionAssignment_6_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__Group_6__1__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__0"
    // InternalImperativeOCL.g:8848:1: rule__RaiseExpCS__Group__0 : rule__RaiseExpCS__Group__0__Impl rule__RaiseExpCS__Group__1 ;
    public final void rule__RaiseExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8852:1: ( rule__RaiseExpCS__Group__0__Impl rule__RaiseExpCS__Group__1 )
            // InternalImperativeOCL.g:8853:2: rule__RaiseExpCS__Group__0__Impl rule__RaiseExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__RaiseExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__0"


    // $ANTLR start "rule__RaiseExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:8860:1: rule__RaiseExpCS__Group__0__Impl : ( 'raise' ) ;
    public final void rule__RaiseExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8864:1: ( ( 'raise' ) )
            // InternalImperativeOCL.g:8865:1: ( 'raise' )
            {
            // InternalImperativeOCL.g:8865:1: ( 'raise' )
            // InternalImperativeOCL.g:8866:1: 'raise'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getRaiseKeyword_0());
            }
            match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getRaiseKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__0__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__1"
    // InternalImperativeOCL.g:8879:1: rule__RaiseExpCS__Group__1 : rule__RaiseExpCS__Group__1__Impl rule__RaiseExpCS__Group__2 ;
    public final void rule__RaiseExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8883:1: ( rule__RaiseExpCS__Group__1__Impl rule__RaiseExpCS__Group__2 )
            // InternalImperativeOCL.g:8884:2: rule__RaiseExpCS__Group__1__Impl rule__RaiseExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__RaiseExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__1"


    // $ANTLR start "rule__RaiseExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:8891:1: rule__RaiseExpCS__Group__1__Impl : ( ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 ) ) ;
    public final void rule__RaiseExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8895:1: ( ( ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 ) ) )
            // InternalImperativeOCL.g:8896:1: ( ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 ) )
            {
            // InternalImperativeOCL.g:8896:1: ( ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 ) )
            // InternalImperativeOCL.g:8897:1: ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedExceptionRefAssignment_1());
            }
            // InternalImperativeOCL.g:8898:1: ( rule__RaiseExpCS__OwnedExceptionRefAssignment_1 )
            // InternalImperativeOCL.g:8898:2: rule__RaiseExpCS__OwnedExceptionRefAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__OwnedExceptionRefAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedExceptionRefAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__1__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__2"
    // InternalImperativeOCL.g:8908:1: rule__RaiseExpCS__Group__2 : rule__RaiseExpCS__Group__2__Impl rule__RaiseExpCS__Group__3 ;
    public final void rule__RaiseExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8912:1: ( rule__RaiseExpCS__Group__2__Impl rule__RaiseExpCS__Group__3 )
            // InternalImperativeOCL.g:8913:2: rule__RaiseExpCS__Group__2__Impl rule__RaiseExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__RaiseExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__2"


    // $ANTLR start "rule__RaiseExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:8920:1: rule__RaiseExpCS__Group__2__Impl : ( '(' ) ;
    public final void rule__RaiseExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8924:1: ( ( '(' ) )
            // InternalImperativeOCL.g:8925:1: ( '(' )
            {
            // InternalImperativeOCL.g:8925:1: ( '(' )
            // InternalImperativeOCL.g:8926:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getLeftParenthesisKeyword_2());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getLeftParenthesisKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__2__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__3"
    // InternalImperativeOCL.g:8939:1: rule__RaiseExpCS__Group__3 : rule__RaiseExpCS__Group__3__Impl rule__RaiseExpCS__Group__4 ;
    public final void rule__RaiseExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8943:1: ( rule__RaiseExpCS__Group__3__Impl rule__RaiseExpCS__Group__4 )
            // InternalImperativeOCL.g:8944:2: rule__RaiseExpCS__Group__3__Impl rule__RaiseExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RaiseExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__3"


    // $ANTLR start "rule__RaiseExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:8951:1: rule__RaiseExpCS__Group__3__Impl : ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 ) ) ;
    public final void rule__RaiseExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8955:1: ( ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 ) ) )
            // InternalImperativeOCL.g:8956:1: ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 ) )
            {
            // InternalImperativeOCL.g:8956:1: ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 ) )
            // InternalImperativeOCL.g:8957:1: ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsAssignment_3());
            }
            // InternalImperativeOCL.g:8958:1: ( rule__RaiseExpCS__OwnedArgumentsAssignment_3 )
            // InternalImperativeOCL.g:8958:2: rule__RaiseExpCS__OwnedArgumentsAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__OwnedArgumentsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__3__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__4"
    // InternalImperativeOCL.g:8968:1: rule__RaiseExpCS__Group__4 : rule__RaiseExpCS__Group__4__Impl rule__RaiseExpCS__Group__5 ;
    public final void rule__RaiseExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8972:1: ( rule__RaiseExpCS__Group__4__Impl rule__RaiseExpCS__Group__5 )
            // InternalImperativeOCL.g:8973:2: rule__RaiseExpCS__Group__4__Impl rule__RaiseExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RaiseExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__4"


    // $ANTLR start "rule__RaiseExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:8980:1: rule__RaiseExpCS__Group__4__Impl : ( ( rule__RaiseExpCS__Group_4__0 )* ) ;
    public final void rule__RaiseExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:8984:1: ( ( ( rule__RaiseExpCS__Group_4__0 )* ) )
            // InternalImperativeOCL.g:8985:1: ( ( rule__RaiseExpCS__Group_4__0 )* )
            {
            // InternalImperativeOCL.g:8985:1: ( ( rule__RaiseExpCS__Group_4__0 )* )
            // InternalImperativeOCL.g:8986:1: ( rule__RaiseExpCS__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:8987:1: ( rule__RaiseExpCS__Group_4__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==67) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalImperativeOCL.g:8987:2: rule__RaiseExpCS__Group_4__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__RaiseExpCS__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__4__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group__5"
    // InternalImperativeOCL.g:8997:1: rule__RaiseExpCS__Group__5 : rule__RaiseExpCS__Group__5__Impl ;
    public final void rule__RaiseExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9001:1: ( rule__RaiseExpCS__Group__5__Impl )
            // InternalImperativeOCL.g:9002:2: rule__RaiseExpCS__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__5"


    // $ANTLR start "rule__RaiseExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:9008:1: rule__RaiseExpCS__Group__5__Impl : ( ')' ) ;
    public final void rule__RaiseExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9012:1: ( ( ')' ) )
            // InternalImperativeOCL.g:9013:1: ( ')' )
            {
            // InternalImperativeOCL.g:9013:1: ( ')' )
            // InternalImperativeOCL.g:9014:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getRightParenthesisKeyword_5());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getRightParenthesisKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group__5__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group_4__0"
    // InternalImperativeOCL.g:9039:1: rule__RaiseExpCS__Group_4__0 : rule__RaiseExpCS__Group_4__0__Impl rule__RaiseExpCS__Group_4__1 ;
    public final void rule__RaiseExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9043:1: ( rule__RaiseExpCS__Group_4__0__Impl rule__RaiseExpCS__Group_4__1 )
            // InternalImperativeOCL.g:9044:2: rule__RaiseExpCS__Group_4__0__Impl rule__RaiseExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__RaiseExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group_4__0"


    // $ANTLR start "rule__RaiseExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:9051:1: rule__RaiseExpCS__Group_4__0__Impl : ( ',' ) ;
    public final void rule__RaiseExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9055:1: ( ( ',' ) )
            // InternalImperativeOCL.g:9056:1: ( ',' )
            {
            // InternalImperativeOCL.g:9056:1: ( ',' )
            // InternalImperativeOCL.g:9057:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getCommaKeyword_4_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getCommaKeyword_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__RaiseExpCS__Group_4__1"
    // InternalImperativeOCL.g:9070:1: rule__RaiseExpCS__Group_4__1 : rule__RaiseExpCS__Group_4__1__Impl ;
    public final void rule__RaiseExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9074:1: ( rule__RaiseExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:9075:2: rule__RaiseExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group_4__1"


    // $ANTLR start "rule__RaiseExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:9081:1: rule__RaiseExpCS__Group_4__1__Impl : ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 ) ) ;
    public final void rule__RaiseExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9085:1: ( ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 ) ) )
            // InternalImperativeOCL.g:9086:1: ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 ) )
            {
            // InternalImperativeOCL.g:9086:1: ( ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 ) )
            // InternalImperativeOCL.g:9087:1: ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsAssignment_4_1());
            }
            // InternalImperativeOCL.g:9088:1: ( rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 )
            // InternalImperativeOCL.g:9088:2: rule__RaiseExpCS__OwnedArgumentsAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RaiseExpCS__OwnedArgumentsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsAssignment_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__ReturnExpCS__Group__0"
    // InternalImperativeOCL.g:9102:1: rule__ReturnExpCS__Group__0 : rule__ReturnExpCS__Group__0__Impl rule__ReturnExpCS__Group__1 ;
    public final void rule__ReturnExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9106:1: ( rule__ReturnExpCS__Group__0__Impl rule__ReturnExpCS__Group__1 )
            // InternalImperativeOCL.g:9107:2: rule__ReturnExpCS__Group__0__Impl rule__ReturnExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ReturnExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReturnExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__0"


    // $ANTLR start "rule__ReturnExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:9114:1: rule__ReturnExpCS__Group__0__Impl : ( 'return' ) ;
    public final void rule__ReturnExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9118:1: ( ( 'return' ) )
            // InternalImperativeOCL.g:9119:1: ( 'return' )
            {
            // InternalImperativeOCL.g:9119:1: ( 'return' )
            // InternalImperativeOCL.g:9120:1: 'return'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSAccess().getReturnKeyword_0());
            }
            match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSAccess().getReturnKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__0__Impl"


    // $ANTLR start "rule__ReturnExpCS__Group__1"
    // InternalImperativeOCL.g:9133:1: rule__ReturnExpCS__Group__1 : rule__ReturnExpCS__Group__1__Impl rule__ReturnExpCS__Group__2 ;
    public final void rule__ReturnExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9137:1: ( rule__ReturnExpCS__Group__1__Impl rule__ReturnExpCS__Group__2 )
            // InternalImperativeOCL.g:9138:2: rule__ReturnExpCS__Group__1__Impl rule__ReturnExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ReturnExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReturnExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__1"


    // $ANTLR start "rule__ReturnExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:9145:1: rule__ReturnExpCS__Group__1__Impl : ( () ) ;
    public final void rule__ReturnExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9149:1: ( ( () ) )
            // InternalImperativeOCL.g:9150:1: ( () )
            {
            // InternalImperativeOCL.g:9150:1: ( () )
            // InternalImperativeOCL.g:9151:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSAccess().getReturnExpCSAction_1());
            }
            // InternalImperativeOCL.g:9152:1: ()
            // InternalImperativeOCL.g:9154:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSAccess().getReturnExpCSAction_1());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__1__Impl"


    // $ANTLR start "rule__ReturnExpCS__Group__2"
    // InternalImperativeOCL.g:9164:1: rule__ReturnExpCS__Group__2 : rule__ReturnExpCS__Group__2__Impl ;
    public final void rule__ReturnExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9168:1: ( rule__ReturnExpCS__Group__2__Impl )
            // InternalImperativeOCL.g:9169:2: rule__ReturnExpCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReturnExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__2"


    // $ANTLR start "rule__ReturnExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:9175:1: rule__ReturnExpCS__Group__2__Impl : ( ( rule__ReturnExpCS__OwnedValueAssignment_2 )? ) ;
    public final void rule__ReturnExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9179:1: ( ( ( rule__ReturnExpCS__OwnedValueAssignment_2 )? ) )
            // InternalImperativeOCL.g:9180:1: ( ( rule__ReturnExpCS__OwnedValueAssignment_2 )? )
            {
            // InternalImperativeOCL.g:9180:1: ( ( rule__ReturnExpCS__OwnedValueAssignment_2 )? )
            // InternalImperativeOCL.g:9181:1: ( rule__ReturnExpCS__OwnedValueAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSAccess().getOwnedValueAssignment_2());
            }
            // InternalImperativeOCL.g:9182:1: ( rule__ReturnExpCS__OwnedValueAssignment_2 )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalImperativeOCL.g:9182:2: rule__ReturnExpCS__OwnedValueAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ReturnExpCS__OwnedValueAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSAccess().getOwnedValueAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__Group__2__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0__0"
    // InternalImperativeOCL.g:9198:1: rule__SwitchExpCS__Group_0__0 : rule__SwitchExpCS__Group_0__0__Impl rule__SwitchExpCS__Group_0__1 ;
    public final void rule__SwitchExpCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9202:1: ( rule__SwitchExpCS__Group_0__0__Impl rule__SwitchExpCS__Group_0__1 )
            // InternalImperativeOCL.g:9203:2: rule__SwitchExpCS__Group_0__0__Impl rule__SwitchExpCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SwitchExpCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__0"


    // $ANTLR start "rule__SwitchExpCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:9210:1: rule__SwitchExpCS__Group_0__0__Impl : ( ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 ) ) ;
    public final void rule__SwitchExpCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9214:1: ( ( ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 ) ) )
            // InternalImperativeOCL.g:9215:1: ( ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 ) )
            {
            // InternalImperativeOCL.g:9215:1: ( ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 ) )
            // InternalImperativeOCL.g:9216:1: ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getIfSyntaxAssignment_0_0());
            }
            // InternalImperativeOCL.g:9217:1: ( rule__SwitchExpCS__IfSyntaxAssignment_0_0 )
            // InternalImperativeOCL.g:9217:2: rule__SwitchExpCS__IfSyntaxAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__IfSyntaxAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getIfSyntaxAssignment_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0__1"
    // InternalImperativeOCL.g:9227:1: rule__SwitchExpCS__Group_0__1 : rule__SwitchExpCS__Group_0__1__Impl rule__SwitchExpCS__Group_0__2 ;
    public final void rule__SwitchExpCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9231:1: ( rule__SwitchExpCS__Group_0__1__Impl rule__SwitchExpCS__Group_0__2 )
            // InternalImperativeOCL.g:9232:2: rule__SwitchExpCS__Group_0__1__Impl rule__SwitchExpCS__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SwitchExpCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__1"


    // $ANTLR start "rule__SwitchExpCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:9239:1: rule__SwitchExpCS__Group_0__1__Impl : ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 ) ) ;
    public final void rule__SwitchExpCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9243:1: ( ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 ) ) )
            // InternalImperativeOCL.g:9244:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 ) )
            {
            // InternalImperativeOCL.g:9244:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 ) )
            // InternalImperativeOCL.g:9245:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_0_1());
            }
            // InternalImperativeOCL.g:9246:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 )
            // InternalImperativeOCL.g:9246:2: rule__SwitchExpCS__OwnedAltPartsAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedAltPartsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0__2"
    // InternalImperativeOCL.g:9256:1: rule__SwitchExpCS__Group_0__2 : rule__SwitchExpCS__Group_0__2__Impl rule__SwitchExpCS__Group_0__3 ;
    public final void rule__SwitchExpCS__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9260:1: ( rule__SwitchExpCS__Group_0__2__Impl rule__SwitchExpCS__Group_0__3 )
            // InternalImperativeOCL.g:9261:2: rule__SwitchExpCS__Group_0__2__Impl rule__SwitchExpCS__Group_0__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SwitchExpCS__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__2"


    // $ANTLR start "rule__SwitchExpCS__Group_0__2__Impl"
    // InternalImperativeOCL.g:9268:1: rule__SwitchExpCS__Group_0__2__Impl : ( ( rule__SwitchExpCS__Group_0_2__0 )* ) ;
    public final void rule__SwitchExpCS__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9272:1: ( ( ( rule__SwitchExpCS__Group_0_2__0 )* ) )
            // InternalImperativeOCL.g:9273:1: ( ( rule__SwitchExpCS__Group_0_2__0 )* )
            {
            // InternalImperativeOCL.g:9273:1: ( ( rule__SwitchExpCS__Group_0_2__0 )* )
            // InternalImperativeOCL.g:9274:1: ( rule__SwitchExpCS__Group_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_0_2());
            }
            // InternalImperativeOCL.g:9275:1: ( rule__SwitchExpCS__Group_0_2__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==88) ) {
                    int LA67_2 = input.LA(2);

                    if ( (synpred132_InternalImperativeOCL()) ) {
                        alt67=1;
                    }


                }


                switch (alt67) {
            	case 1 :
            	    // InternalImperativeOCL.g:9275:2: rule__SwitchExpCS__Group_0_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    rule__SwitchExpCS__Group_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__2__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0__3"
    // InternalImperativeOCL.g:9285:1: rule__SwitchExpCS__Group_0__3 : rule__SwitchExpCS__Group_0__3__Impl rule__SwitchExpCS__Group_0__4 ;
    public final void rule__SwitchExpCS__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9289:1: ( rule__SwitchExpCS__Group_0__3__Impl rule__SwitchExpCS__Group_0__4 )
            // InternalImperativeOCL.g:9290:2: rule__SwitchExpCS__Group_0__3__Impl rule__SwitchExpCS__Group_0__4
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SwitchExpCS__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__3"


    // $ANTLR start "rule__SwitchExpCS__Group_0__3__Impl"
    // InternalImperativeOCL.g:9297:1: rule__SwitchExpCS__Group_0__3__Impl : ( ( rule__SwitchExpCS__Group_0_3__0 )? ) ;
    public final void rule__SwitchExpCS__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9301:1: ( ( ( rule__SwitchExpCS__Group_0_3__0 )? ) )
            // InternalImperativeOCL.g:9302:1: ( ( rule__SwitchExpCS__Group_0_3__0 )? )
            {
            // InternalImperativeOCL.g:9302:1: ( ( rule__SwitchExpCS__Group_0_3__0 )? )
            // InternalImperativeOCL.g:9303:1: ( rule__SwitchExpCS__Group_0_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_0_3());
            }
            // InternalImperativeOCL.g:9304:1: ( rule__SwitchExpCS__Group_0_3__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==89) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred133_InternalImperativeOCL()) ) {
                    alt68=1;
                }
            }
            switch (alt68) {
                case 1 :
                    // InternalImperativeOCL.g:9304:2: rule__SwitchExpCS__Group_0_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SwitchExpCS__Group_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_0_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__3__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0__4"
    // InternalImperativeOCL.g:9314:1: rule__SwitchExpCS__Group_0__4 : rule__SwitchExpCS__Group_0__4__Impl ;
    public final void rule__SwitchExpCS__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9318:1: ( rule__SwitchExpCS__Group_0__4__Impl )
            // InternalImperativeOCL.g:9319:2: rule__SwitchExpCS__Group_0__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__4"


    // $ANTLR start "rule__SwitchExpCS__Group_0__4__Impl"
    // InternalImperativeOCL.g:9325:1: rule__SwitchExpCS__Group_0__4__Impl : ( ( 'endif' )? ) ;
    public final void rule__SwitchExpCS__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9329:1: ( ( ( 'endif' )? ) )
            // InternalImperativeOCL.g:9330:1: ( ( 'endif' )? )
            {
            // InternalImperativeOCL.g:9330:1: ( ( 'endif' )? )
            // InternalImperativeOCL.g:9331:1: ( 'endif' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getEndifKeyword_0_4());
            }
            // InternalImperativeOCL.g:9332:1: ( 'endif' )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==87) ) {
                int LA69_1 = input.LA(2);

                if ( (synpred134_InternalImperativeOCL()) ) {
                    alt69=1;
                }
            }
            switch (alt69) {
                case 1 :
                    // InternalImperativeOCL.g:9333:2: 'endif'
                    {
                    match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getEndifKeyword_0_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0__4__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0_2__0"
    // InternalImperativeOCL.g:9354:1: rule__SwitchExpCS__Group_0_2__0 : rule__SwitchExpCS__Group_0_2__0__Impl rule__SwitchExpCS__Group_0_2__1 ;
    public final void rule__SwitchExpCS__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9358:1: ( rule__SwitchExpCS__Group_0_2__0__Impl rule__SwitchExpCS__Group_0_2__1 )
            // InternalImperativeOCL.g:9359:2: rule__SwitchExpCS__Group_0_2__0__Impl rule__SwitchExpCS__Group_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SwitchExpCS__Group_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_2__0"


    // $ANTLR start "rule__SwitchExpCS__Group_0_2__0__Impl"
    // InternalImperativeOCL.g:9366:1: rule__SwitchExpCS__Group_0_2__0__Impl : ( 'elif' ) ;
    public final void rule__SwitchExpCS__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9370:1: ( ( 'elif' ) )
            // InternalImperativeOCL.g:9371:1: ( 'elif' )
            {
            // InternalImperativeOCL.g:9371:1: ( 'elif' )
            // InternalImperativeOCL.g:9372:1: 'elif'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getElifKeyword_0_2_0());
            }
            match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getElifKeyword_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_2__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0_2__1"
    // InternalImperativeOCL.g:9385:1: rule__SwitchExpCS__Group_0_2__1 : rule__SwitchExpCS__Group_0_2__1__Impl ;
    public final void rule__SwitchExpCS__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9389:1: ( rule__SwitchExpCS__Group_0_2__1__Impl )
            // InternalImperativeOCL.g:9390:2: rule__SwitchExpCS__Group_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_2__1"


    // $ANTLR start "rule__SwitchExpCS__Group_0_2__1__Impl"
    // InternalImperativeOCL.g:9396:1: rule__SwitchExpCS__Group_0_2__1__Impl : ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 ) ) ;
    public final void rule__SwitchExpCS__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9400:1: ( ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 ) ) )
            // InternalImperativeOCL.g:9401:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 ) )
            {
            // InternalImperativeOCL.g:9401:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 ) )
            // InternalImperativeOCL.g:9402:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_0_2_1());
            }
            // InternalImperativeOCL.g:9403:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 )
            // InternalImperativeOCL.g:9403:2: rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_0_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_2__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0_3__0"
    // InternalImperativeOCL.g:9417:1: rule__SwitchExpCS__Group_0_3__0 : rule__SwitchExpCS__Group_0_3__0__Impl rule__SwitchExpCS__Group_0_3__1 ;
    public final void rule__SwitchExpCS__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9421:1: ( rule__SwitchExpCS__Group_0_3__0__Impl rule__SwitchExpCS__Group_0_3__1 )
            // InternalImperativeOCL.g:9422:2: rule__SwitchExpCS__Group_0_3__0__Impl rule__SwitchExpCS__Group_0_3__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SwitchExpCS__Group_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_3__0"


    // $ANTLR start "rule__SwitchExpCS__Group_0_3__0__Impl"
    // InternalImperativeOCL.g:9429:1: rule__SwitchExpCS__Group_0_3__0__Impl : ( 'else' ) ;
    public final void rule__SwitchExpCS__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9433:1: ( ( 'else' ) )
            // InternalImperativeOCL.g:9434:1: ( 'else' )
            {
            // InternalImperativeOCL.g:9434:1: ( 'else' )
            // InternalImperativeOCL.g:9435:1: 'else'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getElseKeyword_0_3_0());
            }
            match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getElseKeyword_0_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_3__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_0_3__1"
    // InternalImperativeOCL.g:9448:1: rule__SwitchExpCS__Group_0_3__1 : rule__SwitchExpCS__Group_0_3__1__Impl ;
    public final void rule__SwitchExpCS__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9452:1: ( rule__SwitchExpCS__Group_0_3__1__Impl )
            // InternalImperativeOCL.g:9453:2: rule__SwitchExpCS__Group_0_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_3__1"


    // $ANTLR start "rule__SwitchExpCS__Group_0_3__1__Impl"
    // InternalImperativeOCL.g:9459:1: rule__SwitchExpCS__Group_0_3__1__Impl : ( ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 ) ) ;
    public final void rule__SwitchExpCS__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9463:1: ( ( ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 ) ) )
            // InternalImperativeOCL.g:9464:1: ( ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 ) )
            {
            // InternalImperativeOCL.g:9464:1: ( ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 ) )
            // InternalImperativeOCL.g:9465:1: ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartAssignment_0_3_1());
            }
            // InternalImperativeOCL.g:9466:1: ( rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 )
            // InternalImperativeOCL.g:9466:2: rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartAssignment_0_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_0_3__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__0"
    // InternalImperativeOCL.g:9480:1: rule__SwitchExpCS__Group_1__0 : rule__SwitchExpCS__Group_1__0__Impl rule__SwitchExpCS__Group_1__1 ;
    public final void rule__SwitchExpCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9484:1: ( rule__SwitchExpCS__Group_1__0__Impl rule__SwitchExpCS__Group_1__1 )
            // InternalImperativeOCL.g:9485:2: rule__SwitchExpCS__Group_1__0__Impl rule__SwitchExpCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__SwitchExpCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__0"


    // $ANTLR start "rule__SwitchExpCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:9492:1: rule__SwitchExpCS__Group_1__0__Impl : ( 'switch' ) ;
    public final void rule__SwitchExpCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9496:1: ( ( 'switch' ) )
            // InternalImperativeOCL.g:9497:1: ( 'switch' )
            {
            // InternalImperativeOCL.g:9497:1: ( 'switch' )
            // InternalImperativeOCL.g:9498:1: 'switch'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getSwitchKeyword_1_0());
            }
            match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getSwitchKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__1"
    // InternalImperativeOCL.g:9511:1: rule__SwitchExpCS__Group_1__1 : rule__SwitchExpCS__Group_1__1__Impl rule__SwitchExpCS__Group_1__2 ;
    public final void rule__SwitchExpCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9515:1: ( rule__SwitchExpCS__Group_1__1__Impl rule__SwitchExpCS__Group_1__2 )
            // InternalImperativeOCL.g:9516:2: rule__SwitchExpCS__Group_1__1__Impl rule__SwitchExpCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__SwitchExpCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__1"


    // $ANTLR start "rule__SwitchExpCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:9523:1: rule__SwitchExpCS__Group_1__1__Impl : ( ( rule__SwitchExpCS__Group_1_1__0 )? ) ;
    public final void rule__SwitchExpCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9527:1: ( ( ( rule__SwitchExpCS__Group_1_1__0 )? ) )
            // InternalImperativeOCL.g:9528:1: ( ( rule__SwitchExpCS__Group_1_1__0 )? )
            {
            // InternalImperativeOCL.g:9528:1: ( ( rule__SwitchExpCS__Group_1_1__0 )? )
            // InternalImperativeOCL.g:9529:1: ( rule__SwitchExpCS__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_1_1());
            }
            // InternalImperativeOCL.g:9530:1: ( rule__SwitchExpCS__Group_1_1__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==64) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalImperativeOCL.g:9530:2: rule__SwitchExpCS__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SwitchExpCS__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__2"
    // InternalImperativeOCL.g:9540:1: rule__SwitchExpCS__Group_1__2 : rule__SwitchExpCS__Group_1__2__Impl rule__SwitchExpCS__Group_1__3 ;
    public final void rule__SwitchExpCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9544:1: ( rule__SwitchExpCS__Group_1__2__Impl rule__SwitchExpCS__Group_1__3 )
            // InternalImperativeOCL.g:9545:2: rule__SwitchExpCS__Group_1__2__Impl rule__SwitchExpCS__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SwitchExpCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__2"


    // $ANTLR start "rule__SwitchExpCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:9552:1: rule__SwitchExpCS__Group_1__2__Impl : ( '{' ) ;
    public final void rule__SwitchExpCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9556:1: ( ( '{' ) )
            // InternalImperativeOCL.g:9557:1: ( '{' )
            {
            // InternalImperativeOCL.g:9557:1: ( '{' )
            // InternalImperativeOCL.g:9558:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getLeftCurlyBracketKeyword_1_2());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getLeftCurlyBracketKeyword_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__2__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__3"
    // InternalImperativeOCL.g:9571:1: rule__SwitchExpCS__Group_1__3 : rule__SwitchExpCS__Group_1__3__Impl rule__SwitchExpCS__Group_1__4 ;
    public final void rule__SwitchExpCS__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9575:1: ( rule__SwitchExpCS__Group_1__3__Impl rule__SwitchExpCS__Group_1__4 )
            // InternalImperativeOCL.g:9576:2: rule__SwitchExpCS__Group_1__3__Impl rule__SwitchExpCS__Group_1__4
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SwitchExpCS__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__3"


    // $ANTLR start "rule__SwitchExpCS__Group_1__3__Impl"
    // InternalImperativeOCL.g:9583:1: rule__SwitchExpCS__Group_1__3__Impl : ( ( ( rule__SwitchExpCS__Group_1_3__0 ) ) ( ( rule__SwitchExpCS__Group_1_3__0 )* ) ) ;
    public final void rule__SwitchExpCS__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9587:1: ( ( ( ( rule__SwitchExpCS__Group_1_3__0 ) ) ( ( rule__SwitchExpCS__Group_1_3__0 )* ) ) )
            // InternalImperativeOCL.g:9588:1: ( ( ( rule__SwitchExpCS__Group_1_3__0 ) ) ( ( rule__SwitchExpCS__Group_1_3__0 )* ) )
            {
            // InternalImperativeOCL.g:9588:1: ( ( ( rule__SwitchExpCS__Group_1_3__0 ) ) ( ( rule__SwitchExpCS__Group_1_3__0 )* ) )
            // InternalImperativeOCL.g:9589:1: ( ( rule__SwitchExpCS__Group_1_3__0 ) ) ( ( rule__SwitchExpCS__Group_1_3__0 )* )
            {
            // InternalImperativeOCL.g:9589:1: ( ( rule__SwitchExpCS__Group_1_3__0 ) )
            // InternalImperativeOCL.g:9590:1: ( rule__SwitchExpCS__Group_1_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_1_3());
            }
            // InternalImperativeOCL.g:9591:1: ( rule__SwitchExpCS__Group_1_3__0 )
            // InternalImperativeOCL.g:9591:2: rule__SwitchExpCS__Group_1_3__0
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SwitchExpCS__Group_1_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_1_3());
            }

            }

            // InternalImperativeOCL.g:9594:1: ( ( rule__SwitchExpCS__Group_1_3__0 )* )
            // InternalImperativeOCL.g:9595:1: ( rule__SwitchExpCS__Group_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_1_3());
            }
            // InternalImperativeOCL.g:9596:1: ( rule__SwitchExpCS__Group_1_3__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==91) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalImperativeOCL.g:9596:2: rule__SwitchExpCS__Group_1_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__SwitchExpCS__Group_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_1_3());
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__3__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__4"
    // InternalImperativeOCL.g:9607:1: rule__SwitchExpCS__Group_1__4 : rule__SwitchExpCS__Group_1__4__Impl rule__SwitchExpCS__Group_1__5 ;
    public final void rule__SwitchExpCS__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9611:1: ( rule__SwitchExpCS__Group_1__4__Impl rule__SwitchExpCS__Group_1__5 )
            // InternalImperativeOCL.g:9612:2: rule__SwitchExpCS__Group_1__4__Impl rule__SwitchExpCS__Group_1__5
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SwitchExpCS__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__4"


    // $ANTLR start "rule__SwitchExpCS__Group_1__4__Impl"
    // InternalImperativeOCL.g:9619:1: rule__SwitchExpCS__Group_1__4__Impl : ( ( rule__SwitchExpCS__Group_1_4__0 )? ) ;
    public final void rule__SwitchExpCS__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9623:1: ( ( ( rule__SwitchExpCS__Group_1_4__0 )? ) )
            // InternalImperativeOCL.g:9624:1: ( ( rule__SwitchExpCS__Group_1_4__0 )? )
            {
            // InternalImperativeOCL.g:9624:1: ( ( rule__SwitchExpCS__Group_1_4__0 )? )
            // InternalImperativeOCL.g:9625:1: ( rule__SwitchExpCS__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getGroup_1_4());
            }
            // InternalImperativeOCL.g:9626:1: ( rule__SwitchExpCS__Group_1_4__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==89) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalImperativeOCL.g:9626:2: rule__SwitchExpCS__Group_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SwitchExpCS__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getGroup_1_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__4__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1__5"
    // InternalImperativeOCL.g:9636:1: rule__SwitchExpCS__Group_1__5 : rule__SwitchExpCS__Group_1__5__Impl ;
    public final void rule__SwitchExpCS__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9640:1: ( rule__SwitchExpCS__Group_1__5__Impl )
            // InternalImperativeOCL.g:9641:2: rule__SwitchExpCS__Group_1__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__5"


    // $ANTLR start "rule__SwitchExpCS__Group_1__5__Impl"
    // InternalImperativeOCL.g:9647:1: rule__SwitchExpCS__Group_1__5__Impl : ( '}' ) ;
    public final void rule__SwitchExpCS__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9651:1: ( ( '}' ) )
            // InternalImperativeOCL.g:9652:1: ( '}' )
            {
            // InternalImperativeOCL.g:9652:1: ( '}' )
            // InternalImperativeOCL.g:9653:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getRightCurlyBracketKeyword_1_5());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getRightCurlyBracketKeyword_1_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1__5__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__0"
    // InternalImperativeOCL.g:9678:1: rule__SwitchExpCS__Group_1_1__0 : rule__SwitchExpCS__Group_1_1__0__Impl rule__SwitchExpCS__Group_1_1__1 ;
    public final void rule__SwitchExpCS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9682:1: ( rule__SwitchExpCS__Group_1_1__0__Impl rule__SwitchExpCS__Group_1_1__1 )
            // InternalImperativeOCL.g:9683:2: rule__SwitchExpCS__Group_1_1__0__Impl rule__SwitchExpCS__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__SwitchExpCS__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__0"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__0__Impl"
    // InternalImperativeOCL.g:9690:1: rule__SwitchExpCS__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__SwitchExpCS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9694:1: ( ( '(' ) )
            // InternalImperativeOCL.g:9695:1: ( '(' )
            {
            // InternalImperativeOCL.g:9695:1: ( '(' )
            // InternalImperativeOCL.g:9696:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getLeftParenthesisKeyword_1_1_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getLeftParenthesisKeyword_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__1"
    // InternalImperativeOCL.g:9709:1: rule__SwitchExpCS__Group_1_1__1 : rule__SwitchExpCS__Group_1_1__1__Impl rule__SwitchExpCS__Group_1_1__2 ;
    public final void rule__SwitchExpCS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9713:1: ( rule__SwitchExpCS__Group_1_1__1__Impl rule__SwitchExpCS__Group_1_1__2 )
            // InternalImperativeOCL.g:9714:2: rule__SwitchExpCS__Group_1_1__1__Impl rule__SwitchExpCS__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SwitchExpCS__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__1"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__1__Impl"
    // InternalImperativeOCL.g:9721:1: rule__SwitchExpCS__Group_1_1__1__Impl : ( ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 ) ) ;
    public final void rule__SwitchExpCS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9725:1: ( ( ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 ) ) )
            // InternalImperativeOCL.g:9726:1: ( ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 ) )
            {
            // InternalImperativeOCL.g:9726:1: ( ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 ) )
            // InternalImperativeOCL.g:9727:1: ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedIteratorAssignment_1_1_1());
            }
            // InternalImperativeOCL.g:9728:1: ( rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 )
            // InternalImperativeOCL.g:9728:2: rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedIteratorAssignment_1_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__2"
    // InternalImperativeOCL.g:9738:1: rule__SwitchExpCS__Group_1_1__2 : rule__SwitchExpCS__Group_1_1__2__Impl ;
    public final void rule__SwitchExpCS__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9742:1: ( rule__SwitchExpCS__Group_1_1__2__Impl )
            // InternalImperativeOCL.g:9743:2: rule__SwitchExpCS__Group_1_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__2"


    // $ANTLR start "rule__SwitchExpCS__Group_1_1__2__Impl"
    // InternalImperativeOCL.g:9749:1: rule__SwitchExpCS__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__SwitchExpCS__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9753:1: ( ( ')' ) )
            // InternalImperativeOCL.g:9754:1: ( ')' )
            {
            // InternalImperativeOCL.g:9754:1: ( ')' )
            // InternalImperativeOCL.g:9755:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getRightParenthesisKeyword_1_1_2());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getRightParenthesisKeyword_1_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_1__2__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_3__0"
    // InternalImperativeOCL.g:9774:1: rule__SwitchExpCS__Group_1_3__0 : rule__SwitchExpCS__Group_1_3__0__Impl rule__SwitchExpCS__Group_1_3__1 ;
    public final void rule__SwitchExpCS__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9778:1: ( rule__SwitchExpCS__Group_1_3__0__Impl rule__SwitchExpCS__Group_1_3__1 )
            // InternalImperativeOCL.g:9779:2: rule__SwitchExpCS__Group_1_3__0__Impl rule__SwitchExpCS__Group_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SwitchExpCS__Group_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_3__0"


    // $ANTLR start "rule__SwitchExpCS__Group_1_3__0__Impl"
    // InternalImperativeOCL.g:9786:1: rule__SwitchExpCS__Group_1_3__0__Impl : ( 'case' ) ;
    public final void rule__SwitchExpCS__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9790:1: ( ( 'case' ) )
            // InternalImperativeOCL.g:9791:1: ( 'case' )
            {
            // InternalImperativeOCL.g:9791:1: ( 'case' )
            // InternalImperativeOCL.g:9792:1: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getCaseKeyword_1_3_0());
            }
            match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getCaseKeyword_1_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_3__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_3__1"
    // InternalImperativeOCL.g:9805:1: rule__SwitchExpCS__Group_1_3__1 : rule__SwitchExpCS__Group_1_3__1__Impl ;
    public final void rule__SwitchExpCS__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9809:1: ( rule__SwitchExpCS__Group_1_3__1__Impl )
            // InternalImperativeOCL.g:9810:2: rule__SwitchExpCS__Group_1_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_3__1"


    // $ANTLR start "rule__SwitchExpCS__Group_1_3__1__Impl"
    // InternalImperativeOCL.g:9816:1: rule__SwitchExpCS__Group_1_3__1__Impl : ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 ) ) ;
    public final void rule__SwitchExpCS__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9820:1: ( ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 ) ) )
            // InternalImperativeOCL.g:9821:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 ) )
            {
            // InternalImperativeOCL.g:9821:1: ( ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 ) )
            // InternalImperativeOCL.g:9822:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_1_3_1());
            }
            // InternalImperativeOCL.g:9823:1: ( rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 )
            // InternalImperativeOCL.g:9823:2: rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsAssignment_1_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_3__1__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_4__0"
    // InternalImperativeOCL.g:9837:1: rule__SwitchExpCS__Group_1_4__0 : rule__SwitchExpCS__Group_1_4__0__Impl rule__SwitchExpCS__Group_1_4__1 ;
    public final void rule__SwitchExpCS__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9841:1: ( rule__SwitchExpCS__Group_1_4__0__Impl rule__SwitchExpCS__Group_1_4__1 )
            // InternalImperativeOCL.g:9842:2: rule__SwitchExpCS__Group_1_4__0__Impl rule__SwitchExpCS__Group_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SwitchExpCS__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_4__0"


    // $ANTLR start "rule__SwitchExpCS__Group_1_4__0__Impl"
    // InternalImperativeOCL.g:9849:1: rule__SwitchExpCS__Group_1_4__0__Impl : ( 'else' ) ;
    public final void rule__SwitchExpCS__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9853:1: ( ( 'else' ) )
            // InternalImperativeOCL.g:9854:1: ( 'else' )
            {
            // InternalImperativeOCL.g:9854:1: ( 'else' )
            // InternalImperativeOCL.g:9855:1: 'else'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getElseKeyword_1_4_0());
            }
            match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getElseKeyword_1_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_4__0__Impl"


    // $ANTLR start "rule__SwitchExpCS__Group_1_4__1"
    // InternalImperativeOCL.g:9868:1: rule__SwitchExpCS__Group_1_4__1 : rule__SwitchExpCS__Group_1_4__1__Impl ;
    public final void rule__SwitchExpCS__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9872:1: ( rule__SwitchExpCS__Group_1_4__1__Impl )
            // InternalImperativeOCL.g:9873:2: rule__SwitchExpCS__Group_1_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_4__1"


    // $ANTLR start "rule__SwitchExpCS__Group_1_4__1__Impl"
    // InternalImperativeOCL.g:9879:1: rule__SwitchExpCS__Group_1_4__1__Impl : ( ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 ) ) ;
    public final void rule__SwitchExpCS__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9883:1: ( ( ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 ) ) )
            // InternalImperativeOCL.g:9884:1: ( ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 ) )
            {
            // InternalImperativeOCL.g:9884:1: ( ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 ) )
            // InternalImperativeOCL.g:9885:1: ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartAssignment_1_4_1());
            }
            // InternalImperativeOCL.g:9886:1: ( rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 )
            // InternalImperativeOCL.g:9886:2: rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartAssignment_1_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__Group_1_4__1__Impl"


    // $ANTLR start "rule__SwitchAltCS__Group__0"
    // InternalImperativeOCL.g:9900:1: rule__SwitchAltCS__Group__0 : rule__SwitchAltCS__Group__0__Impl rule__SwitchAltCS__Group__1 ;
    public final void rule__SwitchAltCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9904:1: ( rule__SwitchAltCS__Group__0__Impl rule__SwitchAltCS__Group__1 )
            // InternalImperativeOCL.g:9905:2: rule__SwitchAltCS__Group__0__Impl rule__SwitchAltCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SwitchAltCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__0"


    // $ANTLR start "rule__SwitchAltCS__Group__0__Impl"
    // InternalImperativeOCL.g:9912:1: rule__SwitchAltCS__Group__0__Impl : ( '(' ) ;
    public final void rule__SwitchAltCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9916:1: ( ( '(' ) )
            // InternalImperativeOCL.g:9917:1: ( '(' )
            {
            // InternalImperativeOCL.g:9917:1: ( '(' )
            // InternalImperativeOCL.g:9918:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getLeftParenthesisKeyword_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getLeftParenthesisKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__0__Impl"


    // $ANTLR start "rule__SwitchAltCS__Group__1"
    // InternalImperativeOCL.g:9931:1: rule__SwitchAltCS__Group__1 : rule__SwitchAltCS__Group__1__Impl rule__SwitchAltCS__Group__2 ;
    public final void rule__SwitchAltCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9935:1: ( rule__SwitchAltCS__Group__1__Impl rule__SwitchAltCS__Group__2 )
            // InternalImperativeOCL.g:9936:2: rule__SwitchAltCS__Group__1__Impl rule__SwitchAltCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SwitchAltCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__1"


    // $ANTLR start "rule__SwitchAltCS__Group__1__Impl"
    // InternalImperativeOCL.g:9943:1: rule__SwitchAltCS__Group__1__Impl : ( ( rule__SwitchAltCS__OwnedConditionAssignment_1 ) ) ;
    public final void rule__SwitchAltCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9947:1: ( ( ( rule__SwitchAltCS__OwnedConditionAssignment_1 ) ) )
            // InternalImperativeOCL.g:9948:1: ( ( rule__SwitchAltCS__OwnedConditionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:9948:1: ( ( rule__SwitchAltCS__OwnedConditionAssignment_1 ) )
            // InternalImperativeOCL.g:9949:1: ( rule__SwitchAltCS__OwnedConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getOwnedConditionAssignment_1());
            }
            // InternalImperativeOCL.g:9950:1: ( rule__SwitchAltCS__OwnedConditionAssignment_1 )
            // InternalImperativeOCL.g:9950:2: rule__SwitchAltCS__OwnedConditionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__OwnedConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getOwnedConditionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__1__Impl"


    // $ANTLR start "rule__SwitchAltCS__Group__2"
    // InternalImperativeOCL.g:9960:1: rule__SwitchAltCS__Group__2 : rule__SwitchAltCS__Group__2__Impl rule__SwitchAltCS__Group__3 ;
    public final void rule__SwitchAltCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9964:1: ( rule__SwitchAltCS__Group__2__Impl rule__SwitchAltCS__Group__3 )
            // InternalImperativeOCL.g:9965:2: rule__SwitchAltCS__Group__2__Impl rule__SwitchAltCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SwitchAltCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__2"


    // $ANTLR start "rule__SwitchAltCS__Group__2__Impl"
    // InternalImperativeOCL.g:9972:1: rule__SwitchAltCS__Group__2__Impl : ( ')' ) ;
    public final void rule__SwitchAltCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9976:1: ( ( ')' ) )
            // InternalImperativeOCL.g:9977:1: ( ')' )
            {
            // InternalImperativeOCL.g:9977:1: ( ')' )
            // InternalImperativeOCL.g:9978:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getRightParenthesisKeyword_2());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getRightParenthesisKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__2__Impl"


    // $ANTLR start "rule__SwitchAltCS__Group__3"
    // InternalImperativeOCL.g:9991:1: rule__SwitchAltCS__Group__3 : rule__SwitchAltCS__Group__3__Impl ;
    public final void rule__SwitchAltCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:9995:1: ( rule__SwitchAltCS__Group__3__Impl )
            // InternalImperativeOCL.g:9996:2: rule__SwitchAltCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__3"


    // $ANTLR start "rule__SwitchAltCS__Group__3__Impl"
    // InternalImperativeOCL.g:10002:1: rule__SwitchAltCS__Group__3__Impl : ( ( rule__SwitchAltCS__OwnedBodyAssignment_3 ) ) ;
    public final void rule__SwitchAltCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10006:1: ( ( ( rule__SwitchAltCS__OwnedBodyAssignment_3 ) ) )
            // InternalImperativeOCL.g:10007:1: ( ( rule__SwitchAltCS__OwnedBodyAssignment_3 ) )
            {
            // InternalImperativeOCL.g:10007:1: ( ( rule__SwitchAltCS__OwnedBodyAssignment_3 ) )
            // InternalImperativeOCL.g:10008:1: ( rule__SwitchAltCS__OwnedBodyAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getOwnedBodyAssignment_3());
            }
            // InternalImperativeOCL.g:10009:1: ( rule__SwitchAltCS__OwnedBodyAssignment_3 )
            // InternalImperativeOCL.g:10009:2: rule__SwitchAltCS__OwnedBodyAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SwitchAltCS__OwnedBodyAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getOwnedBodyAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__Group__3__Impl"


    // $ANTLR start "rule__TryExpCS__Group__0"
    // InternalImperativeOCL.g:10027:1: rule__TryExpCS__Group__0 : rule__TryExpCS__Group__0__Impl rule__TryExpCS__Group__1 ;
    public final void rule__TryExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10031:1: ( rule__TryExpCS__Group__0__Impl rule__TryExpCS__Group__1 )
            // InternalImperativeOCL.g:10032:2: rule__TryExpCS__Group__0__Impl rule__TryExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__TryExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__0"


    // $ANTLR start "rule__TryExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:10039:1: rule__TryExpCS__Group__0__Impl : ( () ) ;
    public final void rule__TryExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10043:1: ( ( () ) )
            // InternalImperativeOCL.g:10044:1: ( () )
            {
            // InternalImperativeOCL.g:10044:1: ( () )
            // InternalImperativeOCL.g:10045:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getTryExpCSAction_0());
            }
            // InternalImperativeOCL.g:10046:1: ()
            // InternalImperativeOCL.g:10048:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getTryExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__0__Impl"


    // $ANTLR start "rule__TryExpCS__Group__1"
    // InternalImperativeOCL.g:10058:1: rule__TryExpCS__Group__1 : rule__TryExpCS__Group__1__Impl rule__TryExpCS__Group__2 ;
    public final void rule__TryExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10062:1: ( rule__TryExpCS__Group__1__Impl rule__TryExpCS__Group__2 )
            // InternalImperativeOCL.g:10063:2: rule__TryExpCS__Group__1__Impl rule__TryExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TryExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__1"


    // $ANTLR start "rule__TryExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:10070:1: rule__TryExpCS__Group__1__Impl : ( 'try' ) ;
    public final void rule__TryExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10074:1: ( ( 'try' ) )
            // InternalImperativeOCL.g:10075:1: ( 'try' )
            {
            // InternalImperativeOCL.g:10075:1: ( 'try' )
            // InternalImperativeOCL.g:10076:1: 'try'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getTryKeyword_1());
            }
            match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getTryKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__1__Impl"


    // $ANTLR start "rule__TryExpCS__Group__2"
    // InternalImperativeOCL.g:10089:1: rule__TryExpCS__Group__2 : rule__TryExpCS__Group__2__Impl rule__TryExpCS__Group__3 ;
    public final void rule__TryExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10093:1: ( rule__TryExpCS__Group__2__Impl rule__TryExpCS__Group__3 )
            // InternalImperativeOCL.g:10094:2: rule__TryExpCS__Group__2__Impl rule__TryExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__TryExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__2"


    // $ANTLR start "rule__TryExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:10101:1: rule__TryExpCS__Group__2__Impl : ( '{' ) ;
    public final void rule__TryExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10105:1: ( ( '{' ) )
            // InternalImperativeOCL.g:10106:1: ( '{' )
            {
            // InternalImperativeOCL.g:10106:1: ( '{' )
            // InternalImperativeOCL.g:10107:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getLeftCurlyBracketKeyword_2());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getLeftCurlyBracketKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__2__Impl"


    // $ANTLR start "rule__TryExpCS__Group__3"
    // InternalImperativeOCL.g:10120:1: rule__TryExpCS__Group__3 : rule__TryExpCS__Group__3__Impl rule__TryExpCS__Group__4 ;
    public final void rule__TryExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10124:1: ( rule__TryExpCS__Group__3__Impl rule__TryExpCS__Group__4 )
            // InternalImperativeOCL.g:10125:2: rule__TryExpCS__Group__3__Impl rule__TryExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__TryExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__3"


    // $ANTLR start "rule__TryExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:10132:1: rule__TryExpCS__Group__3__Impl : ( ( rule__TryExpCS__OwnedExpsAssignment_3 )* ) ;
    public final void rule__TryExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10136:1: ( ( ( rule__TryExpCS__OwnedExpsAssignment_3 )* ) )
            // InternalImperativeOCL.g:10137:1: ( ( rule__TryExpCS__OwnedExpsAssignment_3 )* )
            {
            // InternalImperativeOCL.g:10137:1: ( ( rule__TryExpCS__OwnedExpsAssignment_3 )* )
            // InternalImperativeOCL.g:10138:1: ( rule__TryExpCS__OwnedExpsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getOwnedExpsAssignment_3());
            }
            // InternalImperativeOCL.g:10139:1: ( rule__TryExpCS__OwnedExpsAssignment_3 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0>=RULE_INT && LA73_0<=RULE_ESCAPED_ID)||(LA73_0>=16 && LA73_0<=23)||(LA73_0>=40 && LA73_0<=54)||(LA73_0>=63 && LA73_0<=64)||LA73_0==66||LA73_0==68||LA73_0==71||LA73_0==73||(LA73_0>=76 && LA73_0<=78)||LA73_0==81||LA73_0==83||(LA73_0>=85 && LA73_0<=86)||LA73_0==90||(LA73_0>=92 && LA73_0<=94)||LA73_0==97||(LA73_0>=99 && LA73_0<=100)||LA73_0==105||(LA73_0>=108 && LA73_0<=109)||(LA73_0>=113 && LA73_0<=116)) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalImperativeOCL.g:10139:2: rule__TryExpCS__OwnedExpsAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__TryExpCS__OwnedExpsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getOwnedExpsAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__3__Impl"


    // $ANTLR start "rule__TryExpCS__Group__4"
    // InternalImperativeOCL.g:10149:1: rule__TryExpCS__Group__4 : rule__TryExpCS__Group__4__Impl rule__TryExpCS__Group__5 ;
    public final void rule__TryExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10153:1: ( rule__TryExpCS__Group__4__Impl rule__TryExpCS__Group__5 )
            // InternalImperativeOCL.g:10154:2: rule__TryExpCS__Group__4__Impl rule__TryExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__TryExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__4"


    // $ANTLR start "rule__TryExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:10161:1: rule__TryExpCS__Group__4__Impl : ( '}' ) ;
    public final void rule__TryExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10165:1: ( ( '}' ) )
            // InternalImperativeOCL.g:10166:1: ( '}' )
            {
            // InternalImperativeOCL.g:10166:1: ( '}' )
            // InternalImperativeOCL.g:10167:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getRightCurlyBracketKeyword_4());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getRightCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__4__Impl"


    // $ANTLR start "rule__TryExpCS__Group__5"
    // InternalImperativeOCL.g:10180:1: rule__TryExpCS__Group__5 : rule__TryExpCS__Group__5__Impl ;
    public final void rule__TryExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10184:1: ( rule__TryExpCS__Group__5__Impl )
            // InternalImperativeOCL.g:10185:2: rule__TryExpCS__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TryExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__5"


    // $ANTLR start "rule__TryExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:10191:1: rule__TryExpCS__Group__5__Impl : ( ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) ) ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* ) ) ;
    public final void rule__TryExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10195:1: ( ( ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) ) ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* ) ) )
            // InternalImperativeOCL.g:10196:1: ( ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) ) ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* ) )
            {
            // InternalImperativeOCL.g:10196:1: ( ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) ) ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* ) )
            // InternalImperativeOCL.g:10197:1: ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) ) ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* )
            {
            // InternalImperativeOCL.g:10197:1: ( ( rule__TryExpCS__OwnedCatchsAssignment_5 ) )
            // InternalImperativeOCL.g:10198:1: ( rule__TryExpCS__OwnedCatchsAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getOwnedCatchsAssignment_5());
            }
            // InternalImperativeOCL.g:10199:1: ( rule__TryExpCS__OwnedCatchsAssignment_5 )
            // InternalImperativeOCL.g:10199:2: rule__TryExpCS__OwnedCatchsAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__TryExpCS__OwnedCatchsAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getOwnedCatchsAssignment_5());
            }

            }

            // InternalImperativeOCL.g:10202:1: ( ( rule__TryExpCS__OwnedCatchsAssignment_5 )* )
            // InternalImperativeOCL.g:10203:1: ( rule__TryExpCS__OwnedCatchsAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getOwnedCatchsAssignment_5());
            }
            // InternalImperativeOCL.g:10204:1: ( rule__TryExpCS__OwnedCatchsAssignment_5 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==72) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalImperativeOCL.g:10204:2: rule__TryExpCS__OwnedCatchsAssignment_5
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__TryExpCS__OwnedCatchsAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getOwnedCatchsAssignment_5());
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__Group__5__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group__0"
    // InternalImperativeOCL.g:10227:1: rule__VarDeclarationCS__Group__0 : rule__VarDeclarationCS__Group__0__Impl rule__VarDeclarationCS__Group__1 ;
    public final void rule__VarDeclarationCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10231:1: ( rule__VarDeclarationCS__Group__0__Impl rule__VarDeclarationCS__Group__1 )
            // InternalImperativeOCL.g:10232:2: rule__VarDeclarationCS__Group__0__Impl rule__VarDeclarationCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__VarDeclarationCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__0"


    // $ANTLR start "rule__VarDeclarationCS__Group__0__Impl"
    // InternalImperativeOCL.g:10239:1: rule__VarDeclarationCS__Group__0__Impl : ( ( rule__VarDeclarationCS__NameAssignment_0 ) ) ;
    public final void rule__VarDeclarationCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10243:1: ( ( ( rule__VarDeclarationCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:10244:1: ( ( rule__VarDeclarationCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:10244:1: ( ( rule__VarDeclarationCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:10245:1: ( rule__VarDeclarationCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:10246:1: ( rule__VarDeclarationCS__NameAssignment_0 )
            // InternalImperativeOCL.g:10246:2: rule__VarDeclarationCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__0__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group__1"
    // InternalImperativeOCL.g:10256:1: rule__VarDeclarationCS__Group__1 : rule__VarDeclarationCS__Group__1__Impl rule__VarDeclarationCS__Group__2 ;
    public final void rule__VarDeclarationCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10260:1: ( rule__VarDeclarationCS__Group__1__Impl rule__VarDeclarationCS__Group__2 )
            // InternalImperativeOCL.g:10261:2: rule__VarDeclarationCS__Group__1__Impl rule__VarDeclarationCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__VarDeclarationCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__1"


    // $ANTLR start "rule__VarDeclarationCS__Group__1__Impl"
    // InternalImperativeOCL.g:10268:1: rule__VarDeclarationCS__Group__1__Impl : ( ( rule__VarDeclarationCS__Group_1__0 )? ) ;
    public final void rule__VarDeclarationCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10272:1: ( ( ( rule__VarDeclarationCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:10273:1: ( ( rule__VarDeclarationCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:10273:1: ( ( rule__VarDeclarationCS__Group_1__0 )? )
            // InternalImperativeOCL.g:10274:1: ( rule__VarDeclarationCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:10275:1: ( rule__VarDeclarationCS__Group_1__0 )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalImperativeOCL.g:10275:2: rule__VarDeclarationCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclarationCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__1__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group__2"
    // InternalImperativeOCL.g:10285:1: rule__VarDeclarationCS__Group__2 : rule__VarDeclarationCS__Group__2__Impl ;
    public final void rule__VarDeclarationCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10289:1: ( rule__VarDeclarationCS__Group__2__Impl )
            // InternalImperativeOCL.g:10290:2: rule__VarDeclarationCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__2"


    // $ANTLR start "rule__VarDeclarationCS__Group__2__Impl"
    // InternalImperativeOCL.g:10296:1: rule__VarDeclarationCS__Group__2__Impl : ( ( rule__VarDeclarationCS__Group_2__0 )? ) ;
    public final void rule__VarDeclarationCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10300:1: ( ( ( rule__VarDeclarationCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:10301:1: ( ( rule__VarDeclarationCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:10301:1: ( ( rule__VarDeclarationCS__Group_2__0 )? )
            // InternalImperativeOCL.g:10302:1: ( rule__VarDeclarationCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:10303:1: ( rule__VarDeclarationCS__Group_2__0 )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalImperativeOCL.g:10303:2: rule__VarDeclarationCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclarationCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group__2__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group_1__0"
    // InternalImperativeOCL.g:10319:1: rule__VarDeclarationCS__Group_1__0 : rule__VarDeclarationCS__Group_1__0__Impl rule__VarDeclarationCS__Group_1__1 ;
    public final void rule__VarDeclarationCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10323:1: ( rule__VarDeclarationCS__Group_1__0__Impl rule__VarDeclarationCS__Group_1__1 )
            // InternalImperativeOCL.g:10324:2: rule__VarDeclarationCS__Group_1__0__Impl rule__VarDeclarationCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__VarDeclarationCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_1__0"


    // $ANTLR start "rule__VarDeclarationCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:10331:1: rule__VarDeclarationCS__Group_1__0__Impl : ( ':' ) ;
    public final void rule__VarDeclarationCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10335:1: ( ( ':' ) )
            // InternalImperativeOCL.g:10336:1: ( ':' )
            {
            // InternalImperativeOCL.g:10336:1: ( ':' )
            // InternalImperativeOCL.g:10337:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getColonKeyword_1_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getColonKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group_1__1"
    // InternalImperativeOCL.g:10350:1: rule__VarDeclarationCS__Group_1__1 : rule__VarDeclarationCS__Group_1__1__Impl ;
    public final void rule__VarDeclarationCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10354:1: ( rule__VarDeclarationCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:10355:2: rule__VarDeclarationCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_1__1"


    // $ANTLR start "rule__VarDeclarationCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:10361:1: rule__VarDeclarationCS__Group_1__1__Impl : ( ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 ) ) ;
    public final void rule__VarDeclarationCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10365:1: ( ( ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:10366:1: ( ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:10366:1: ( ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:10367:1: ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getOwnedTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:10368:1: ( rule__VarDeclarationCS__OwnedTypeAssignment_1_1 )
            // InternalImperativeOCL.g:10368:2: rule__VarDeclarationCS__OwnedTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__OwnedTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getOwnedTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group_2__0"
    // InternalImperativeOCL.g:10382:1: rule__VarDeclarationCS__Group_2__0 : rule__VarDeclarationCS__Group_2__0__Impl rule__VarDeclarationCS__Group_2__1 ;
    public final void rule__VarDeclarationCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10386:1: ( rule__VarDeclarationCS__Group_2__0__Impl rule__VarDeclarationCS__Group_2__1 )
            // InternalImperativeOCL.g:10387:2: rule__VarDeclarationCS__Group_2__0__Impl rule__VarDeclarationCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__VarDeclarationCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_2__0"


    // $ANTLR start "rule__VarDeclarationCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:10394:1: rule__VarDeclarationCS__Group_2__0__Impl : ( ( rule__VarDeclarationCS__InitOpAssignment_2_0 ) ) ;
    public final void rule__VarDeclarationCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10398:1: ( ( ( rule__VarDeclarationCS__InitOpAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:10399:1: ( ( rule__VarDeclarationCS__InitOpAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:10399:1: ( ( rule__VarDeclarationCS__InitOpAssignment_2_0 ) )
            // InternalImperativeOCL.g:10400:1: ( rule__VarDeclarationCS__InitOpAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getInitOpAssignment_2_0());
            }
            // InternalImperativeOCL.g:10401:1: ( rule__VarDeclarationCS__InitOpAssignment_2_0 )
            // InternalImperativeOCL.g:10401:2: rule__VarDeclarationCS__InitOpAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__InitOpAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getInitOpAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclarationCS__Group_2__1"
    // InternalImperativeOCL.g:10411:1: rule__VarDeclarationCS__Group_2__1 : rule__VarDeclarationCS__Group_2__1__Impl ;
    public final void rule__VarDeclarationCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10415:1: ( rule__VarDeclarationCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:10416:2: rule__VarDeclarationCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_2__1"


    // $ANTLR start "rule__VarDeclarationCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:10422:1: rule__VarDeclarationCS__Group_2__1__Impl : ( ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 ) ) ;
    public final void rule__VarDeclarationCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10426:1: ( ( ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:10427:1: ( ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:10427:1: ( ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 ) )
            // InternalImperativeOCL.g:10428:1: ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getOwnedInitExpressionAssignment_2_1());
            }
            // InternalImperativeOCL.g:10429:1: ( rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 )
            // InternalImperativeOCL.g:10429:2: rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getOwnedInitExpressionAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group__0"
    // InternalImperativeOCL.g:10443:1: rule__VarDeclarationNoInitCS__Group__0 : rule__VarDeclarationNoInitCS__Group__0__Impl rule__VarDeclarationNoInitCS__Group__1 ;
    public final void rule__VarDeclarationNoInitCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10447:1: ( rule__VarDeclarationNoInitCS__Group__0__Impl rule__VarDeclarationNoInitCS__Group__1 )
            // InternalImperativeOCL.g:10448:2: rule__VarDeclarationNoInitCS__Group__0__Impl rule__VarDeclarationNoInitCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__VarDeclarationNoInitCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group__0"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group__0__Impl"
    // InternalImperativeOCL.g:10455:1: rule__VarDeclarationNoInitCS__Group__0__Impl : ( ( rule__VarDeclarationNoInitCS__NameAssignment_0 ) ) ;
    public final void rule__VarDeclarationNoInitCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10459:1: ( ( ( rule__VarDeclarationNoInitCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:10460:1: ( ( rule__VarDeclarationNoInitCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:10460:1: ( ( rule__VarDeclarationNoInitCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:10461:1: ( rule__VarDeclarationNoInitCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:10462:1: ( rule__VarDeclarationNoInitCS__NameAssignment_0 )
            // InternalImperativeOCL.g:10462:2: rule__VarDeclarationNoInitCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group__0__Impl"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group__1"
    // InternalImperativeOCL.g:10472:1: rule__VarDeclarationNoInitCS__Group__1 : rule__VarDeclarationNoInitCS__Group__1__Impl ;
    public final void rule__VarDeclarationNoInitCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10476:1: ( rule__VarDeclarationNoInitCS__Group__1__Impl )
            // InternalImperativeOCL.g:10477:2: rule__VarDeclarationNoInitCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group__1"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group__1__Impl"
    // InternalImperativeOCL.g:10483:1: rule__VarDeclarationNoInitCS__Group__1__Impl : ( ( rule__VarDeclarationNoInitCS__Group_1__0 )? ) ;
    public final void rule__VarDeclarationNoInitCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10487:1: ( ( ( rule__VarDeclarationNoInitCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:10488:1: ( ( rule__VarDeclarationNoInitCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:10488:1: ( ( rule__VarDeclarationNoInitCS__Group_1__0 )? )
            // InternalImperativeOCL.g:10489:1: ( rule__VarDeclarationNoInitCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:10490:1: ( rule__VarDeclarationNoInitCS__Group_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==75) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalImperativeOCL.g:10490:2: rule__VarDeclarationNoInitCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclarationNoInitCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group__1__Impl"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group_1__0"
    // InternalImperativeOCL.g:10504:1: rule__VarDeclarationNoInitCS__Group_1__0 : rule__VarDeclarationNoInitCS__Group_1__0__Impl rule__VarDeclarationNoInitCS__Group_1__1 ;
    public final void rule__VarDeclarationNoInitCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10508:1: ( rule__VarDeclarationNoInitCS__Group_1__0__Impl rule__VarDeclarationNoInitCS__Group_1__1 )
            // InternalImperativeOCL.g:10509:2: rule__VarDeclarationNoInitCS__Group_1__0__Impl rule__VarDeclarationNoInitCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__VarDeclarationNoInitCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group_1__0"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:10516:1: rule__VarDeclarationNoInitCS__Group_1__0__Impl : ( ':' ) ;
    public final void rule__VarDeclarationNoInitCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10520:1: ( ( ':' ) )
            // InternalImperativeOCL.g:10521:1: ( ':' )
            {
            // InternalImperativeOCL.g:10521:1: ( ':' )
            // InternalImperativeOCL.g:10522:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getColonKeyword_1_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getColonKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group_1__1"
    // InternalImperativeOCL.g:10535:1: rule__VarDeclarationNoInitCS__Group_1__1 : rule__VarDeclarationNoInitCS__Group_1__1__Impl ;
    public final void rule__VarDeclarationNoInitCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10539:1: ( rule__VarDeclarationNoInitCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:10540:2: rule__VarDeclarationNoInitCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group_1__1"


    // $ANTLR start "rule__VarDeclarationNoInitCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:10546:1: rule__VarDeclarationNoInitCS__Group_1__1__Impl : ( ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 ) ) ;
    public final void rule__VarDeclarationNoInitCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10550:1: ( ( ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:10551:1: ( ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:10551:1: ( ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:10552:1: ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getOwnedTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:10553:1: ( rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 )
            // InternalImperativeOCL.g:10553:2: rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getOwnedTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__Group_1__1__Impl"


    // $ANTLR start "rule__VarsInitializationCS__Group__0"
    // InternalImperativeOCL.g:10567:1: rule__VarsInitializationCS__Group__0 : rule__VarsInitializationCS__Group__0__Impl rule__VarsInitializationCS__Group__1 ;
    public final void rule__VarsInitializationCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10571:1: ( rule__VarsInitializationCS__Group__0__Impl rule__VarsInitializationCS__Group__1 )
            // InternalImperativeOCL.g:10572:2: rule__VarsInitializationCS__Group__0__Impl rule__VarsInitializationCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__VarsInitializationCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__0"


    // $ANTLR start "rule__VarsInitializationCS__Group__0__Impl"
    // InternalImperativeOCL.g:10579:1: rule__VarsInitializationCS__Group__0__Impl : ( 'var' ) ;
    public final void rule__VarsInitializationCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10583:1: ( ( 'var' ) )
            // InternalImperativeOCL.g:10584:1: ( 'var' )
            {
            // InternalImperativeOCL.g:10584:1: ( 'var' )
            // InternalImperativeOCL.g:10585:1: 'var'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getVarKeyword_0());
            }
            match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getVarKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__0__Impl"


    // $ANTLR start "rule__VarsInitializationCS__Group__1"
    // InternalImperativeOCL.g:10598:1: rule__VarsInitializationCS__Group__1 : rule__VarsInitializationCS__Group__1__Impl rule__VarsInitializationCS__Group__2 ;
    public final void rule__VarsInitializationCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10602:1: ( rule__VarsInitializationCS__Group__1__Impl rule__VarsInitializationCS__Group__2 )
            // InternalImperativeOCL.g:10603:2: rule__VarsInitializationCS__Group__1__Impl rule__VarsInitializationCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__VarsInitializationCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__1"


    // $ANTLR start "rule__VarsInitializationCS__Group__1__Impl"
    // InternalImperativeOCL.g:10610:1: rule__VarsInitializationCS__Group__1__Impl : ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 ) ) ;
    public final void rule__VarsInitializationCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10614:1: ( ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 ) ) )
            // InternalImperativeOCL.g:10615:1: ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 ) )
            {
            // InternalImperativeOCL.g:10615:1: ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 ) )
            // InternalImperativeOCL.g:10616:1: ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsAssignment_1());
            }
            // InternalImperativeOCL.g:10617:1: ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 )
            // InternalImperativeOCL.g:10617:2: rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__1__Impl"


    // $ANTLR start "rule__VarsInitializationCS__Group__2"
    // InternalImperativeOCL.g:10627:1: rule__VarsInitializationCS__Group__2 : rule__VarsInitializationCS__Group__2__Impl ;
    public final void rule__VarsInitializationCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10631:1: ( rule__VarsInitializationCS__Group__2__Impl )
            // InternalImperativeOCL.g:10632:2: rule__VarsInitializationCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__2"


    // $ANTLR start "rule__VarsInitializationCS__Group__2__Impl"
    // InternalImperativeOCL.g:10638:1: rule__VarsInitializationCS__Group__2__Impl : ( ( rule__VarsInitializationCS__Group_2__0 )* ) ;
    public final void rule__VarsInitializationCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10642:1: ( ( ( rule__VarsInitializationCS__Group_2__0 )* ) )
            // InternalImperativeOCL.g:10643:1: ( ( rule__VarsInitializationCS__Group_2__0 )* )
            {
            // InternalImperativeOCL.g:10643:1: ( ( rule__VarsInitializationCS__Group_2__0 )* )
            // InternalImperativeOCL.g:10644:1: ( rule__VarsInitializationCS__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:10645:1: ( rule__VarsInitializationCS__Group_2__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==67) ) {
                    int LA78_2 = input.LA(2);

                    if ( (synpred143_InternalImperativeOCL()) ) {
                        alt78=1;
                    }


                }


                switch (alt78) {
            	case 1 :
            	    // InternalImperativeOCL.g:10645:2: rule__VarsInitializationCS__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__VarsInitializationCS__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group__2__Impl"


    // $ANTLR start "rule__VarsInitializationCS__Group_2__0"
    // InternalImperativeOCL.g:10661:1: rule__VarsInitializationCS__Group_2__0 : rule__VarsInitializationCS__Group_2__0__Impl rule__VarsInitializationCS__Group_2__1 ;
    public final void rule__VarsInitializationCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10665:1: ( rule__VarsInitializationCS__Group_2__0__Impl rule__VarsInitializationCS__Group_2__1 )
            // InternalImperativeOCL.g:10666:2: rule__VarsInitializationCS__Group_2__0__Impl rule__VarsInitializationCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__VarsInitializationCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group_2__0"


    // $ANTLR start "rule__VarsInitializationCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:10673:1: rule__VarsInitializationCS__Group_2__0__Impl : ( ',' ) ;
    public final void rule__VarsInitializationCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10677:1: ( ( ',' ) )
            // InternalImperativeOCL.g:10678:1: ( ',' )
            {
            // InternalImperativeOCL.g:10678:1: ( ',' )
            // InternalImperativeOCL.g:10679:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getCommaKeyword_2_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getCommaKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group_2__0__Impl"


    // $ANTLR start "rule__VarsInitializationCS__Group_2__1"
    // InternalImperativeOCL.g:10692:1: rule__VarsInitializationCS__Group_2__1 : rule__VarsInitializationCS__Group_2__1__Impl ;
    public final void rule__VarsInitializationCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10696:1: ( rule__VarsInitializationCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:10697:2: rule__VarsInitializationCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group_2__1"


    // $ANTLR start "rule__VarsInitializationCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:10703:1: rule__VarsInitializationCS__Group_2__1__Impl : ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 ) ) ;
    public final void rule__VarsInitializationCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10707:1: ( ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:10708:1: ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:10708:1: ( ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 ) )
            // InternalImperativeOCL.g:10709:1: ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsAssignment_2_1());
            }
            // InternalImperativeOCL.g:10710:1: ( rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 )
            // InternalImperativeOCL.g:10710:2: rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__Group_2__1__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__0"
    // InternalImperativeOCL.g:10724:1: rule__WhileExpCS__Group__0 : rule__WhileExpCS__Group__0__Impl rule__WhileExpCS__Group__1 ;
    public final void rule__WhileExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10728:1: ( rule__WhileExpCS__Group__0__Impl rule__WhileExpCS__Group__1 )
            // InternalImperativeOCL.g:10729:2: rule__WhileExpCS__Group__0__Impl rule__WhileExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__WhileExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__0"


    // $ANTLR start "rule__WhileExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:10736:1: rule__WhileExpCS__Group__0__Impl : ( 'while' ) ;
    public final void rule__WhileExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10740:1: ( ( 'while' ) )
            // InternalImperativeOCL.g:10741:1: ( 'while' )
            {
            // InternalImperativeOCL.g:10741:1: ( 'while' )
            // InternalImperativeOCL.g:10742:1: 'while'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getWhileKeyword_0());
            }
            match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getWhileKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__0__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__1"
    // InternalImperativeOCL.g:10755:1: rule__WhileExpCS__Group__1 : rule__WhileExpCS__Group__1__Impl rule__WhileExpCS__Group__2 ;
    public final void rule__WhileExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10759:1: ( rule__WhileExpCS__Group__1__Impl rule__WhileExpCS__Group__2 )
            // InternalImperativeOCL.g:10760:2: rule__WhileExpCS__Group__1__Impl rule__WhileExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__WhileExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__1"


    // $ANTLR start "rule__WhileExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:10767:1: rule__WhileExpCS__Group__1__Impl : ( '(' ) ;
    public final void rule__WhileExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10771:1: ( ( '(' ) )
            // InternalImperativeOCL.g:10772:1: ( '(' )
            {
            // InternalImperativeOCL.g:10772:1: ( '(' )
            // InternalImperativeOCL.g:10773:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__1__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__2"
    // InternalImperativeOCL.g:10786:1: rule__WhileExpCS__Group__2 : rule__WhileExpCS__Group__2__Impl rule__WhileExpCS__Group__3 ;
    public final void rule__WhileExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10790:1: ( rule__WhileExpCS__Group__2__Impl rule__WhileExpCS__Group__3 )
            // InternalImperativeOCL.g:10791:2: rule__WhileExpCS__Group__2__Impl rule__WhileExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__WhileExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__2"


    // $ANTLR start "rule__WhileExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:10798:1: rule__WhileExpCS__Group__2__Impl : ( ( rule__WhileExpCS__Group_2__0 )? ) ;
    public final void rule__WhileExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10802:1: ( ( ( rule__WhileExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:10803:1: ( ( rule__WhileExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:10803:1: ( ( rule__WhileExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:10804:1: ( rule__WhileExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:10805:1: ( rule__WhileExpCS__Group_2__0 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalImperativeOCL.g:10805:2: rule__WhileExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WhileExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__2__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__3"
    // InternalImperativeOCL.g:10815:1: rule__WhileExpCS__Group__3 : rule__WhileExpCS__Group__3__Impl rule__WhileExpCS__Group__4 ;
    public final void rule__WhileExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10819:1: ( rule__WhileExpCS__Group__3__Impl rule__WhileExpCS__Group__4 )
            // InternalImperativeOCL.g:10820:2: rule__WhileExpCS__Group__3__Impl rule__WhileExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__WhileExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__3"


    // $ANTLR start "rule__WhileExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:10827:1: rule__WhileExpCS__Group__3__Impl : ( ( rule__WhileExpCS__OwnedConditionAssignment_3 ) ) ;
    public final void rule__WhileExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10831:1: ( ( ( rule__WhileExpCS__OwnedConditionAssignment_3 ) ) )
            // InternalImperativeOCL.g:10832:1: ( ( rule__WhileExpCS__OwnedConditionAssignment_3 ) )
            {
            // InternalImperativeOCL.g:10832:1: ( ( rule__WhileExpCS__OwnedConditionAssignment_3 ) )
            // InternalImperativeOCL.g:10833:1: ( rule__WhileExpCS__OwnedConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedConditionAssignment_3());
            }
            // InternalImperativeOCL.g:10834:1: ( rule__WhileExpCS__OwnedConditionAssignment_3 )
            // InternalImperativeOCL.g:10834:2: rule__WhileExpCS__OwnedConditionAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__OwnedConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedConditionAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__3__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__4"
    // InternalImperativeOCL.g:10844:1: rule__WhileExpCS__Group__4 : rule__WhileExpCS__Group__4__Impl rule__WhileExpCS__Group__5 ;
    public final void rule__WhileExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10848:1: ( rule__WhileExpCS__Group__4__Impl rule__WhileExpCS__Group__5 )
            // InternalImperativeOCL.g:10849:2: rule__WhileExpCS__Group__4__Impl rule__WhileExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__WhileExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__4"


    // $ANTLR start "rule__WhileExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:10856:1: rule__WhileExpCS__Group__4__Impl : ( ')' ) ;
    public final void rule__WhileExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10860:1: ( ( ')' ) )
            // InternalImperativeOCL.g:10861:1: ( ')' )
            {
            // InternalImperativeOCL.g:10861:1: ( ')' )
            // InternalImperativeOCL.g:10862:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getRightParenthesisKeyword_4());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getRightParenthesisKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__4__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__5"
    // InternalImperativeOCL.g:10875:1: rule__WhileExpCS__Group__5 : rule__WhileExpCS__Group__5__Impl rule__WhileExpCS__Group__6 ;
    public final void rule__WhileExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10879:1: ( rule__WhileExpCS__Group__5__Impl rule__WhileExpCS__Group__6 )
            // InternalImperativeOCL.g:10880:2: rule__WhileExpCS__Group__5__Impl rule__WhileExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__WhileExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__5"


    // $ANTLR start "rule__WhileExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:10887:1: rule__WhileExpCS__Group__5__Impl : ( '{' ) ;
    public final void rule__WhileExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10891:1: ( ( '{' ) )
            // InternalImperativeOCL.g:10892:1: ( '{' )
            {
            // InternalImperativeOCL.g:10892:1: ( '{' )
            // InternalImperativeOCL.g:10893:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getLeftCurlyBracketKeyword_5());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getLeftCurlyBracketKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__5__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__6"
    // InternalImperativeOCL.g:10906:1: rule__WhileExpCS__Group__6 : rule__WhileExpCS__Group__6__Impl rule__WhileExpCS__Group__7 ;
    public final void rule__WhileExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10910:1: ( rule__WhileExpCS__Group__6__Impl rule__WhileExpCS__Group__7 )
            // InternalImperativeOCL.g:10911:2: rule__WhileExpCS__Group__6__Impl rule__WhileExpCS__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__WhileExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__6"


    // $ANTLR start "rule__WhileExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:10918:1: rule__WhileExpCS__Group__6__Impl : ( ( rule__WhileExpCS__OwnedExpsAssignment_6 )* ) ;
    public final void rule__WhileExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10922:1: ( ( ( rule__WhileExpCS__OwnedExpsAssignment_6 )* ) )
            // InternalImperativeOCL.g:10923:1: ( ( rule__WhileExpCS__OwnedExpsAssignment_6 )* )
            {
            // InternalImperativeOCL.g:10923:1: ( ( rule__WhileExpCS__OwnedExpsAssignment_6 )* )
            // InternalImperativeOCL.g:10924:1: ( rule__WhileExpCS__OwnedExpsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedExpsAssignment_6());
            }
            // InternalImperativeOCL.g:10925:1: ( rule__WhileExpCS__OwnedExpsAssignment_6 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( ((LA80_0>=RULE_INT && LA80_0<=RULE_ESCAPED_ID)||(LA80_0>=16 && LA80_0<=23)||(LA80_0>=40 && LA80_0<=54)||(LA80_0>=63 && LA80_0<=64)||LA80_0==66||LA80_0==68||LA80_0==71||LA80_0==73||(LA80_0>=76 && LA80_0<=78)||LA80_0==81||LA80_0==83||(LA80_0>=85 && LA80_0<=86)||LA80_0==90||(LA80_0>=92 && LA80_0<=94)||LA80_0==97||(LA80_0>=99 && LA80_0<=100)||LA80_0==105||(LA80_0>=108 && LA80_0<=109)||(LA80_0>=113 && LA80_0<=116)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalImperativeOCL.g:10925:2: rule__WhileExpCS__OwnedExpsAssignment_6
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__WhileExpCS__OwnedExpsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedExpsAssignment_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__6__Impl"


    // $ANTLR start "rule__WhileExpCS__Group__7"
    // InternalImperativeOCL.g:10935:1: rule__WhileExpCS__Group__7 : rule__WhileExpCS__Group__7__Impl ;
    public final void rule__WhileExpCS__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10939:1: ( rule__WhileExpCS__Group__7__Impl )
            // InternalImperativeOCL.g:10940:2: rule__WhileExpCS__Group__7__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__7"


    // $ANTLR start "rule__WhileExpCS__Group__7__Impl"
    // InternalImperativeOCL.g:10946:1: rule__WhileExpCS__Group__7__Impl : ( '}' ) ;
    public final void rule__WhileExpCS__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10950:1: ( ( '}' ) )
            // InternalImperativeOCL.g:10951:1: ( '}' )
            {
            // InternalImperativeOCL.g:10951:1: ( '}' )
            // InternalImperativeOCL.g:10952:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getRightCurlyBracketKeyword_7());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getRightCurlyBracketKeyword_7());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group__7__Impl"


    // $ANTLR start "rule__WhileExpCS__Group_2__0"
    // InternalImperativeOCL.g:10981:1: rule__WhileExpCS__Group_2__0 : rule__WhileExpCS__Group_2__0__Impl rule__WhileExpCS__Group_2__1 ;
    public final void rule__WhileExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10985:1: ( rule__WhileExpCS__Group_2__0__Impl rule__WhileExpCS__Group_2__1 )
            // InternalImperativeOCL.g:10986:2: rule__WhileExpCS__Group_2__0__Impl rule__WhileExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__WhileExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group_2__0"


    // $ANTLR start "rule__WhileExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:10993:1: rule__WhileExpCS__Group_2__0__Impl : ( ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 ) ) ;
    public final void rule__WhileExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:10997:1: ( ( ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:10998:1: ( ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:10998:1: ( ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 ) )
            // InternalImperativeOCL.g:10999:1: ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedResultVarAssignment_2_0());
            }
            // InternalImperativeOCL.g:11000:1: ( rule__WhileExpCS__OwnedResultVarAssignment_2_0 )
            // InternalImperativeOCL.g:11000:2: rule__WhileExpCS__OwnedResultVarAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__OwnedResultVarAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedResultVarAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__WhileExpCS__Group_2__1"
    // InternalImperativeOCL.g:11010:1: rule__WhileExpCS__Group_2__1 : rule__WhileExpCS__Group_2__1__Impl ;
    public final void rule__WhileExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11014:1: ( rule__WhileExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:11015:2: rule__WhileExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WhileExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group_2__1"


    // $ANTLR start "rule__WhileExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:11021:1: rule__WhileExpCS__Group_2__1__Impl : ( ';' ) ;
    public final void rule__WhileExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11025:1: ( ( ';' ) )
            // InternalImperativeOCL.g:11026:1: ( ';' )
            {
            // InternalImperativeOCL.g:11026:1: ( ';' )
            // InternalImperativeOCL.g:11027:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getSemicolonKeyword_2_1());
            }
            match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getSemicolonKeyword_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__URIFirstPathElementCS__Group_1__0"
    // InternalImperativeOCL.g:11046:1: rule__URIFirstPathElementCS__Group_1__0 : rule__URIFirstPathElementCS__Group_1__0__Impl rule__URIFirstPathElementCS__Group_1__1 ;
    public final void rule__URIFirstPathElementCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11050:1: ( rule__URIFirstPathElementCS__Group_1__0__Impl rule__URIFirstPathElementCS__Group_1__1 )
            // InternalImperativeOCL.g:11051:2: rule__URIFirstPathElementCS__Group_1__0__Impl rule__URIFirstPathElementCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__URIFirstPathElementCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__URIFirstPathElementCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__Group_1__0"


    // $ANTLR start "rule__URIFirstPathElementCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:11058:1: rule__URIFirstPathElementCS__Group_1__0__Impl : ( () ) ;
    public final void rule__URIFirstPathElementCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11062:1: ( ( () ) )
            // InternalImperativeOCL.g:11063:1: ( () )
            {
            // InternalImperativeOCL.g:11063:1: ( () )
            // InternalImperativeOCL.g:11064:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0());
            }
            // InternalImperativeOCL.g:11065:1: ()
            // InternalImperativeOCL.g:11067:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__Group_1__0__Impl"


    // $ANTLR start "rule__URIFirstPathElementCS__Group_1__1"
    // InternalImperativeOCL.g:11077:1: rule__URIFirstPathElementCS__Group_1__1 : rule__URIFirstPathElementCS__Group_1__1__Impl ;
    public final void rule__URIFirstPathElementCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11081:1: ( rule__URIFirstPathElementCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:11082:2: rule__URIFirstPathElementCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__URIFirstPathElementCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__Group_1__1"


    // $ANTLR start "rule__URIFirstPathElementCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:11088:1: rule__URIFirstPathElementCS__Group_1__1__Impl : ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 ) ) ;
    public final void rule__URIFirstPathElementCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11092:1: ( ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:11093:1: ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:11093:1: ( ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 ) )
            // InternalImperativeOCL.g:11094:1: ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_1_1());
            }
            // InternalImperativeOCL.g:11095:1: ( rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 )
            // InternalImperativeOCL.g:11095:2: rule__URIFirstPathElementCS__ReferredElementAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__URIFirstPathElementCS__ReferredElementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__Group_1__1__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group__0"
    // InternalImperativeOCL.g:11109:1: rule__CollectionTypeCS__Group__0 : rule__CollectionTypeCS__Group__0__Impl rule__CollectionTypeCS__Group__1 ;
    public final void rule__CollectionTypeCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11113:1: ( rule__CollectionTypeCS__Group__0__Impl rule__CollectionTypeCS__Group__1 )
            // InternalImperativeOCL.g:11114:2: rule__CollectionTypeCS__Group__0__Impl rule__CollectionTypeCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__CollectionTypeCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group__0"


    // $ANTLR start "rule__CollectionTypeCS__Group__0__Impl"
    // InternalImperativeOCL.g:11121:1: rule__CollectionTypeCS__Group__0__Impl : ( ( rule__CollectionTypeCS__NameAssignment_0 ) ) ;
    public final void rule__CollectionTypeCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11125:1: ( ( ( rule__CollectionTypeCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:11126:1: ( ( rule__CollectionTypeCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:11126:1: ( ( rule__CollectionTypeCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:11127:1: ( rule__CollectionTypeCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:11128:1: ( rule__CollectionTypeCS__NameAssignment_0 )
            // InternalImperativeOCL.g:11128:2: rule__CollectionTypeCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group__0__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group__1"
    // InternalImperativeOCL.g:11138:1: rule__CollectionTypeCS__Group__1 : rule__CollectionTypeCS__Group__1__Impl ;
    public final void rule__CollectionTypeCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11142:1: ( rule__CollectionTypeCS__Group__1__Impl )
            // InternalImperativeOCL.g:11143:2: rule__CollectionTypeCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group__1"


    // $ANTLR start "rule__CollectionTypeCS__Group__1__Impl"
    // InternalImperativeOCL.g:11149:1: rule__CollectionTypeCS__Group__1__Impl : ( ( rule__CollectionTypeCS__Group_1__0 )? ) ;
    public final void rule__CollectionTypeCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11153:1: ( ( ( rule__CollectionTypeCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:11154:1: ( ( rule__CollectionTypeCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:11154:1: ( ( rule__CollectionTypeCS__Group_1__0 )? )
            // InternalImperativeOCL.g:11155:1: ( rule__CollectionTypeCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:11156:1: ( rule__CollectionTypeCS__Group_1__0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalImperativeOCL.g:11156:2: rule__CollectionTypeCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionTypeCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group__1__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__0"
    // InternalImperativeOCL.g:11170:1: rule__CollectionTypeCS__Group_1__0 : rule__CollectionTypeCS__Group_1__0__Impl rule__CollectionTypeCS__Group_1__1 ;
    public final void rule__CollectionTypeCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11174:1: ( rule__CollectionTypeCS__Group_1__0__Impl rule__CollectionTypeCS__Group_1__1 )
            // InternalImperativeOCL.g:11175:2: rule__CollectionTypeCS__Group_1__0__Impl rule__CollectionTypeCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CollectionTypeCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__0"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:11182:1: rule__CollectionTypeCS__Group_1__0__Impl : ( '(' ) ;
    public final void rule__CollectionTypeCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11186:1: ( ( '(' ) )
            // InternalImperativeOCL.g:11187:1: ( '(' )
            {
            // InternalImperativeOCL.g:11187:1: ( '(' )
            // InternalImperativeOCL.g:11188:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__0__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__1"
    // InternalImperativeOCL.g:11201:1: rule__CollectionTypeCS__Group_1__1 : rule__CollectionTypeCS__Group_1__1__Impl rule__CollectionTypeCS__Group_1__2 ;
    public final void rule__CollectionTypeCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11205:1: ( rule__CollectionTypeCS__Group_1__1__Impl rule__CollectionTypeCS__Group_1__2 )
            // InternalImperativeOCL.g:11206:2: rule__CollectionTypeCS__Group_1__1__Impl rule__CollectionTypeCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__CollectionTypeCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__1"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:11213:1: rule__CollectionTypeCS__Group_1__1__Impl : ( ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 ) ) ;
    public final void rule__CollectionTypeCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11217:1: ( ( ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:11218:1: ( ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:11218:1: ( ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:11219:1: ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:11220:1: ( rule__CollectionTypeCS__OwnedTypeAssignment_1_1 )
            // InternalImperativeOCL.g:11220:2: rule__CollectionTypeCS__OwnedTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__OwnedTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__1__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__2"
    // InternalImperativeOCL.g:11230:1: rule__CollectionTypeCS__Group_1__2 : rule__CollectionTypeCS__Group_1__2__Impl rule__CollectionTypeCS__Group_1__3 ;
    public final void rule__CollectionTypeCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11234:1: ( rule__CollectionTypeCS__Group_1__2__Impl rule__CollectionTypeCS__Group_1__3 )
            // InternalImperativeOCL.g:11235:2: rule__CollectionTypeCS__Group_1__2__Impl rule__CollectionTypeCS__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__CollectionTypeCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__2"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:11242:1: rule__CollectionTypeCS__Group_1__2__Impl : ( ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )? ) ;
    public final void rule__CollectionTypeCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11246:1: ( ( ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )? ) )
            // InternalImperativeOCL.g:11247:1: ( ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )? )
            {
            // InternalImperativeOCL.g:11247:1: ( ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )? )
            // InternalImperativeOCL.g:11248:1: ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityAssignment_1_2());
            }
            // InternalImperativeOCL.g:11249:1: ( rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==102) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalImperativeOCL.g:11249:2: rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityAssignment_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__2__Impl"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__3"
    // InternalImperativeOCL.g:11259:1: rule__CollectionTypeCS__Group_1__3 : rule__CollectionTypeCS__Group_1__3__Impl ;
    public final void rule__CollectionTypeCS__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11263:1: ( rule__CollectionTypeCS__Group_1__3__Impl )
            // InternalImperativeOCL.g:11264:2: rule__CollectionTypeCS__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionTypeCS__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__3"


    // $ANTLR start "rule__CollectionTypeCS__Group_1__3__Impl"
    // InternalImperativeOCL.g:11270:1: rule__CollectionTypeCS__Group_1__3__Impl : ( ')' ) ;
    public final void rule__CollectionTypeCS__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11274:1: ( ( ')' ) )
            // InternalImperativeOCL.g:11275:1: ( ')' )
            {
            // InternalImperativeOCL.g:11275:1: ( ')' )
            // InternalImperativeOCL.g:11276:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__Group_1__3__Impl"


    // $ANTLR start "rule__MapTypeCS__Group__0"
    // InternalImperativeOCL.g:11297:1: rule__MapTypeCS__Group__0 : rule__MapTypeCS__Group__0__Impl rule__MapTypeCS__Group__1 ;
    public final void rule__MapTypeCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11301:1: ( rule__MapTypeCS__Group__0__Impl rule__MapTypeCS__Group__1 )
            // InternalImperativeOCL.g:11302:2: rule__MapTypeCS__Group__0__Impl rule__MapTypeCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__MapTypeCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group__0"


    // $ANTLR start "rule__MapTypeCS__Group__0__Impl"
    // InternalImperativeOCL.g:11309:1: rule__MapTypeCS__Group__0__Impl : ( ( rule__MapTypeCS__NameAssignment_0 ) ) ;
    public final void rule__MapTypeCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11313:1: ( ( ( rule__MapTypeCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:11314:1: ( ( rule__MapTypeCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:11314:1: ( ( rule__MapTypeCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:11315:1: ( rule__MapTypeCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:11316:1: ( rule__MapTypeCS__NameAssignment_0 )
            // InternalImperativeOCL.g:11316:2: rule__MapTypeCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group__0__Impl"


    // $ANTLR start "rule__MapTypeCS__Group__1"
    // InternalImperativeOCL.g:11326:1: rule__MapTypeCS__Group__1 : rule__MapTypeCS__Group__1__Impl ;
    public final void rule__MapTypeCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11330:1: ( rule__MapTypeCS__Group__1__Impl )
            // InternalImperativeOCL.g:11331:2: rule__MapTypeCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group__1"


    // $ANTLR start "rule__MapTypeCS__Group__1__Impl"
    // InternalImperativeOCL.g:11337:1: rule__MapTypeCS__Group__1__Impl : ( ( rule__MapTypeCS__Group_1__0 )? ) ;
    public final void rule__MapTypeCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11341:1: ( ( ( rule__MapTypeCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:11342:1: ( ( rule__MapTypeCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:11342:1: ( ( rule__MapTypeCS__Group_1__0 )? )
            // InternalImperativeOCL.g:11343:1: ( rule__MapTypeCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:11344:1: ( rule__MapTypeCS__Group_1__0 )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalImperativeOCL.g:11344:2: rule__MapTypeCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MapTypeCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group__1__Impl"


    // $ANTLR start "rule__MapTypeCS__Group_1__0"
    // InternalImperativeOCL.g:11358:1: rule__MapTypeCS__Group_1__0 : rule__MapTypeCS__Group_1__0__Impl rule__MapTypeCS__Group_1__1 ;
    public final void rule__MapTypeCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11362:1: ( rule__MapTypeCS__Group_1__0__Impl rule__MapTypeCS__Group_1__1 )
            // InternalImperativeOCL.g:11363:2: rule__MapTypeCS__Group_1__0__Impl rule__MapTypeCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__MapTypeCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__0"


    // $ANTLR start "rule__MapTypeCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:11370:1: rule__MapTypeCS__Group_1__0__Impl : ( '(' ) ;
    public final void rule__MapTypeCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11374:1: ( ( '(' ) )
            // InternalImperativeOCL.g:11375:1: ( '(' )
            {
            // InternalImperativeOCL.g:11375:1: ( '(' )
            // InternalImperativeOCL.g:11376:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__0__Impl"


    // $ANTLR start "rule__MapTypeCS__Group_1__1"
    // InternalImperativeOCL.g:11389:1: rule__MapTypeCS__Group_1__1 : rule__MapTypeCS__Group_1__1__Impl rule__MapTypeCS__Group_1__2 ;
    public final void rule__MapTypeCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11393:1: ( rule__MapTypeCS__Group_1__1__Impl rule__MapTypeCS__Group_1__2 )
            // InternalImperativeOCL.g:11394:2: rule__MapTypeCS__Group_1__1__Impl rule__MapTypeCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__MapTypeCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__1"


    // $ANTLR start "rule__MapTypeCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:11401:1: rule__MapTypeCS__Group_1__1__Impl : ( ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 ) ) ;
    public final void rule__MapTypeCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11405:1: ( ( ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:11406:1: ( ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:11406:1: ( ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:11407:1: ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:11408:1: ( rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 )
            // InternalImperativeOCL.g:11408:2: rule__MapTypeCS__OwnedKeyTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__OwnedKeyTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__1__Impl"


    // $ANTLR start "rule__MapTypeCS__Group_1__2"
    // InternalImperativeOCL.g:11418:1: rule__MapTypeCS__Group_1__2 : rule__MapTypeCS__Group_1__2__Impl rule__MapTypeCS__Group_1__3 ;
    public final void rule__MapTypeCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11422:1: ( rule__MapTypeCS__Group_1__2__Impl rule__MapTypeCS__Group_1__3 )
            // InternalImperativeOCL.g:11423:2: rule__MapTypeCS__Group_1__2__Impl rule__MapTypeCS__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__MapTypeCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__2"


    // $ANTLR start "rule__MapTypeCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:11430:1: rule__MapTypeCS__Group_1__2__Impl : ( ',' ) ;
    public final void rule__MapTypeCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11434:1: ( ( ',' ) )
            // InternalImperativeOCL.g:11435:1: ( ',' )
            {
            // InternalImperativeOCL.g:11435:1: ( ',' )
            // InternalImperativeOCL.g:11436:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__2__Impl"


    // $ANTLR start "rule__MapTypeCS__Group_1__3"
    // InternalImperativeOCL.g:11449:1: rule__MapTypeCS__Group_1__3 : rule__MapTypeCS__Group_1__3__Impl rule__MapTypeCS__Group_1__4 ;
    public final void rule__MapTypeCS__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11453:1: ( rule__MapTypeCS__Group_1__3__Impl rule__MapTypeCS__Group_1__4 )
            // InternalImperativeOCL.g:11454:2: rule__MapTypeCS__Group_1__3__Impl rule__MapTypeCS__Group_1__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__MapTypeCS__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__3"


    // $ANTLR start "rule__MapTypeCS__Group_1__3__Impl"
    // InternalImperativeOCL.g:11461:1: rule__MapTypeCS__Group_1__3__Impl : ( ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 ) ) ;
    public final void rule__MapTypeCS__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11465:1: ( ( ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 ) ) )
            // InternalImperativeOCL.g:11466:1: ( ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 ) )
            {
            // InternalImperativeOCL.g:11466:1: ( ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 ) )
            // InternalImperativeOCL.g:11467:1: ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeAssignment_1_3());
            }
            // InternalImperativeOCL.g:11468:1: ( rule__MapTypeCS__OwnedValueTypeAssignment_1_3 )
            // InternalImperativeOCL.g:11468:2: rule__MapTypeCS__OwnedValueTypeAssignment_1_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__OwnedValueTypeAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeAssignment_1_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__3__Impl"


    // $ANTLR start "rule__MapTypeCS__Group_1__4"
    // InternalImperativeOCL.g:11478:1: rule__MapTypeCS__Group_1__4 : rule__MapTypeCS__Group_1__4__Impl ;
    public final void rule__MapTypeCS__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11482:1: ( rule__MapTypeCS__Group_1__4__Impl )
            // InternalImperativeOCL.g:11483:2: rule__MapTypeCS__Group_1__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapTypeCS__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__4"


    // $ANTLR start "rule__MapTypeCS__Group_1__4__Impl"
    // InternalImperativeOCL.g:11489:1: rule__MapTypeCS__Group_1__4__Impl : ( ')' ) ;
    public final void rule__MapTypeCS__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11493:1: ( ( ')' ) )
            // InternalImperativeOCL.g:11494:1: ( ')' )
            {
            // InternalImperativeOCL.g:11494:1: ( ')' )
            // InternalImperativeOCL.g:11495:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__Group_1__4__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group__0"
    // InternalImperativeOCL.g:11518:1: rule__TupleTypeCS__Group__0 : rule__TupleTypeCS__Group__0__Impl rule__TupleTypeCS__Group__1 ;
    public final void rule__TupleTypeCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11522:1: ( rule__TupleTypeCS__Group__0__Impl rule__TupleTypeCS__Group__1 )
            // InternalImperativeOCL.g:11523:2: rule__TupleTypeCS__Group__0__Impl rule__TupleTypeCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__TupleTypeCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group__0"


    // $ANTLR start "rule__TupleTypeCS__Group__0__Impl"
    // InternalImperativeOCL.g:11530:1: rule__TupleTypeCS__Group__0__Impl : ( ( rule__TupleTypeCS__NameAssignment_0 ) ) ;
    public final void rule__TupleTypeCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11534:1: ( ( ( rule__TupleTypeCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:11535:1: ( ( rule__TupleTypeCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:11535:1: ( ( rule__TupleTypeCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:11536:1: ( rule__TupleTypeCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:11537:1: ( rule__TupleTypeCS__NameAssignment_0 )
            // InternalImperativeOCL.g:11537:2: rule__TupleTypeCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group__0__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group__1"
    // InternalImperativeOCL.g:11547:1: rule__TupleTypeCS__Group__1 : rule__TupleTypeCS__Group__1__Impl ;
    public final void rule__TupleTypeCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11551:1: ( rule__TupleTypeCS__Group__1__Impl )
            // InternalImperativeOCL.g:11552:2: rule__TupleTypeCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group__1"


    // $ANTLR start "rule__TupleTypeCS__Group__1__Impl"
    // InternalImperativeOCL.g:11558:1: rule__TupleTypeCS__Group__1__Impl : ( ( rule__TupleTypeCS__Group_1__0 )? ) ;
    public final void rule__TupleTypeCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11562:1: ( ( ( rule__TupleTypeCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:11563:1: ( ( rule__TupleTypeCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:11563:1: ( ( rule__TupleTypeCS__Group_1__0 )? )
            // InternalImperativeOCL.g:11564:1: ( rule__TupleTypeCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:11565:1: ( rule__TupleTypeCS__Group_1__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==64) ) {
                switch ( input.LA(2) ) {
                    case RULE_SIMPLE_ID:
                        {
                        int LA84_3 = input.LA(3);

                        if ( (LA84_3==75) ) {
                            alt84=1;
                        }
                        }
                        break;
                    case RULE_ESCAPED_ID:
                        {
                        int LA84_4 = input.LA(3);

                        if ( (LA84_4==75) ) {
                            alt84=1;
                        }
                        }
                        break;
                    case 65:
                        {
                        int LA84_5 = input.LA(3);

                        if ( (synpred149_InternalImperativeOCL()) ) {
                            alt84=1;
                        }
                        }
                        break;
                }

            }
            switch (alt84) {
                case 1 :
                    // InternalImperativeOCL.g:11565:2: rule__TupleTypeCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TupleTypeCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group__1__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1__0"
    // InternalImperativeOCL.g:11579:1: rule__TupleTypeCS__Group_1__0 : rule__TupleTypeCS__Group_1__0__Impl rule__TupleTypeCS__Group_1__1 ;
    public final void rule__TupleTypeCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11583:1: ( rule__TupleTypeCS__Group_1__0__Impl rule__TupleTypeCS__Group_1__1 )
            // InternalImperativeOCL.g:11584:2: rule__TupleTypeCS__Group_1__0__Impl rule__TupleTypeCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TupleTypeCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__0"


    // $ANTLR start "rule__TupleTypeCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:11591:1: rule__TupleTypeCS__Group_1__0__Impl : ( '(' ) ;
    public final void rule__TupleTypeCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11595:1: ( ( '(' ) )
            // InternalImperativeOCL.g:11596:1: ( '(' )
            {
            // InternalImperativeOCL.g:11596:1: ( '(' )
            // InternalImperativeOCL.g:11597:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__0__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1__1"
    // InternalImperativeOCL.g:11610:1: rule__TupleTypeCS__Group_1__1 : rule__TupleTypeCS__Group_1__1__Impl rule__TupleTypeCS__Group_1__2 ;
    public final void rule__TupleTypeCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11614:1: ( rule__TupleTypeCS__Group_1__1__Impl rule__TupleTypeCS__Group_1__2 )
            // InternalImperativeOCL.g:11615:2: rule__TupleTypeCS__Group_1__1__Impl rule__TupleTypeCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TupleTypeCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__1"


    // $ANTLR start "rule__TupleTypeCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:11622:1: rule__TupleTypeCS__Group_1__1__Impl : ( ( rule__TupleTypeCS__Group_1_1__0 )? ) ;
    public final void rule__TupleTypeCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11626:1: ( ( ( rule__TupleTypeCS__Group_1_1__0 )? ) )
            // InternalImperativeOCL.g:11627:1: ( ( rule__TupleTypeCS__Group_1_1__0 )? )
            {
            // InternalImperativeOCL.g:11627:1: ( ( rule__TupleTypeCS__Group_1_1__0 )? )
            // InternalImperativeOCL.g:11628:1: ( rule__TupleTypeCS__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getGroup_1_1());
            }
            // InternalImperativeOCL.g:11629:1: ( rule__TupleTypeCS__Group_1_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=RULE_SIMPLE_ID && LA85_0<=RULE_ESCAPED_ID)) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalImperativeOCL.g:11629:2: rule__TupleTypeCS__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TupleTypeCS__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getGroup_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__1__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1__2"
    // InternalImperativeOCL.g:11639:1: rule__TupleTypeCS__Group_1__2 : rule__TupleTypeCS__Group_1__2__Impl ;
    public final void rule__TupleTypeCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11643:1: ( rule__TupleTypeCS__Group_1__2__Impl )
            // InternalImperativeOCL.g:11644:2: rule__TupleTypeCS__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__2"


    // $ANTLR start "rule__TupleTypeCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:11650:1: rule__TupleTypeCS__Group_1__2__Impl : ( ')' ) ;
    public final void rule__TupleTypeCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11654:1: ( ( ')' ) )
            // InternalImperativeOCL.g:11655:1: ( ')' )
            {
            // InternalImperativeOCL.g:11655:1: ( ')' )
            // InternalImperativeOCL.g:11656:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1__2__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1__0"
    // InternalImperativeOCL.g:11675:1: rule__TupleTypeCS__Group_1_1__0 : rule__TupleTypeCS__Group_1_1__0__Impl rule__TupleTypeCS__Group_1_1__1 ;
    public final void rule__TupleTypeCS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11679:1: ( rule__TupleTypeCS__Group_1_1__0__Impl rule__TupleTypeCS__Group_1_1__1 )
            // InternalImperativeOCL.g:11680:2: rule__TupleTypeCS__Group_1_1__0__Impl rule__TupleTypeCS__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__TupleTypeCS__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1__0"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1__0__Impl"
    // InternalImperativeOCL.g:11687:1: rule__TupleTypeCS__Group_1_1__0__Impl : ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 ) ) ;
    public final void rule__TupleTypeCS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11691:1: ( ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 ) ) )
            // InternalImperativeOCL.g:11692:1: ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 ) )
            {
            // InternalImperativeOCL.g:11692:1: ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 ) )
            // InternalImperativeOCL.g:11693:1: ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0());
            }
            // InternalImperativeOCL.g:11694:1: ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 )
            // InternalImperativeOCL.g:11694:2: rule__TupleTypeCS__OwnedPartsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__OwnedPartsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1__0__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1__1"
    // InternalImperativeOCL.g:11704:1: rule__TupleTypeCS__Group_1_1__1 : rule__TupleTypeCS__Group_1_1__1__Impl ;
    public final void rule__TupleTypeCS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11708:1: ( rule__TupleTypeCS__Group_1_1__1__Impl )
            // InternalImperativeOCL.g:11709:2: rule__TupleTypeCS__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1__1"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1__1__Impl"
    // InternalImperativeOCL.g:11715:1: rule__TupleTypeCS__Group_1_1__1__Impl : ( ( rule__TupleTypeCS__Group_1_1_1__0 )* ) ;
    public final void rule__TupleTypeCS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11719:1: ( ( ( rule__TupleTypeCS__Group_1_1_1__0 )* ) )
            // InternalImperativeOCL.g:11720:1: ( ( rule__TupleTypeCS__Group_1_1_1__0 )* )
            {
            // InternalImperativeOCL.g:11720:1: ( ( rule__TupleTypeCS__Group_1_1_1__0 )* )
            // InternalImperativeOCL.g:11721:1: ( rule__TupleTypeCS__Group_1_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1());
            }
            // InternalImperativeOCL.g:11722:1: ( rule__TupleTypeCS__Group_1_1_1__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==67) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalImperativeOCL.g:11722:2: rule__TupleTypeCS__Group_1_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__TupleTypeCS__Group_1_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1__1__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1_1__0"
    // InternalImperativeOCL.g:11736:1: rule__TupleTypeCS__Group_1_1_1__0 : rule__TupleTypeCS__Group_1_1_1__0__Impl rule__TupleTypeCS__Group_1_1_1__1 ;
    public final void rule__TupleTypeCS__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11740:1: ( rule__TupleTypeCS__Group_1_1_1__0__Impl rule__TupleTypeCS__Group_1_1_1__1 )
            // InternalImperativeOCL.g:11741:2: rule__TupleTypeCS__Group_1_1_1__0__Impl rule__TupleTypeCS__Group_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TupleTypeCS__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1_1__0"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1_1__0__Impl"
    // InternalImperativeOCL.g:11748:1: rule__TupleTypeCS__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__TupleTypeCS__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11752:1: ( ( ',' ) )
            // InternalImperativeOCL.g:11753:1: ( ',' )
            {
            // InternalImperativeOCL.g:11753:1: ( ',' )
            // InternalImperativeOCL.g:11754:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1_1__1"
    // InternalImperativeOCL.g:11767:1: rule__TupleTypeCS__Group_1_1_1__1 : rule__TupleTypeCS__Group_1_1_1__1__Impl ;
    public final void rule__TupleTypeCS__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11771:1: ( rule__TupleTypeCS__Group_1_1_1__1__Impl )
            // InternalImperativeOCL.g:11772:2: rule__TupleTypeCS__Group_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1_1__1"


    // $ANTLR start "rule__TupleTypeCS__Group_1_1_1__1__Impl"
    // InternalImperativeOCL.g:11778:1: rule__TupleTypeCS__Group_1_1_1__1__Impl : ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 ) ) ;
    public final void rule__TupleTypeCS__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11782:1: ( ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 ) ) )
            // InternalImperativeOCL.g:11783:1: ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 ) )
            {
            // InternalImperativeOCL.g:11783:1: ( ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 ) )
            // InternalImperativeOCL.g:11784:1: ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1());
            }
            // InternalImperativeOCL.g:11785:1: ( rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 )
            // InternalImperativeOCL.g:11785:2: rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__TuplePartCS__Group__0"
    // InternalImperativeOCL.g:11799:1: rule__TuplePartCS__Group__0 : rule__TuplePartCS__Group__0__Impl rule__TuplePartCS__Group__1 ;
    public final void rule__TuplePartCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11803:1: ( rule__TuplePartCS__Group__0__Impl rule__TuplePartCS__Group__1 )
            // InternalImperativeOCL.g:11804:2: rule__TuplePartCS__Group__0__Impl rule__TuplePartCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__TuplePartCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__0"


    // $ANTLR start "rule__TuplePartCS__Group__0__Impl"
    // InternalImperativeOCL.g:11811:1: rule__TuplePartCS__Group__0__Impl : ( ( rule__TuplePartCS__NameAssignment_0 ) ) ;
    public final void rule__TuplePartCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11815:1: ( ( ( rule__TuplePartCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:11816:1: ( ( rule__TuplePartCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:11816:1: ( ( rule__TuplePartCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:11817:1: ( rule__TuplePartCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:11818:1: ( rule__TuplePartCS__NameAssignment_0 )
            // InternalImperativeOCL.g:11818:2: rule__TuplePartCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__0__Impl"


    // $ANTLR start "rule__TuplePartCS__Group__1"
    // InternalImperativeOCL.g:11828:1: rule__TuplePartCS__Group__1 : rule__TuplePartCS__Group__1__Impl rule__TuplePartCS__Group__2 ;
    public final void rule__TuplePartCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11832:1: ( rule__TuplePartCS__Group__1__Impl rule__TuplePartCS__Group__2 )
            // InternalImperativeOCL.g:11833:2: rule__TuplePartCS__Group__1__Impl rule__TuplePartCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__TuplePartCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__1"


    // $ANTLR start "rule__TuplePartCS__Group__1__Impl"
    // InternalImperativeOCL.g:11840:1: rule__TuplePartCS__Group__1__Impl : ( ':' ) ;
    public final void rule__TuplePartCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11844:1: ( ( ':' ) )
            // InternalImperativeOCL.g:11845:1: ( ':' )
            {
            // InternalImperativeOCL.g:11845:1: ( ':' )
            // InternalImperativeOCL.g:11846:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getColonKeyword_1());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getColonKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__1__Impl"


    // $ANTLR start "rule__TuplePartCS__Group__2"
    // InternalImperativeOCL.g:11859:1: rule__TuplePartCS__Group__2 : rule__TuplePartCS__Group__2__Impl ;
    public final void rule__TuplePartCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11863:1: ( rule__TuplePartCS__Group__2__Impl )
            // InternalImperativeOCL.g:11864:2: rule__TuplePartCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__2"


    // $ANTLR start "rule__TuplePartCS__Group__2__Impl"
    // InternalImperativeOCL.g:11870:1: rule__TuplePartCS__Group__2__Impl : ( ( rule__TuplePartCS__OwnedTypeAssignment_2 ) ) ;
    public final void rule__TuplePartCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11874:1: ( ( ( rule__TuplePartCS__OwnedTypeAssignment_2 ) ) )
            // InternalImperativeOCL.g:11875:1: ( ( rule__TuplePartCS__OwnedTypeAssignment_2 ) )
            {
            // InternalImperativeOCL.g:11875:1: ( ( rule__TuplePartCS__OwnedTypeAssignment_2 ) )
            // InternalImperativeOCL.g:11876:1: ( rule__TuplePartCS__OwnedTypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2());
            }
            // InternalImperativeOCL.g:11877:1: ( rule__TuplePartCS__OwnedTypeAssignment_2 )
            // InternalImperativeOCL.g:11877:2: rule__TuplePartCS__OwnedTypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TuplePartCS__OwnedTypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__Group__2__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:11893:1: rule__CollectionLiteralExpCS__Group__0 : rule__CollectionLiteralExpCS__Group__0__Impl rule__CollectionLiteralExpCS__Group__1 ;
    public final void rule__CollectionLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11897:1: ( rule__CollectionLiteralExpCS__Group__0__Impl rule__CollectionLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:11898:2: rule__CollectionLiteralExpCS__Group__0__Impl rule__CollectionLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__CollectionLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__0"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:11905:1: rule__CollectionLiteralExpCS__Group__0__Impl : ( ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 ) ) ;
    public final void rule__CollectionLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11909:1: ( ( ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 ) ) )
            // InternalImperativeOCL.g:11910:1: ( ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 ) )
            {
            // InternalImperativeOCL.g:11910:1: ( ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 ) )
            // InternalImperativeOCL.g:11911:1: ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0());
            }
            // InternalImperativeOCL.g:11912:1: ( rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 )
            // InternalImperativeOCL.g:11912:2: rule__CollectionLiteralExpCS__OwnedTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__OwnedTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:11922:1: rule__CollectionLiteralExpCS__Group__1 : rule__CollectionLiteralExpCS__Group__1__Impl rule__CollectionLiteralExpCS__Group__2 ;
    public final void rule__CollectionLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11926:1: ( rule__CollectionLiteralExpCS__Group__1__Impl rule__CollectionLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:11927:2: rule__CollectionLiteralExpCS__Group__1__Impl rule__CollectionLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__CollectionLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__1"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:11934:1: rule__CollectionLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__CollectionLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11938:1: ( ( '{' ) )
            // InternalImperativeOCL.g:11939:1: ( '{' )
            {
            // InternalImperativeOCL.g:11939:1: ( '{' )
            // InternalImperativeOCL.g:11940:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:11953:1: rule__CollectionLiteralExpCS__Group__2 : rule__CollectionLiteralExpCS__Group__2__Impl rule__CollectionLiteralExpCS__Group__3 ;
    public final void rule__CollectionLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11957:1: ( rule__CollectionLiteralExpCS__Group__2__Impl rule__CollectionLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:11958:2: rule__CollectionLiteralExpCS__Group__2__Impl rule__CollectionLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__CollectionLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__2"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:11965:1: rule__CollectionLiteralExpCS__Group__2__Impl : ( ( rule__CollectionLiteralExpCS__Group_2__0 )? ) ;
    public final void rule__CollectionLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11969:1: ( ( ( rule__CollectionLiteralExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:11970:1: ( ( rule__CollectionLiteralExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:11970:1: ( ( rule__CollectionLiteralExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:11971:1: ( rule__CollectionLiteralExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:11972:1: ( rule__CollectionLiteralExpCS__Group_2__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( ((LA87_0>=RULE_INT && LA87_0<=RULE_ESCAPED_ID)||(LA87_0>=16 && LA87_0<=23)||(LA87_0>=40 && LA87_0<=54)||(LA87_0>=63 && LA87_0<=64)||LA87_0==66||LA87_0==68||LA87_0==71||LA87_0==73||(LA87_0>=75 && LA87_0<=78)||LA87_0==81||LA87_0==83||(LA87_0>=85 && LA87_0<=86)||LA87_0==90||(LA87_0>=92 && LA87_0<=94)||LA87_0==97||(LA87_0>=99 && LA87_0<=100)||LA87_0==105||(LA87_0>=108 && LA87_0<=109)||(LA87_0>=113 && LA87_0<=116)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalImperativeOCL.g:11972:2: rule__CollectionLiteralExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionLiteralExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:11982:1: rule__CollectionLiteralExpCS__Group__3 : rule__CollectionLiteralExpCS__Group__3__Impl ;
    public final void rule__CollectionLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11986:1: ( rule__CollectionLiteralExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:11987:2: rule__CollectionLiteralExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__3"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:11993:1: rule__CollectionLiteralExpCS__Group__3__Impl : ( '}' ) ;
    public final void rule__CollectionLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:11997:1: ( ( '}' ) )
            // InternalImperativeOCL.g:11998:1: ( '}' )
            {
            // InternalImperativeOCL.g:11998:1: ( '}' )
            // InternalImperativeOCL.g:11999:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2__0"
    // InternalImperativeOCL.g:12020:1: rule__CollectionLiteralExpCS__Group_2__0 : rule__CollectionLiteralExpCS__Group_2__0__Impl rule__CollectionLiteralExpCS__Group_2__1 ;
    public final void rule__CollectionLiteralExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12024:1: ( rule__CollectionLiteralExpCS__Group_2__0__Impl rule__CollectionLiteralExpCS__Group_2__1 )
            // InternalImperativeOCL.g:12025:2: rule__CollectionLiteralExpCS__Group_2__0__Impl rule__CollectionLiteralExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__CollectionLiteralExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2__0"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:12032:1: rule__CollectionLiteralExpCS__Group_2__0__Impl : ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 ) ) ;
    public final void rule__CollectionLiteralExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12036:1: ( ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:12037:1: ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:12037:1: ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 ) )
            // InternalImperativeOCL.g:12038:1: ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0());
            }
            // InternalImperativeOCL.g:12039:1: ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 )
            // InternalImperativeOCL.g:12039:2: rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2__1"
    // InternalImperativeOCL.g:12049:1: rule__CollectionLiteralExpCS__Group_2__1 : rule__CollectionLiteralExpCS__Group_2__1__Impl ;
    public final void rule__CollectionLiteralExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12053:1: ( rule__CollectionLiteralExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:12054:2: rule__CollectionLiteralExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2__1"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:12060:1: rule__CollectionLiteralExpCS__Group_2__1__Impl : ( ( rule__CollectionLiteralExpCS__Group_2_1__0 )* ) ;
    public final void rule__CollectionLiteralExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12064:1: ( ( ( rule__CollectionLiteralExpCS__Group_2_1__0 )* ) )
            // InternalImperativeOCL.g:12065:1: ( ( rule__CollectionLiteralExpCS__Group_2_1__0 )* )
            {
            // InternalImperativeOCL.g:12065:1: ( ( rule__CollectionLiteralExpCS__Group_2_1__0 )* )
            // InternalImperativeOCL.g:12066:1: ( rule__CollectionLiteralExpCS__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1());
            }
            // InternalImperativeOCL.g:12067:1: ( rule__CollectionLiteralExpCS__Group_2_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==67) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalImperativeOCL.g:12067:2: rule__CollectionLiteralExpCS__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__CollectionLiteralExpCS__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2_1__0"
    // InternalImperativeOCL.g:12081:1: rule__CollectionLiteralExpCS__Group_2_1__0 : rule__CollectionLiteralExpCS__Group_2_1__0__Impl rule__CollectionLiteralExpCS__Group_2_1__1 ;
    public final void rule__CollectionLiteralExpCS__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12085:1: ( rule__CollectionLiteralExpCS__Group_2_1__0__Impl rule__CollectionLiteralExpCS__Group_2_1__1 )
            // InternalImperativeOCL.g:12086:2: rule__CollectionLiteralExpCS__Group_2_1__0__Impl rule__CollectionLiteralExpCS__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__CollectionLiteralExpCS__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2_1__0"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2_1__0__Impl"
    // InternalImperativeOCL.g:12093:1: rule__CollectionLiteralExpCS__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__CollectionLiteralExpCS__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12097:1: ( ( ',' ) )
            // InternalImperativeOCL.g:12098:1: ( ',' )
            {
            // InternalImperativeOCL.g:12098:1: ( ',' )
            // InternalImperativeOCL.g:12099:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2_1__0__Impl"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2_1__1"
    // InternalImperativeOCL.g:12112:1: rule__CollectionLiteralExpCS__Group_2_1__1 : rule__CollectionLiteralExpCS__Group_2_1__1__Impl ;
    public final void rule__CollectionLiteralExpCS__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12116:1: ( rule__CollectionLiteralExpCS__Group_2_1__1__Impl )
            // InternalImperativeOCL.g:12117:2: rule__CollectionLiteralExpCS__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2_1__1"


    // $ANTLR start "rule__CollectionLiteralExpCS__Group_2_1__1__Impl"
    // InternalImperativeOCL.g:12123:1: rule__CollectionLiteralExpCS__Group_2_1__1__Impl : ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 ) ) ;
    public final void rule__CollectionLiteralExpCS__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12127:1: ( ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 ) ) )
            // InternalImperativeOCL.g:12128:1: ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 ) )
            {
            // InternalImperativeOCL.g:12128:1: ( ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 ) )
            // InternalImperativeOCL.g:12129:1: ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1());
            }
            // InternalImperativeOCL.g:12130:1: ( rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 )
            // InternalImperativeOCL.g:12130:2: rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__Group_2_1__1__Impl"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0__0"
    // InternalImperativeOCL.g:12144:1: rule__CollectionLiteralPartCS__Group_0__0 : rule__CollectionLiteralPartCS__Group_0__0__Impl rule__CollectionLiteralPartCS__Group_0__1 ;
    public final void rule__CollectionLiteralPartCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12148:1: ( rule__CollectionLiteralPartCS__Group_0__0__Impl rule__CollectionLiteralPartCS__Group_0__1 )
            // InternalImperativeOCL.g:12149:2: rule__CollectionLiteralPartCS__Group_0__0__Impl rule__CollectionLiteralPartCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__CollectionLiteralPartCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0__0"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:12156:1: rule__CollectionLiteralPartCS__Group_0__0__Impl : ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 ) ) ;
    public final void rule__CollectionLiteralPartCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12160:1: ( ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 ) ) )
            // InternalImperativeOCL.g:12161:1: ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 ) )
            {
            // InternalImperativeOCL.g:12161:1: ( ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 ) )
            // InternalImperativeOCL.g:12162:1: ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_0_0());
            }
            // InternalImperativeOCL.g:12163:1: ( rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 )
            // InternalImperativeOCL.g:12163:2: rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0__0__Impl"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0__1"
    // InternalImperativeOCL.g:12173:1: rule__CollectionLiteralPartCS__Group_0__1 : rule__CollectionLiteralPartCS__Group_0__1__Impl ;
    public final void rule__CollectionLiteralPartCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12177:1: ( rule__CollectionLiteralPartCS__Group_0__1__Impl )
            // InternalImperativeOCL.g:12178:2: rule__CollectionLiteralPartCS__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0__1"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:12184:1: rule__CollectionLiteralPartCS__Group_0__1__Impl : ( ( rule__CollectionLiteralPartCS__Group_0_1__0 )? ) ;
    public final void rule__CollectionLiteralPartCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12188:1: ( ( ( rule__CollectionLiteralPartCS__Group_0_1__0 )? ) )
            // InternalImperativeOCL.g:12189:1: ( ( rule__CollectionLiteralPartCS__Group_0_1__0 )? )
            {
            // InternalImperativeOCL.g:12189:1: ( ( rule__CollectionLiteralPartCS__Group_0_1__0 )? )
            // InternalImperativeOCL.g:12190:1: ( rule__CollectionLiteralPartCS__Group_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0_1());
            }
            // InternalImperativeOCL.g:12191:1: ( rule__CollectionLiteralPartCS__Group_0_1__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==95) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalImperativeOCL.g:12191:2: rule__CollectionLiteralPartCS__Group_0_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionLiteralPartCS__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0__1__Impl"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0_1__0"
    // InternalImperativeOCL.g:12205:1: rule__CollectionLiteralPartCS__Group_0_1__0 : rule__CollectionLiteralPartCS__Group_0_1__0__Impl rule__CollectionLiteralPartCS__Group_0_1__1 ;
    public final void rule__CollectionLiteralPartCS__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12209:1: ( rule__CollectionLiteralPartCS__Group_0_1__0__Impl rule__CollectionLiteralPartCS__Group_0_1__1 )
            // InternalImperativeOCL.g:12210:2: rule__CollectionLiteralPartCS__Group_0_1__0__Impl rule__CollectionLiteralPartCS__Group_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__CollectionLiteralPartCS__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0_1__0"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0_1__0__Impl"
    // InternalImperativeOCL.g:12217:1: rule__CollectionLiteralPartCS__Group_0_1__0__Impl : ( '..' ) ;
    public final void rule__CollectionLiteralPartCS__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12221:1: ( ( '..' ) )
            // InternalImperativeOCL.g:12222:1: ( '..' )
            {
            // InternalImperativeOCL.g:12222:1: ( '..' )
            // InternalImperativeOCL.g:12223:1: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());
            }
            match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0_1__0__Impl"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0_1__1"
    // InternalImperativeOCL.g:12236:1: rule__CollectionLiteralPartCS__Group_0_1__1 : rule__CollectionLiteralPartCS__Group_0_1__1__Impl ;
    public final void rule__CollectionLiteralPartCS__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12240:1: ( rule__CollectionLiteralPartCS__Group_0_1__1__Impl )
            // InternalImperativeOCL.g:12241:2: rule__CollectionLiteralPartCS__Group_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0_1__1"


    // $ANTLR start "rule__CollectionLiteralPartCS__Group_0_1__1__Impl"
    // InternalImperativeOCL.g:12247:1: rule__CollectionLiteralPartCS__Group_0_1__1__Impl : ( ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 ) ) ;
    public final void rule__CollectionLiteralPartCS__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12251:1: ( ( ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 ) ) )
            // InternalImperativeOCL.g:12252:1: ( ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 ) )
            {
            // InternalImperativeOCL.g:12252:1: ( ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 ) )
            // InternalImperativeOCL.g:12253:1: ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionAssignment_0_1_1());
            }
            // InternalImperativeOCL.g:12254:1: ( rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 )
            // InternalImperativeOCL.g:12254:2: rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionAssignment_0_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__Group_0_1__1__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group__0"
    // InternalImperativeOCL.g:12268:1: rule__CollectionPatternCS__Group__0 : rule__CollectionPatternCS__Group__0__Impl rule__CollectionPatternCS__Group__1 ;
    public final void rule__CollectionPatternCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12272:1: ( rule__CollectionPatternCS__Group__0__Impl rule__CollectionPatternCS__Group__1 )
            // InternalImperativeOCL.g:12273:2: rule__CollectionPatternCS__Group__0__Impl rule__CollectionPatternCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__CollectionPatternCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__0"


    // $ANTLR start "rule__CollectionPatternCS__Group__0__Impl"
    // InternalImperativeOCL.g:12280:1: rule__CollectionPatternCS__Group__0__Impl : ( ( rule__CollectionPatternCS__OwnedTypeAssignment_0 ) ) ;
    public final void rule__CollectionPatternCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12284:1: ( ( ( rule__CollectionPatternCS__OwnedTypeAssignment_0 ) ) )
            // InternalImperativeOCL.g:12285:1: ( ( rule__CollectionPatternCS__OwnedTypeAssignment_0 ) )
            {
            // InternalImperativeOCL.g:12285:1: ( ( rule__CollectionPatternCS__OwnedTypeAssignment_0 ) )
            // InternalImperativeOCL.g:12286:1: ( rule__CollectionPatternCS__OwnedTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeAssignment_0());
            }
            // InternalImperativeOCL.g:12287:1: ( rule__CollectionPatternCS__OwnedTypeAssignment_0 )
            // InternalImperativeOCL.g:12287:2: rule__CollectionPatternCS__OwnedTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__OwnedTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__0__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group__1"
    // InternalImperativeOCL.g:12297:1: rule__CollectionPatternCS__Group__1 : rule__CollectionPatternCS__Group__1__Impl rule__CollectionPatternCS__Group__2 ;
    public final void rule__CollectionPatternCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12301:1: ( rule__CollectionPatternCS__Group__1__Impl rule__CollectionPatternCS__Group__2 )
            // InternalImperativeOCL.g:12302:2: rule__CollectionPatternCS__Group__1__Impl rule__CollectionPatternCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__CollectionPatternCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__1"


    // $ANTLR start "rule__CollectionPatternCS__Group__1__Impl"
    // InternalImperativeOCL.g:12309:1: rule__CollectionPatternCS__Group__1__Impl : ( '{' ) ;
    public final void rule__CollectionPatternCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12313:1: ( ( '{' ) )
            // InternalImperativeOCL.g:12314:1: ( '{' )
            {
            // InternalImperativeOCL.g:12314:1: ( '{' )
            // InternalImperativeOCL.g:12315:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__1__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group__2"
    // InternalImperativeOCL.g:12328:1: rule__CollectionPatternCS__Group__2 : rule__CollectionPatternCS__Group__2__Impl rule__CollectionPatternCS__Group__3 ;
    public final void rule__CollectionPatternCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12332:1: ( rule__CollectionPatternCS__Group__2__Impl rule__CollectionPatternCS__Group__3 )
            // InternalImperativeOCL.g:12333:2: rule__CollectionPatternCS__Group__2__Impl rule__CollectionPatternCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__CollectionPatternCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__2"


    // $ANTLR start "rule__CollectionPatternCS__Group__2__Impl"
    // InternalImperativeOCL.g:12340:1: rule__CollectionPatternCS__Group__2__Impl : ( ( rule__CollectionPatternCS__Group_2__0 )? ) ;
    public final void rule__CollectionPatternCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12344:1: ( ( ( rule__CollectionPatternCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:12345:1: ( ( rule__CollectionPatternCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:12345:1: ( ( rule__CollectionPatternCS__Group_2__0 )? )
            // InternalImperativeOCL.g:12346:1: ( rule__CollectionPatternCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:12347:1: ( rule__CollectionPatternCS__Group_2__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=RULE_SIMPLE_ID && LA90_0<=RULE_ESCAPED_ID)||LA90_0==75) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalImperativeOCL.g:12347:2: rule__CollectionPatternCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CollectionPatternCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__2__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group__3"
    // InternalImperativeOCL.g:12357:1: rule__CollectionPatternCS__Group__3 : rule__CollectionPatternCS__Group__3__Impl ;
    public final void rule__CollectionPatternCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12361:1: ( rule__CollectionPatternCS__Group__3__Impl )
            // InternalImperativeOCL.g:12362:2: rule__CollectionPatternCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__3"


    // $ANTLR start "rule__CollectionPatternCS__Group__3__Impl"
    // InternalImperativeOCL.g:12368:1: rule__CollectionPatternCS__Group__3__Impl : ( '}' ) ;
    public final void rule__CollectionPatternCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12372:1: ( ( '}' ) )
            // InternalImperativeOCL.g:12373:1: ( '}' )
            {
            // InternalImperativeOCL.g:12373:1: ( '}' )
            // InternalImperativeOCL.g:12374:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group__3__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__0"
    // InternalImperativeOCL.g:12395:1: rule__CollectionPatternCS__Group_2__0 : rule__CollectionPatternCS__Group_2__0__Impl rule__CollectionPatternCS__Group_2__1 ;
    public final void rule__CollectionPatternCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12399:1: ( rule__CollectionPatternCS__Group_2__0__Impl rule__CollectionPatternCS__Group_2__1 )
            // InternalImperativeOCL.g:12400:2: rule__CollectionPatternCS__Group_2__0__Impl rule__CollectionPatternCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__CollectionPatternCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__0"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:12407:1: rule__CollectionPatternCS__Group_2__0__Impl : ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 ) ) ;
    public final void rule__CollectionPatternCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12411:1: ( ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:12412:1: ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:12412:1: ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 ) )
            // InternalImperativeOCL.g:12413:1: ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_0());
            }
            // InternalImperativeOCL.g:12414:1: ( rule__CollectionPatternCS__OwnedPartsAssignment_2_0 )
            // InternalImperativeOCL.g:12414:2: rule__CollectionPatternCS__OwnedPartsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__OwnedPartsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__0__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__1"
    // InternalImperativeOCL.g:12424:1: rule__CollectionPatternCS__Group_2__1 : rule__CollectionPatternCS__Group_2__1__Impl rule__CollectionPatternCS__Group_2__2 ;
    public final void rule__CollectionPatternCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12428:1: ( rule__CollectionPatternCS__Group_2__1__Impl rule__CollectionPatternCS__Group_2__2 )
            // InternalImperativeOCL.g:12429:2: rule__CollectionPatternCS__Group_2__1__Impl rule__CollectionPatternCS__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__CollectionPatternCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__1"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:12436:1: rule__CollectionPatternCS__Group_2__1__Impl : ( ( rule__CollectionPatternCS__Group_2_1__0 )* ) ;
    public final void rule__CollectionPatternCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12440:1: ( ( ( rule__CollectionPatternCS__Group_2_1__0 )* ) )
            // InternalImperativeOCL.g:12441:1: ( ( rule__CollectionPatternCS__Group_2_1__0 )* )
            {
            // InternalImperativeOCL.g:12441:1: ( ( rule__CollectionPatternCS__Group_2_1__0 )* )
            // InternalImperativeOCL.g:12442:1: ( rule__CollectionPatternCS__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getGroup_2_1());
            }
            // InternalImperativeOCL.g:12443:1: ( rule__CollectionPatternCS__Group_2_1__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==67) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalImperativeOCL.g:12443:2: rule__CollectionPatternCS__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__CollectionPatternCS__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getGroup_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__1__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__2"
    // InternalImperativeOCL.g:12453:1: rule__CollectionPatternCS__Group_2__2 : rule__CollectionPatternCS__Group_2__2__Impl ;
    public final void rule__CollectionPatternCS__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12457:1: ( rule__CollectionPatternCS__Group_2__2__Impl )
            // InternalImperativeOCL.g:12458:2: rule__CollectionPatternCS__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__2"


    // $ANTLR start "rule__CollectionPatternCS__Group_2__2__Impl"
    // InternalImperativeOCL.g:12464:1: rule__CollectionPatternCS__Group_2__2__Impl : ( ( rule__CollectionPatternCS__Group_2_2__0 ) ) ;
    public final void rule__CollectionPatternCS__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12468:1: ( ( ( rule__CollectionPatternCS__Group_2_2__0 ) ) )
            // InternalImperativeOCL.g:12469:1: ( ( rule__CollectionPatternCS__Group_2_2__0 ) )
            {
            // InternalImperativeOCL.g:12469:1: ( ( rule__CollectionPatternCS__Group_2_2__0 ) )
            // InternalImperativeOCL.g:12470:1: ( rule__CollectionPatternCS__Group_2_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getGroup_2_2());
            }
            // InternalImperativeOCL.g:12471:1: ( rule__CollectionPatternCS__Group_2_2__0 )
            // InternalImperativeOCL.g:12471:2: rule__CollectionPatternCS__Group_2_2__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getGroup_2_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2__2__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_1__0"
    // InternalImperativeOCL.g:12487:1: rule__CollectionPatternCS__Group_2_1__0 : rule__CollectionPatternCS__Group_2_1__0__Impl rule__CollectionPatternCS__Group_2_1__1 ;
    public final void rule__CollectionPatternCS__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12491:1: ( rule__CollectionPatternCS__Group_2_1__0__Impl rule__CollectionPatternCS__Group_2_1__1 )
            // InternalImperativeOCL.g:12492:2: rule__CollectionPatternCS__Group_2_1__0__Impl rule__CollectionPatternCS__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__CollectionPatternCS__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_1__0"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_1__0__Impl"
    // InternalImperativeOCL.g:12499:1: rule__CollectionPatternCS__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__CollectionPatternCS__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12503:1: ( ( ',' ) )
            // InternalImperativeOCL.g:12504:1: ( ',' )
            {
            // InternalImperativeOCL.g:12504:1: ( ',' )
            // InternalImperativeOCL.g:12505:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_1__0__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_1__1"
    // InternalImperativeOCL.g:12518:1: rule__CollectionPatternCS__Group_2_1__1 : rule__CollectionPatternCS__Group_2_1__1__Impl ;
    public final void rule__CollectionPatternCS__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12522:1: ( rule__CollectionPatternCS__Group_2_1__1__Impl )
            // InternalImperativeOCL.g:12523:2: rule__CollectionPatternCS__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_1__1"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_1__1__Impl"
    // InternalImperativeOCL.g:12529:1: rule__CollectionPatternCS__Group_2_1__1__Impl : ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 ) ) ;
    public final void rule__CollectionPatternCS__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12533:1: ( ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 ) ) )
            // InternalImperativeOCL.g:12534:1: ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 ) )
            {
            // InternalImperativeOCL.g:12534:1: ( ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 ) )
            // InternalImperativeOCL.g:12535:1: ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_1_1());
            }
            // InternalImperativeOCL.g:12536:1: ( rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 )
            // InternalImperativeOCL.g:12536:2: rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_1__1__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_2__0"
    // InternalImperativeOCL.g:12550:1: rule__CollectionPatternCS__Group_2_2__0 : rule__CollectionPatternCS__Group_2_2__0__Impl rule__CollectionPatternCS__Group_2_2__1 ;
    public final void rule__CollectionPatternCS__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12554:1: ( rule__CollectionPatternCS__Group_2_2__0__Impl rule__CollectionPatternCS__Group_2_2__1 )
            // InternalImperativeOCL.g:12555:2: rule__CollectionPatternCS__Group_2_2__0__Impl rule__CollectionPatternCS__Group_2_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__CollectionPatternCS__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_2__0"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_2__0__Impl"
    // InternalImperativeOCL.g:12562:1: rule__CollectionPatternCS__Group_2_2__0__Impl : ( '++' ) ;
    public final void rule__CollectionPatternCS__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12566:1: ( ( '++' ) )
            // InternalImperativeOCL.g:12567:1: ( '++' )
            {
            // InternalImperativeOCL.g:12567:1: ( '++' )
            // InternalImperativeOCL.g:12568:1: '++'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());
            }
            match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_2__0__Impl"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_2__1"
    // InternalImperativeOCL.g:12581:1: rule__CollectionPatternCS__Group_2_2__1 : rule__CollectionPatternCS__Group_2_2__1__Impl ;
    public final void rule__CollectionPatternCS__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12585:1: ( rule__CollectionPatternCS__Group_2_2__1__Impl )
            // InternalImperativeOCL.g:12586:2: rule__CollectionPatternCS__Group_2_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_2__1"


    // $ANTLR start "rule__CollectionPatternCS__Group_2_2__1__Impl"
    // InternalImperativeOCL.g:12592:1: rule__CollectionPatternCS__Group_2_2__1__Impl : ( ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 ) ) ;
    public final void rule__CollectionPatternCS__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12596:1: ( ( ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 ) ) )
            // InternalImperativeOCL.g:12597:1: ( ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 ) )
            {
            // InternalImperativeOCL.g:12597:1: ( ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 ) )
            // InternalImperativeOCL.g:12598:1: ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameAssignment_2_2_1());
            }
            // InternalImperativeOCL.g:12599:1: ( rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 )
            // InternalImperativeOCL.g:12599:2: rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameAssignment_2_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__Group_2_2__1__Impl"


    // $ANTLR start "rule__ShadowPartCS__Group_0__0"
    // InternalImperativeOCL.g:12613:1: rule__ShadowPartCS__Group_0__0 : rule__ShadowPartCS__Group_0__0__Impl rule__ShadowPartCS__Group_0__1 ;
    public final void rule__ShadowPartCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12617:1: ( rule__ShadowPartCS__Group_0__0__Impl rule__ShadowPartCS__Group_0__1 )
            // InternalImperativeOCL.g:12618:2: rule__ShadowPartCS__Group_0__0__Impl rule__ShadowPartCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShadowPartCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__0"


    // $ANTLR start "rule__ShadowPartCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:12625:1: rule__ShadowPartCS__Group_0__0__Impl : ( ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 ) ) ;
    public final void rule__ShadowPartCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12629:1: ( ( ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 ) ) )
            // InternalImperativeOCL.g:12630:1: ( ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 ) )
            {
            // InternalImperativeOCL.g:12630:1: ( ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 ) )
            // InternalImperativeOCL.g:12631:1: ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getReferredPropertyAssignment_0_0());
            }
            // InternalImperativeOCL.g:12632:1: ( rule__ShadowPartCS__ReferredPropertyAssignment_0_0 )
            // InternalImperativeOCL.g:12632:2: rule__ShadowPartCS__ReferredPropertyAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__ReferredPropertyAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getReferredPropertyAssignment_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__0__Impl"


    // $ANTLR start "rule__ShadowPartCS__Group_0__1"
    // InternalImperativeOCL.g:12642:1: rule__ShadowPartCS__Group_0__1 : rule__ShadowPartCS__Group_0__1__Impl rule__ShadowPartCS__Group_0__2 ;
    public final void rule__ShadowPartCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12646:1: ( rule__ShadowPartCS__Group_0__1__Impl rule__ShadowPartCS__Group_0__2 )
            // InternalImperativeOCL.g:12647:2: rule__ShadowPartCS__Group_0__1__Impl rule__ShadowPartCS__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__ShadowPartCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__1"


    // $ANTLR start "rule__ShadowPartCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:12654:1: rule__ShadowPartCS__Group_0__1__Impl : ( '=' ) ;
    public final void rule__ShadowPartCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12658:1: ( ( '=' ) )
            // InternalImperativeOCL.g:12659:1: ( '=' )
            {
            // InternalImperativeOCL.g:12659:1: ( '=' )
            // InternalImperativeOCL.g:12660:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__1__Impl"


    // $ANTLR start "rule__ShadowPartCS__Group_0__2"
    // InternalImperativeOCL.g:12673:1: rule__ShadowPartCS__Group_0__2 : rule__ShadowPartCS__Group_0__2__Impl ;
    public final void rule__ShadowPartCS__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12677:1: ( rule__ShadowPartCS__Group_0__2__Impl )
            // InternalImperativeOCL.g:12678:2: rule__ShadowPartCS__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__2"


    // $ANTLR start "rule__ShadowPartCS__Group_0__2__Impl"
    // InternalImperativeOCL.g:12684:1: rule__ShadowPartCS__Group_0__2__Impl : ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 ) ) ;
    public final void rule__ShadowPartCS__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12688:1: ( ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 ) ) )
            // InternalImperativeOCL.g:12689:1: ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 ) )
            {
            // InternalImperativeOCL.g:12689:1: ( ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 ) )
            // InternalImperativeOCL.g:12690:1: ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_0_2());
            }
            // InternalImperativeOCL.g:12691:1: ( rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 )
            // InternalImperativeOCL.g:12691:2: rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__Group_0__2__Impl"


    // $ANTLR start "rule__PatternExpCS__Group__0"
    // InternalImperativeOCL.g:12707:1: rule__PatternExpCS__Group__0 : rule__PatternExpCS__Group__0__Impl rule__PatternExpCS__Group__1 ;
    public final void rule__PatternExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12711:1: ( rule__PatternExpCS__Group__0__Impl rule__PatternExpCS__Group__1 )
            // InternalImperativeOCL.g:12712:2: rule__PatternExpCS__Group__0__Impl rule__PatternExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__PatternExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PatternExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__0"


    // $ANTLR start "rule__PatternExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:12719:1: rule__PatternExpCS__Group__0__Impl : ( ( rule__PatternExpCS__PatternVariableNameAssignment_0 )? ) ;
    public final void rule__PatternExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12723:1: ( ( ( rule__PatternExpCS__PatternVariableNameAssignment_0 )? ) )
            // InternalImperativeOCL.g:12724:1: ( ( rule__PatternExpCS__PatternVariableNameAssignment_0 )? )
            {
            // InternalImperativeOCL.g:12724:1: ( ( rule__PatternExpCS__PatternVariableNameAssignment_0 )? )
            // InternalImperativeOCL.g:12725:1: ( rule__PatternExpCS__PatternVariableNameAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getPatternVariableNameAssignment_0());
            }
            // InternalImperativeOCL.g:12726:1: ( rule__PatternExpCS__PatternVariableNameAssignment_0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( ((LA92_0>=RULE_SIMPLE_ID && LA92_0<=RULE_ESCAPED_ID)) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalImperativeOCL.g:12726:2: rule__PatternExpCS__PatternVariableNameAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PatternExpCS__PatternVariableNameAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getPatternVariableNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__0__Impl"


    // $ANTLR start "rule__PatternExpCS__Group__1"
    // InternalImperativeOCL.g:12736:1: rule__PatternExpCS__Group__1 : rule__PatternExpCS__Group__1__Impl rule__PatternExpCS__Group__2 ;
    public final void rule__PatternExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12740:1: ( rule__PatternExpCS__Group__1__Impl rule__PatternExpCS__Group__2 )
            // InternalImperativeOCL.g:12741:2: rule__PatternExpCS__Group__1__Impl rule__PatternExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__PatternExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PatternExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__1"


    // $ANTLR start "rule__PatternExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:12748:1: rule__PatternExpCS__Group__1__Impl : ( ':' ) ;
    public final void rule__PatternExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12752:1: ( ( ':' ) )
            // InternalImperativeOCL.g:12753:1: ( ':' )
            {
            // InternalImperativeOCL.g:12753:1: ( ':' )
            // InternalImperativeOCL.g:12754:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getColonKeyword_1());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getColonKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__1__Impl"


    // $ANTLR start "rule__PatternExpCS__Group__2"
    // InternalImperativeOCL.g:12767:1: rule__PatternExpCS__Group__2 : rule__PatternExpCS__Group__2__Impl ;
    public final void rule__PatternExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12771:1: ( rule__PatternExpCS__Group__2__Impl )
            // InternalImperativeOCL.g:12772:2: rule__PatternExpCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PatternExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__2"


    // $ANTLR start "rule__PatternExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:12778:1: rule__PatternExpCS__Group__2__Impl : ( ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 ) ) ;
    public final void rule__PatternExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12782:1: ( ( ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 ) ) )
            // InternalImperativeOCL.g:12783:1: ( ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 ) )
            {
            // InternalImperativeOCL.g:12783:1: ( ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 ) )
            // InternalImperativeOCL.g:12784:1: ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeAssignment_2());
            }
            // InternalImperativeOCL.g:12785:1: ( rule__PatternExpCS__OwnedPatternTypeAssignment_2 )
            // InternalImperativeOCL.g:12785:2: rule__PatternExpCS__OwnedPatternTypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PatternExpCS__OwnedPatternTypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__Group__2__Impl"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:12801:1: rule__LambdaLiteralExpCS__Group__0 : rule__LambdaLiteralExpCS__Group__0__Impl rule__LambdaLiteralExpCS__Group__1 ;
    public final void rule__LambdaLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12805:1: ( rule__LambdaLiteralExpCS__Group__0__Impl rule__LambdaLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:12806:2: rule__LambdaLiteralExpCS__Group__0__Impl rule__LambdaLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__LambdaLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__0"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:12813:1: rule__LambdaLiteralExpCS__Group__0__Impl : ( 'Lambda' ) ;
    public final void rule__LambdaLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12817:1: ( ( 'Lambda' ) )
            // InternalImperativeOCL.g:12818:1: ( 'Lambda' )
            {
            // InternalImperativeOCL.g:12818:1: ( 'Lambda' )
            // InternalImperativeOCL.g:12819:1: 'Lambda'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());
            }
            match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:12832:1: rule__LambdaLiteralExpCS__Group__1 : rule__LambdaLiteralExpCS__Group__1__Impl rule__LambdaLiteralExpCS__Group__2 ;
    public final void rule__LambdaLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12836:1: ( rule__LambdaLiteralExpCS__Group__1__Impl rule__LambdaLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:12837:2: rule__LambdaLiteralExpCS__Group__1__Impl rule__LambdaLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LambdaLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__1"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:12844:1: rule__LambdaLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__LambdaLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12848:1: ( ( '{' ) )
            // InternalImperativeOCL.g:12849:1: ( '{' )
            {
            // InternalImperativeOCL.g:12849:1: ( '{' )
            // InternalImperativeOCL.g:12850:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:12863:1: rule__LambdaLiteralExpCS__Group__2 : rule__LambdaLiteralExpCS__Group__2__Impl rule__LambdaLiteralExpCS__Group__3 ;
    public final void rule__LambdaLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12867:1: ( rule__LambdaLiteralExpCS__Group__2__Impl rule__LambdaLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:12868:2: rule__LambdaLiteralExpCS__Group__2__Impl rule__LambdaLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__LambdaLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__2"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:12875:1: rule__LambdaLiteralExpCS__Group__2__Impl : ( ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 ) ) ;
    public final void rule__LambdaLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12879:1: ( ( ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 ) ) )
            // InternalImperativeOCL.g:12880:1: ( ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 ) )
            {
            // InternalImperativeOCL.g:12880:1: ( ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 ) )
            // InternalImperativeOCL.g:12881:1: ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSAssignment_2());
            }
            // InternalImperativeOCL.g:12882:1: ( rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 )
            // InternalImperativeOCL.g:12882:2: rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:12892:1: rule__LambdaLiteralExpCS__Group__3 : rule__LambdaLiteralExpCS__Group__3__Impl ;
    public final void rule__LambdaLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12896:1: ( rule__LambdaLiteralExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:12897:2: rule__LambdaLiteralExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LambdaLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__3"


    // $ANTLR start "rule__LambdaLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:12903:1: rule__LambdaLiteralExpCS__Group__3__Impl : ( '}' ) ;
    public final void rule__LambdaLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12907:1: ( ( '}' ) )
            // InternalImperativeOCL.g:12908:1: ( '}' )
            {
            // InternalImperativeOCL.g:12908:1: ( '}' )
            // InternalImperativeOCL.g:12909:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:12930:1: rule__MapLiteralExpCS__Group__0 : rule__MapLiteralExpCS__Group__0__Impl rule__MapLiteralExpCS__Group__1 ;
    public final void rule__MapLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12934:1: ( rule__MapLiteralExpCS__Group__0__Impl rule__MapLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:12935:2: rule__MapLiteralExpCS__Group__0__Impl rule__MapLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__MapLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__0"


    // $ANTLR start "rule__MapLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:12942:1: rule__MapLiteralExpCS__Group__0__Impl : ( ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 ) ) ;
    public final void rule__MapLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12946:1: ( ( ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 ) ) )
            // InternalImperativeOCL.g:12947:1: ( ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 ) )
            {
            // InternalImperativeOCL.g:12947:1: ( ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 ) )
            // InternalImperativeOCL.g:12948:1: ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeAssignment_0());
            }
            // InternalImperativeOCL.g:12949:1: ( rule__MapLiteralExpCS__OwnedTypeAssignment_0 )
            // InternalImperativeOCL.g:12949:2: rule__MapLiteralExpCS__OwnedTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__OwnedTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:12959:1: rule__MapLiteralExpCS__Group__1 : rule__MapLiteralExpCS__Group__1__Impl rule__MapLiteralExpCS__Group__2 ;
    public final void rule__MapLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12963:1: ( rule__MapLiteralExpCS__Group__1__Impl rule__MapLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:12964:2: rule__MapLiteralExpCS__Group__1__Impl rule__MapLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__MapLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__1"


    // $ANTLR start "rule__MapLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:12971:1: rule__MapLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__MapLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12975:1: ( ( '{' ) )
            // InternalImperativeOCL.g:12976:1: ( '{' )
            {
            // InternalImperativeOCL.g:12976:1: ( '{' )
            // InternalImperativeOCL.g:12977:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:12990:1: rule__MapLiteralExpCS__Group__2 : rule__MapLiteralExpCS__Group__2__Impl rule__MapLiteralExpCS__Group__3 ;
    public final void rule__MapLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:12994:1: ( rule__MapLiteralExpCS__Group__2__Impl rule__MapLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:12995:2: rule__MapLiteralExpCS__Group__2__Impl rule__MapLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__MapLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__2"


    // $ANTLR start "rule__MapLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:13002:1: rule__MapLiteralExpCS__Group__2__Impl : ( ( rule__MapLiteralExpCS__Group_2__0 )? ) ;
    public final void rule__MapLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13006:1: ( ( ( rule__MapLiteralExpCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:13007:1: ( ( rule__MapLiteralExpCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:13007:1: ( ( rule__MapLiteralExpCS__Group_2__0 )? )
            // InternalImperativeOCL.g:13008:1: ( rule__MapLiteralExpCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:13009:1: ( rule__MapLiteralExpCS__Group_2__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( ((LA93_0>=RULE_INT && LA93_0<=RULE_ESCAPED_ID)||(LA93_0>=16 && LA93_0<=23)||(LA93_0>=40 && LA93_0<=54)||(LA93_0>=63 && LA93_0<=64)||LA93_0==66||LA93_0==68||LA93_0==71||LA93_0==73||(LA93_0>=76 && LA93_0<=78)||LA93_0==81||LA93_0==83||(LA93_0>=85 && LA93_0<=86)||LA93_0==90||(LA93_0>=92 && LA93_0<=94)||LA93_0==97||(LA93_0>=99 && LA93_0<=100)||LA93_0==105||(LA93_0>=108 && LA93_0<=109)||(LA93_0>=113 && LA93_0<=116)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalImperativeOCL.g:13009:2: rule__MapLiteralExpCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MapLiteralExpCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:13019:1: rule__MapLiteralExpCS__Group__3 : rule__MapLiteralExpCS__Group__3__Impl ;
    public final void rule__MapLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13023:1: ( rule__MapLiteralExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:13024:2: rule__MapLiteralExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__3"


    // $ANTLR start "rule__MapLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:13030:1: rule__MapLiteralExpCS__Group__3__Impl : ( '}' ) ;
    public final void rule__MapLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13034:1: ( ( '}' ) )
            // InternalImperativeOCL.g:13035:1: ( '}' )
            {
            // InternalImperativeOCL.g:13035:1: ( '}' )
            // InternalImperativeOCL.g:13036:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2__0"
    // InternalImperativeOCL.g:13057:1: rule__MapLiteralExpCS__Group_2__0 : rule__MapLiteralExpCS__Group_2__0__Impl rule__MapLiteralExpCS__Group_2__1 ;
    public final void rule__MapLiteralExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13061:1: ( rule__MapLiteralExpCS__Group_2__0__Impl rule__MapLiteralExpCS__Group_2__1 )
            // InternalImperativeOCL.g:13062:2: rule__MapLiteralExpCS__Group_2__0__Impl rule__MapLiteralExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__MapLiteralExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2__0"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:13069:1: rule__MapLiteralExpCS__Group_2__0__Impl : ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 ) ) ;
    public final void rule__MapLiteralExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13073:1: ( ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:13074:1: ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:13074:1: ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 ) )
            // InternalImperativeOCL.g:13075:1: ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_0());
            }
            // InternalImperativeOCL.g:13076:1: ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 )
            // InternalImperativeOCL.g:13076:2: rule__MapLiteralExpCS__OwnedPartsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__OwnedPartsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2__1"
    // InternalImperativeOCL.g:13086:1: rule__MapLiteralExpCS__Group_2__1 : rule__MapLiteralExpCS__Group_2__1__Impl ;
    public final void rule__MapLiteralExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13090:1: ( rule__MapLiteralExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:13091:2: rule__MapLiteralExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2__1"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:13097:1: rule__MapLiteralExpCS__Group_2__1__Impl : ( ( rule__MapLiteralExpCS__Group_2_1__0 )* ) ;
    public final void rule__MapLiteralExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13101:1: ( ( ( rule__MapLiteralExpCS__Group_2_1__0 )* ) )
            // InternalImperativeOCL.g:13102:1: ( ( rule__MapLiteralExpCS__Group_2_1__0 )* )
            {
            // InternalImperativeOCL.g:13102:1: ( ( rule__MapLiteralExpCS__Group_2_1__0 )* )
            // InternalImperativeOCL.g:13103:1: ( rule__MapLiteralExpCS__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getGroup_2_1());
            }
            // InternalImperativeOCL.g:13104:1: ( rule__MapLiteralExpCS__Group_2_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==67) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalImperativeOCL.g:13104:2: rule__MapLiteralExpCS__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__MapLiteralExpCS__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getGroup_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2_1__0"
    // InternalImperativeOCL.g:13118:1: rule__MapLiteralExpCS__Group_2_1__0 : rule__MapLiteralExpCS__Group_2_1__0__Impl rule__MapLiteralExpCS__Group_2_1__1 ;
    public final void rule__MapLiteralExpCS__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13122:1: ( rule__MapLiteralExpCS__Group_2_1__0__Impl rule__MapLiteralExpCS__Group_2_1__1 )
            // InternalImperativeOCL.g:13123:2: rule__MapLiteralExpCS__Group_2_1__0__Impl rule__MapLiteralExpCS__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__MapLiteralExpCS__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2_1__0"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2_1__0__Impl"
    // InternalImperativeOCL.g:13130:1: rule__MapLiteralExpCS__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__MapLiteralExpCS__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13134:1: ( ( ',' ) )
            // InternalImperativeOCL.g:13135:1: ( ',' )
            {
            // InternalImperativeOCL.g:13135:1: ( ',' )
            // InternalImperativeOCL.g:13136:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2_1__0__Impl"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2_1__1"
    // InternalImperativeOCL.g:13149:1: rule__MapLiteralExpCS__Group_2_1__1 : rule__MapLiteralExpCS__Group_2_1__1__Impl ;
    public final void rule__MapLiteralExpCS__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13153:1: ( rule__MapLiteralExpCS__Group_2_1__1__Impl )
            // InternalImperativeOCL.g:13154:2: rule__MapLiteralExpCS__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2_1__1"


    // $ANTLR start "rule__MapLiteralExpCS__Group_2_1__1__Impl"
    // InternalImperativeOCL.g:13160:1: rule__MapLiteralExpCS__Group_2_1__1__Impl : ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 ) ) ;
    public final void rule__MapLiteralExpCS__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13164:1: ( ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 ) ) )
            // InternalImperativeOCL.g:13165:1: ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 ) )
            {
            // InternalImperativeOCL.g:13165:1: ( ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 ) )
            // InternalImperativeOCL.g:13166:1: ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1());
            }
            // InternalImperativeOCL.g:13167:1: ( rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 )
            // InternalImperativeOCL.g:13167:2: rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__Group_2_1__1__Impl"


    // $ANTLR start "rule__MapLiteralPartCS__Group__0"
    // InternalImperativeOCL.g:13181:1: rule__MapLiteralPartCS__Group__0 : rule__MapLiteralPartCS__Group__0__Impl rule__MapLiteralPartCS__Group__1 ;
    public final void rule__MapLiteralPartCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13185:1: ( rule__MapLiteralPartCS__Group__0__Impl rule__MapLiteralPartCS__Group__1 )
            // InternalImperativeOCL.g:13186:2: rule__MapLiteralPartCS__Group__0__Impl rule__MapLiteralPartCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__MapLiteralPartCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__0"


    // $ANTLR start "rule__MapLiteralPartCS__Group__0__Impl"
    // InternalImperativeOCL.g:13193:1: rule__MapLiteralPartCS__Group__0__Impl : ( ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 ) ) ;
    public final void rule__MapLiteralPartCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13197:1: ( ( ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 ) ) )
            // InternalImperativeOCL.g:13198:1: ( ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 ) )
            {
            // InternalImperativeOCL.g:13198:1: ( ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 ) )
            // InternalImperativeOCL.g:13199:1: ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyAssignment_0());
            }
            // InternalImperativeOCL.g:13200:1: ( rule__MapLiteralPartCS__OwnedKeyAssignment_0 )
            // InternalImperativeOCL.g:13200:2: rule__MapLiteralPartCS__OwnedKeyAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__OwnedKeyAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__0__Impl"


    // $ANTLR start "rule__MapLiteralPartCS__Group__1"
    // InternalImperativeOCL.g:13210:1: rule__MapLiteralPartCS__Group__1 : rule__MapLiteralPartCS__Group__1__Impl rule__MapLiteralPartCS__Group__2 ;
    public final void rule__MapLiteralPartCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13214:1: ( rule__MapLiteralPartCS__Group__1__Impl rule__MapLiteralPartCS__Group__2 )
            // InternalImperativeOCL.g:13215:2: rule__MapLiteralPartCS__Group__1__Impl rule__MapLiteralPartCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__MapLiteralPartCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__1"


    // $ANTLR start "rule__MapLiteralPartCS__Group__1__Impl"
    // InternalImperativeOCL.g:13222:1: rule__MapLiteralPartCS__Group__1__Impl : ( '<-' ) ;
    public final void rule__MapLiteralPartCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13226:1: ( ( '<-' ) )
            // InternalImperativeOCL.g:13227:1: ( '<-' )
            {
            // InternalImperativeOCL.g:13227:1: ( '<-' )
            // InternalImperativeOCL.g:13228:1: '<-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());
            }
            match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__1__Impl"


    // $ANTLR start "rule__MapLiteralPartCS__Group__2"
    // InternalImperativeOCL.g:13241:1: rule__MapLiteralPartCS__Group__2 : rule__MapLiteralPartCS__Group__2__Impl ;
    public final void rule__MapLiteralPartCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13245:1: ( rule__MapLiteralPartCS__Group__2__Impl )
            // InternalImperativeOCL.g:13246:2: rule__MapLiteralPartCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__2"


    // $ANTLR start "rule__MapLiteralPartCS__Group__2__Impl"
    // InternalImperativeOCL.g:13252:1: rule__MapLiteralPartCS__Group__2__Impl : ( ( rule__MapLiteralPartCS__OwnedValueAssignment_2 ) ) ;
    public final void rule__MapLiteralPartCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13256:1: ( ( ( rule__MapLiteralPartCS__OwnedValueAssignment_2 ) ) )
            // InternalImperativeOCL.g:13257:1: ( ( rule__MapLiteralPartCS__OwnedValueAssignment_2 ) )
            {
            // InternalImperativeOCL.g:13257:1: ( ( rule__MapLiteralPartCS__OwnedValueAssignment_2 ) )
            // InternalImperativeOCL.g:13258:1: ( rule__MapLiteralPartCS__OwnedValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueAssignment_2());
            }
            // InternalImperativeOCL.g:13259:1: ( rule__MapLiteralPartCS__OwnedValueAssignment_2 )
            // InternalImperativeOCL.g:13259:2: rule__MapLiteralPartCS__OwnedValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MapLiteralPartCS__OwnedValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__Group__2__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:13275:1: rule__TupleLiteralExpCS__Group__0 : rule__TupleLiteralExpCS__Group__0__Impl rule__TupleLiteralExpCS__Group__1 ;
    public final void rule__TupleLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13279:1: ( rule__TupleLiteralExpCS__Group__0__Impl rule__TupleLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:13280:2: rule__TupleLiteralExpCS__Group__0__Impl rule__TupleLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TupleLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__0"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:13287:1: rule__TupleLiteralExpCS__Group__0__Impl : ( 'Tuple' ) ;
    public final void rule__TupleLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13291:1: ( ( 'Tuple' ) )
            // InternalImperativeOCL.g:13292:1: ( 'Tuple' )
            {
            // InternalImperativeOCL.g:13292:1: ( 'Tuple' )
            // InternalImperativeOCL.g:13293:1: 'Tuple'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());
            }
            match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:13306:1: rule__TupleLiteralExpCS__Group__1 : rule__TupleLiteralExpCS__Group__1__Impl rule__TupleLiteralExpCS__Group__2 ;
    public final void rule__TupleLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13310:1: ( rule__TupleLiteralExpCS__Group__1__Impl rule__TupleLiteralExpCS__Group__2 )
            // InternalImperativeOCL.g:13311:2: rule__TupleLiteralExpCS__Group__1__Impl rule__TupleLiteralExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TupleLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__1"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:13318:1: rule__TupleLiteralExpCS__Group__1__Impl : ( '{' ) ;
    public final void rule__TupleLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13322:1: ( ( '{' ) )
            // InternalImperativeOCL.g:13323:1: ( '{' )
            {
            // InternalImperativeOCL.g:13323:1: ( '{' )
            // InternalImperativeOCL.g:13324:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__2"
    // InternalImperativeOCL.g:13337:1: rule__TupleLiteralExpCS__Group__2 : rule__TupleLiteralExpCS__Group__2__Impl rule__TupleLiteralExpCS__Group__3 ;
    public final void rule__TupleLiteralExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13341:1: ( rule__TupleLiteralExpCS__Group__2__Impl rule__TupleLiteralExpCS__Group__3 )
            // InternalImperativeOCL.g:13342:2: rule__TupleLiteralExpCS__Group__2__Impl rule__TupleLiteralExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__TupleLiteralExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__2"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:13349:1: rule__TupleLiteralExpCS__Group__2__Impl : ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 ) ) ;
    public final void rule__TupleLiteralExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13353:1: ( ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 ) ) )
            // InternalImperativeOCL.g:13354:1: ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 ) )
            {
            // InternalImperativeOCL.g:13354:1: ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 ) )
            // InternalImperativeOCL.g:13355:1: ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2());
            }
            // InternalImperativeOCL.g:13356:1: ( rule__TupleLiteralExpCS__OwnedPartsAssignment_2 )
            // InternalImperativeOCL.g:13356:2: rule__TupleLiteralExpCS__OwnedPartsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__OwnedPartsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__2__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__3"
    // InternalImperativeOCL.g:13366:1: rule__TupleLiteralExpCS__Group__3 : rule__TupleLiteralExpCS__Group__3__Impl rule__TupleLiteralExpCS__Group__4 ;
    public final void rule__TupleLiteralExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13370:1: ( rule__TupleLiteralExpCS__Group__3__Impl rule__TupleLiteralExpCS__Group__4 )
            // InternalImperativeOCL.g:13371:2: rule__TupleLiteralExpCS__Group__3__Impl rule__TupleLiteralExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__TupleLiteralExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__3"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:13378:1: rule__TupleLiteralExpCS__Group__3__Impl : ( ( rule__TupleLiteralExpCS__Group_3__0 )* ) ;
    public final void rule__TupleLiteralExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13382:1: ( ( ( rule__TupleLiteralExpCS__Group_3__0 )* ) )
            // InternalImperativeOCL.g:13383:1: ( ( rule__TupleLiteralExpCS__Group_3__0 )* )
            {
            // InternalImperativeOCL.g:13383:1: ( ( rule__TupleLiteralExpCS__Group_3__0 )* )
            // InternalImperativeOCL.g:13384:1: ( rule__TupleLiteralExpCS__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3());
            }
            // InternalImperativeOCL.g:13385:1: ( rule__TupleLiteralExpCS__Group_3__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==67) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalImperativeOCL.g:13385:2: rule__TupleLiteralExpCS__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__TupleLiteralExpCS__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__3__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__4"
    // InternalImperativeOCL.g:13395:1: rule__TupleLiteralExpCS__Group__4 : rule__TupleLiteralExpCS__Group__4__Impl ;
    public final void rule__TupleLiteralExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13399:1: ( rule__TupleLiteralExpCS__Group__4__Impl )
            // InternalImperativeOCL.g:13400:2: rule__TupleLiteralExpCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__4"


    // $ANTLR start "rule__TupleLiteralExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:13406:1: rule__TupleLiteralExpCS__Group__4__Impl : ( '}' ) ;
    public final void rule__TupleLiteralExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13410:1: ( ( '}' ) )
            // InternalImperativeOCL.g:13411:1: ( '}' )
            {
            // InternalImperativeOCL.g:13411:1: ( '}' )
            // InternalImperativeOCL.g:13412:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group__4__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group_3__0"
    // InternalImperativeOCL.g:13435:1: rule__TupleLiteralExpCS__Group_3__0 : rule__TupleLiteralExpCS__Group_3__0__Impl rule__TupleLiteralExpCS__Group_3__1 ;
    public final void rule__TupleLiteralExpCS__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13439:1: ( rule__TupleLiteralExpCS__Group_3__0__Impl rule__TupleLiteralExpCS__Group_3__1 )
            // InternalImperativeOCL.g:13440:2: rule__TupleLiteralExpCS__Group_3__0__Impl rule__TupleLiteralExpCS__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TupleLiteralExpCS__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group_3__0"


    // $ANTLR start "rule__TupleLiteralExpCS__Group_3__0__Impl"
    // InternalImperativeOCL.g:13447:1: rule__TupleLiteralExpCS__Group_3__0__Impl : ( ',' ) ;
    public final void rule__TupleLiteralExpCS__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13451:1: ( ( ',' ) )
            // InternalImperativeOCL.g:13452:1: ( ',' )
            {
            // InternalImperativeOCL.g:13452:1: ( ',' )
            // InternalImperativeOCL.g:13453:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group_3__0__Impl"


    // $ANTLR start "rule__TupleLiteralExpCS__Group_3__1"
    // InternalImperativeOCL.g:13466:1: rule__TupleLiteralExpCS__Group_3__1 : rule__TupleLiteralExpCS__Group_3__1__Impl ;
    public final void rule__TupleLiteralExpCS__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13470:1: ( rule__TupleLiteralExpCS__Group_3__1__Impl )
            // InternalImperativeOCL.g:13471:2: rule__TupleLiteralExpCS__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group_3__1"


    // $ANTLR start "rule__TupleLiteralExpCS__Group_3__1__Impl"
    // InternalImperativeOCL.g:13477:1: rule__TupleLiteralExpCS__Group_3__1__Impl : ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 ) ) ;
    public final void rule__TupleLiteralExpCS__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13481:1: ( ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 ) ) )
            // InternalImperativeOCL.g:13482:1: ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 ) )
            {
            // InternalImperativeOCL.g:13482:1: ( ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 ) )
            // InternalImperativeOCL.g:13483:1: ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1());
            }
            // InternalImperativeOCL.g:13484:1: ( rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 )
            // InternalImperativeOCL.g:13484:2: rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__Group_3__1__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__0"
    // InternalImperativeOCL.g:13498:1: rule__TupleLiteralPartCS__Group__0 : rule__TupleLiteralPartCS__Group__0__Impl rule__TupleLiteralPartCS__Group__1 ;
    public final void rule__TupleLiteralPartCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13502:1: ( rule__TupleLiteralPartCS__Group__0__Impl rule__TupleLiteralPartCS__Group__1 )
            // InternalImperativeOCL.g:13503:2: rule__TupleLiteralPartCS__Group__0__Impl rule__TupleLiteralPartCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__TupleLiteralPartCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__0"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__0__Impl"
    // InternalImperativeOCL.g:13510:1: rule__TupleLiteralPartCS__Group__0__Impl : ( ( rule__TupleLiteralPartCS__NameAssignment_0 ) ) ;
    public final void rule__TupleLiteralPartCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13514:1: ( ( ( rule__TupleLiteralPartCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:13515:1: ( ( rule__TupleLiteralPartCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:13515:1: ( ( rule__TupleLiteralPartCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:13516:1: ( rule__TupleLiteralPartCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:13517:1: ( rule__TupleLiteralPartCS__NameAssignment_0 )
            // InternalImperativeOCL.g:13517:2: rule__TupleLiteralPartCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__0__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__1"
    // InternalImperativeOCL.g:13527:1: rule__TupleLiteralPartCS__Group__1 : rule__TupleLiteralPartCS__Group__1__Impl rule__TupleLiteralPartCS__Group__2 ;
    public final void rule__TupleLiteralPartCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13531:1: ( rule__TupleLiteralPartCS__Group__1__Impl rule__TupleLiteralPartCS__Group__2 )
            // InternalImperativeOCL.g:13532:2: rule__TupleLiteralPartCS__Group__1__Impl rule__TupleLiteralPartCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__TupleLiteralPartCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__1"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__1__Impl"
    // InternalImperativeOCL.g:13539:1: rule__TupleLiteralPartCS__Group__1__Impl : ( ( rule__TupleLiteralPartCS__Group_1__0 )? ) ;
    public final void rule__TupleLiteralPartCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13543:1: ( ( ( rule__TupleLiteralPartCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:13544:1: ( ( rule__TupleLiteralPartCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:13544:1: ( ( rule__TupleLiteralPartCS__Group_1__0 )? )
            // InternalImperativeOCL.g:13545:1: ( rule__TupleLiteralPartCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:13546:1: ( rule__TupleLiteralPartCS__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==75) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalImperativeOCL.g:13546:2: rule__TupleLiteralPartCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TupleLiteralPartCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__1__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__2"
    // InternalImperativeOCL.g:13556:1: rule__TupleLiteralPartCS__Group__2 : rule__TupleLiteralPartCS__Group__2__Impl rule__TupleLiteralPartCS__Group__3 ;
    public final void rule__TupleLiteralPartCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13560:1: ( rule__TupleLiteralPartCS__Group__2__Impl rule__TupleLiteralPartCS__Group__3 )
            // InternalImperativeOCL.g:13561:2: rule__TupleLiteralPartCS__Group__2__Impl rule__TupleLiteralPartCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__TupleLiteralPartCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__2"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__2__Impl"
    // InternalImperativeOCL.g:13568:1: rule__TupleLiteralPartCS__Group__2__Impl : ( '=' ) ;
    public final void rule__TupleLiteralPartCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13572:1: ( ( '=' ) )
            // InternalImperativeOCL.g:13573:1: ( '=' )
            {
            // InternalImperativeOCL.g:13573:1: ( '=' )
            // InternalImperativeOCL.g:13574:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__2__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__3"
    // InternalImperativeOCL.g:13587:1: rule__TupleLiteralPartCS__Group__3 : rule__TupleLiteralPartCS__Group__3__Impl ;
    public final void rule__TupleLiteralPartCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13591:1: ( rule__TupleLiteralPartCS__Group__3__Impl )
            // InternalImperativeOCL.g:13592:2: rule__TupleLiteralPartCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__3"


    // $ANTLR start "rule__TupleLiteralPartCS__Group__3__Impl"
    // InternalImperativeOCL.g:13598:1: rule__TupleLiteralPartCS__Group__3__Impl : ( ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 ) ) ;
    public final void rule__TupleLiteralPartCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13602:1: ( ( ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 ) ) )
            // InternalImperativeOCL.g:13603:1: ( ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 ) )
            {
            // InternalImperativeOCL.g:13603:1: ( ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 ) )
            // InternalImperativeOCL.g:13604:1: ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionAssignment_3());
            }
            // InternalImperativeOCL.g:13605:1: ( rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 )
            // InternalImperativeOCL.g:13605:2: rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group__3__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group_1__0"
    // InternalImperativeOCL.g:13623:1: rule__TupleLiteralPartCS__Group_1__0 : rule__TupleLiteralPartCS__Group_1__0__Impl rule__TupleLiteralPartCS__Group_1__1 ;
    public final void rule__TupleLiteralPartCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13627:1: ( rule__TupleLiteralPartCS__Group_1__0__Impl rule__TupleLiteralPartCS__Group_1__1 )
            // InternalImperativeOCL.g:13628:2: rule__TupleLiteralPartCS__Group_1__0__Impl rule__TupleLiteralPartCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__TupleLiteralPartCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group_1__0"


    // $ANTLR start "rule__TupleLiteralPartCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:13635:1: rule__TupleLiteralPartCS__Group_1__0__Impl : ( ':' ) ;
    public final void rule__TupleLiteralPartCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13639:1: ( ( ':' ) )
            // InternalImperativeOCL.g:13640:1: ( ':' )
            {
            // InternalImperativeOCL.g:13640:1: ( ':' )
            // InternalImperativeOCL.g:13641:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group_1__0__Impl"


    // $ANTLR start "rule__TupleLiteralPartCS__Group_1__1"
    // InternalImperativeOCL.g:13654:1: rule__TupleLiteralPartCS__Group_1__1 : rule__TupleLiteralPartCS__Group_1__1__Impl ;
    public final void rule__TupleLiteralPartCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13658:1: ( rule__TupleLiteralPartCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:13659:2: rule__TupleLiteralPartCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group_1__1"


    // $ANTLR start "rule__TupleLiteralPartCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:13665:1: rule__TupleLiteralPartCS__Group_1__1__Impl : ( ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 ) ) ;
    public final void rule__TupleLiteralPartCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13669:1: ( ( ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:13670:1: ( ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:13670:1: ( ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:13671:1: ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:13672:1: ( rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 )
            // InternalImperativeOCL.g:13672:2: rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__Group_1__1__Impl"


    // $ANTLR start "rule__UnlimitedNaturalLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:13686:1: rule__UnlimitedNaturalLiteralExpCS__Group__0 : rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl rule__UnlimitedNaturalLiteralExpCS__Group__1 ;
    public final void rule__UnlimitedNaturalLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13690:1: ( rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl rule__UnlimitedNaturalLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:13691:2: rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl rule__UnlimitedNaturalLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnlimitedNaturalLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnlimitedNaturalLiteralExpCS__Group__0"


    // $ANTLR start "rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:13698:1: rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl : ( () ) ;
    public final void rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13702:1: ( ( () ) )
            // InternalImperativeOCL.g:13703:1: ( () )
            {
            // InternalImperativeOCL.g:13703:1: ( () )
            // InternalImperativeOCL.g:13704:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0());
            }
            // InternalImperativeOCL.g:13705:1: ()
            // InternalImperativeOCL.g:13707:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnlimitedNaturalLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__UnlimitedNaturalLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:13717:1: rule__UnlimitedNaturalLiteralExpCS__Group__1 : rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl ;
    public final void rule__UnlimitedNaturalLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13721:1: ( rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:13722:2: rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnlimitedNaturalLiteralExpCS__Group__1"


    // $ANTLR start "rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:13728:1: rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl : ( '*' ) ;
    public final void rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13732:1: ( ( '*' ) )
            // InternalImperativeOCL.g:13733:1: ( '*' )
            {
            // InternalImperativeOCL.g:13733:1: ( '*' )
            // InternalImperativeOCL.g:13734:1: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());
            }
            match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnlimitedNaturalLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__InvalidLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:13751:1: rule__InvalidLiteralExpCS__Group__0 : rule__InvalidLiteralExpCS__Group__0__Impl rule__InvalidLiteralExpCS__Group__1 ;
    public final void rule__InvalidLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13755:1: ( rule__InvalidLiteralExpCS__Group__0__Impl rule__InvalidLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:13756:2: rule__InvalidLiteralExpCS__Group__0__Impl rule__InvalidLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InvalidLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InvalidLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InvalidLiteralExpCS__Group__0"


    // $ANTLR start "rule__InvalidLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:13763:1: rule__InvalidLiteralExpCS__Group__0__Impl : ( () ) ;
    public final void rule__InvalidLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13767:1: ( ( () ) )
            // InternalImperativeOCL.g:13768:1: ( () )
            {
            // InternalImperativeOCL.g:13768:1: ( () )
            // InternalImperativeOCL.g:13769:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0());
            }
            // InternalImperativeOCL.g:13770:1: ()
            // InternalImperativeOCL.g:13772:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InvalidLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__InvalidLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:13782:1: rule__InvalidLiteralExpCS__Group__1 : rule__InvalidLiteralExpCS__Group__1__Impl ;
    public final void rule__InvalidLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13786:1: ( rule__InvalidLiteralExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:13787:2: rule__InvalidLiteralExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InvalidLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InvalidLiteralExpCS__Group__1"


    // $ANTLR start "rule__InvalidLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:13793:1: rule__InvalidLiteralExpCS__Group__1__Impl : ( 'invalid' ) ;
    public final void rule__InvalidLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13797:1: ( ( 'invalid' ) )
            // InternalImperativeOCL.g:13798:1: ( 'invalid' )
            {
            // InternalImperativeOCL.g:13798:1: ( 'invalid' )
            // InternalImperativeOCL.g:13799:1: 'invalid'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());
            }
            match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InvalidLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__NullLiteralExpCS__Group__0"
    // InternalImperativeOCL.g:13816:1: rule__NullLiteralExpCS__Group__0 : rule__NullLiteralExpCS__Group__0__Impl rule__NullLiteralExpCS__Group__1 ;
    public final void rule__NullLiteralExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13820:1: ( rule__NullLiteralExpCS__Group__0__Impl rule__NullLiteralExpCS__Group__1 )
            // InternalImperativeOCL.g:13821:2: rule__NullLiteralExpCS__Group__0__Impl rule__NullLiteralExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NullLiteralExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullLiteralExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullLiteralExpCS__Group__0"


    // $ANTLR start "rule__NullLiteralExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:13828:1: rule__NullLiteralExpCS__Group__0__Impl : ( () ) ;
    public final void rule__NullLiteralExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13832:1: ( ( () ) )
            // InternalImperativeOCL.g:13833:1: ( () )
            {
            // InternalImperativeOCL.g:13833:1: ( () )
            // InternalImperativeOCL.g:13834:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0());
            }
            // InternalImperativeOCL.g:13835:1: ()
            // InternalImperativeOCL.g:13837:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullLiteralExpCS__Group__0__Impl"


    // $ANTLR start "rule__NullLiteralExpCS__Group__1"
    // InternalImperativeOCL.g:13847:1: rule__NullLiteralExpCS__Group__1 : rule__NullLiteralExpCS__Group__1__Impl ;
    public final void rule__NullLiteralExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13851:1: ( rule__NullLiteralExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:13852:2: rule__NullLiteralExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullLiteralExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullLiteralExpCS__Group__1"


    // $ANTLR start "rule__NullLiteralExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:13858:1: rule__NullLiteralExpCS__Group__1__Impl : ( 'null' ) ;
    public final void rule__NullLiteralExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13862:1: ( ( 'null' ) )
            // InternalImperativeOCL.g:13863:1: ( 'null' )
            {
            // InternalImperativeOCL.g:13863:1: ( 'null' )
            // InternalImperativeOCL.g:13864:1: 'null'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());
            }
            match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullLiteralExpCS__Group__1__Impl"


    // $ANTLR start "rule__TypeLiteralWithMultiplicityCS__Group__0"
    // InternalImperativeOCL.g:13881:1: rule__TypeLiteralWithMultiplicityCS__Group__0 : rule__TypeLiteralWithMultiplicityCS__Group__0__Impl rule__TypeLiteralWithMultiplicityCS__Group__1 ;
    public final void rule__TypeLiteralWithMultiplicityCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13885:1: ( rule__TypeLiteralWithMultiplicityCS__Group__0__Impl rule__TypeLiteralWithMultiplicityCS__Group__1 )
            // InternalImperativeOCL.g:13886:2: rule__TypeLiteralWithMultiplicityCS__Group__0__Impl rule__TypeLiteralWithMultiplicityCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__TypeLiteralWithMultiplicityCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeLiteralWithMultiplicityCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralWithMultiplicityCS__Group__0"


    // $ANTLR start "rule__TypeLiteralWithMultiplicityCS__Group__0__Impl"
    // InternalImperativeOCL.g:13893:1: rule__TypeLiteralWithMultiplicityCS__Group__0__Impl : ( ruleTypeLiteralCS ) ;
    public final void rule__TypeLiteralWithMultiplicityCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13897:1: ( ( ruleTypeLiteralCS ) )
            // InternalImperativeOCL.g:13898:1: ( ruleTypeLiteralCS )
            {
            // InternalImperativeOCL.g:13898:1: ( ruleTypeLiteralCS )
            // InternalImperativeOCL.g:13899:1: ruleTypeLiteralCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralWithMultiplicityCS__Group__0__Impl"


    // $ANTLR start "rule__TypeLiteralWithMultiplicityCS__Group__1"
    // InternalImperativeOCL.g:13910:1: rule__TypeLiteralWithMultiplicityCS__Group__1 : rule__TypeLiteralWithMultiplicityCS__Group__1__Impl ;
    public final void rule__TypeLiteralWithMultiplicityCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13914:1: ( rule__TypeLiteralWithMultiplicityCS__Group__1__Impl )
            // InternalImperativeOCL.g:13915:2: rule__TypeLiteralWithMultiplicityCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeLiteralWithMultiplicityCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralWithMultiplicityCS__Group__1"


    // $ANTLR start "rule__TypeLiteralWithMultiplicityCS__Group__1__Impl"
    // InternalImperativeOCL.g:13921:1: rule__TypeLiteralWithMultiplicityCS__Group__1__Impl : ( ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )? ) ;
    public final void rule__TypeLiteralWithMultiplicityCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13925:1: ( ( ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )? ) )
            // InternalImperativeOCL.g:13926:1: ( ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )? )
            {
            // InternalImperativeOCL.g:13926:1: ( ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )? )
            // InternalImperativeOCL.g:13927:1: ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityAssignment_1());
            }
            // InternalImperativeOCL.g:13928:1: ( rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==102) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalImperativeOCL.g:13928:2: rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralWithMultiplicityCS__Group__1__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group__0"
    // InternalImperativeOCL.g:13942:1: rule__TypeNameExpCS__Group__0 : rule__TypeNameExpCS__Group__0__Impl rule__TypeNameExpCS__Group__1 ;
    public final void rule__TypeNameExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13946:1: ( rule__TypeNameExpCS__Group__0__Impl rule__TypeNameExpCS__Group__1 )
            // InternalImperativeOCL.g:13947:2: rule__TypeNameExpCS__Group__0__Impl rule__TypeNameExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypeNameExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group__0"


    // $ANTLR start "rule__TypeNameExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:13954:1: rule__TypeNameExpCS__Group__0__Impl : ( ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 ) ) ;
    public final void rule__TypeNameExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13958:1: ( ( ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 ) ) )
            // InternalImperativeOCL.g:13959:1: ( ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:13959:1: ( ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 ) )
            // InternalImperativeOCL.g:13960:1: ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNameAssignment_0());
            }
            // InternalImperativeOCL.g:13961:1: ( rule__TypeNameExpCS__OwnedPathNameAssignment_0 )
            // InternalImperativeOCL.g:13961:2: rule__TypeNameExpCS__OwnedPathNameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__OwnedPathNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group__0__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group__1"
    // InternalImperativeOCL.g:13971:1: rule__TypeNameExpCS__Group__1 : rule__TypeNameExpCS__Group__1__Impl ;
    public final void rule__TypeNameExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13975:1: ( rule__TypeNameExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:13976:2: rule__TypeNameExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group__1"


    // $ANTLR start "rule__TypeNameExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:13982:1: rule__TypeNameExpCS__Group__1__Impl : ( ( rule__TypeNameExpCS__Group_1__0 )? ) ;
    public final void rule__TypeNameExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:13986:1: ( ( ( rule__TypeNameExpCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:13987:1: ( ( rule__TypeNameExpCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:13987:1: ( ( rule__TypeNameExpCS__Group_1__0 )? )
            // InternalImperativeOCL.g:13988:1: ( rule__TypeNameExpCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:13989:1: ( rule__TypeNameExpCS__Group_1__0 )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalImperativeOCL.g:13989:2: rule__TypeNameExpCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeNameExpCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group__1__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group_1__0"
    // InternalImperativeOCL.g:14003:1: rule__TypeNameExpCS__Group_1__0 : rule__TypeNameExpCS__Group_1__0__Impl rule__TypeNameExpCS__Group_1__1 ;
    public final void rule__TypeNameExpCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14007:1: ( rule__TypeNameExpCS__Group_1__0__Impl rule__TypeNameExpCS__Group_1__1 )
            // InternalImperativeOCL.g:14008:2: rule__TypeNameExpCS__Group_1__0__Impl rule__TypeNameExpCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypeNameExpCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1__0"


    // $ANTLR start "rule__TypeNameExpCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:14015:1: rule__TypeNameExpCS__Group_1__0__Impl : ( ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 ) ) ;
    public final void rule__TypeNameExpCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14019:1: ( ( ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 ) ) )
            // InternalImperativeOCL.g:14020:1: ( ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 ) )
            {
            // InternalImperativeOCL.g:14020:1: ( ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 ) )
            // InternalImperativeOCL.g:14021:1: ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_1_0());
            }
            // InternalImperativeOCL.g:14022:1: ( rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 )
            // InternalImperativeOCL.g:14022:2: rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1__0__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group_1__1"
    // InternalImperativeOCL.g:14032:1: rule__TypeNameExpCS__Group_1__1 : rule__TypeNameExpCS__Group_1__1__Impl ;
    public final void rule__TypeNameExpCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14036:1: ( rule__TypeNameExpCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:14037:2: rule__TypeNameExpCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1__1"


    // $ANTLR start "rule__TypeNameExpCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:14043:1: rule__TypeNameExpCS__Group_1__1__Impl : ( ( rule__TypeNameExpCS__Group_1_1__0 )? ) ;
    public final void rule__TypeNameExpCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14047:1: ( ( ( rule__TypeNameExpCS__Group_1_1__0 )? ) )
            // InternalImperativeOCL.g:14048:1: ( ( rule__TypeNameExpCS__Group_1_1__0 )? )
            {
            // InternalImperativeOCL.g:14048:1: ( ( rule__TypeNameExpCS__Group_1_1__0 )? )
            // InternalImperativeOCL.g:14049:1: ( rule__TypeNameExpCS__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getGroup_1_1());
            }
            // InternalImperativeOCL.g:14050:1: ( rule__TypeNameExpCS__Group_1_1__0 )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalImperativeOCL.g:14050:2: rule__TypeNameExpCS__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeNameExpCS__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getGroup_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1__1__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__0"
    // InternalImperativeOCL.g:14064:1: rule__TypeNameExpCS__Group_1_1__0 : rule__TypeNameExpCS__Group_1_1__0__Impl rule__TypeNameExpCS__Group_1_1__1 ;
    public final void rule__TypeNameExpCS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14068:1: ( rule__TypeNameExpCS__Group_1_1__0__Impl rule__TypeNameExpCS__Group_1_1__1 )
            // InternalImperativeOCL.g:14069:2: rule__TypeNameExpCS__Group_1_1__0__Impl rule__TypeNameExpCS__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__TypeNameExpCS__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__0"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__0__Impl"
    // InternalImperativeOCL.g:14076:1: rule__TypeNameExpCS__Group_1_1__0__Impl : ( '{' ) ;
    public final void rule__TypeNameExpCS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14080:1: ( ( '{' ) )
            // InternalImperativeOCL.g:14081:1: ( '{' )
            {
            // InternalImperativeOCL.g:14081:1: ( '{' )
            // InternalImperativeOCL.g:14082:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__0__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__1"
    // InternalImperativeOCL.g:14095:1: rule__TypeNameExpCS__Group_1_1__1 : rule__TypeNameExpCS__Group_1_1__1__Impl rule__TypeNameExpCS__Group_1_1__2 ;
    public final void rule__TypeNameExpCS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14099:1: ( rule__TypeNameExpCS__Group_1_1__1__Impl rule__TypeNameExpCS__Group_1_1__2 )
            // InternalImperativeOCL.g:14100:2: rule__TypeNameExpCS__Group_1_1__1__Impl rule__TypeNameExpCS__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__TypeNameExpCS__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__1"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__1__Impl"
    // InternalImperativeOCL.g:14107:1: rule__TypeNameExpCS__Group_1_1__1__Impl : ( ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 ) ) ;
    public final void rule__TypeNameExpCS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14111:1: ( ( ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 ) ) )
            // InternalImperativeOCL.g:14112:1: ( ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 ) )
            {
            // InternalImperativeOCL.g:14112:1: ( ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 ) )
            // InternalImperativeOCL.g:14113:1: ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardAssignment_1_1_1());
            }
            // InternalImperativeOCL.g:14114:1: ( rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 )
            // InternalImperativeOCL.g:14114:2: rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardAssignment_1_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__1__Impl"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__2"
    // InternalImperativeOCL.g:14124:1: rule__TypeNameExpCS__Group_1_1__2 : rule__TypeNameExpCS__Group_1_1__2__Impl ;
    public final void rule__TypeNameExpCS__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14128:1: ( rule__TypeNameExpCS__Group_1_1__2__Impl )
            // InternalImperativeOCL.g:14129:2: rule__TypeNameExpCS__Group_1_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeNameExpCS__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__2"


    // $ANTLR start "rule__TypeNameExpCS__Group_1_1__2__Impl"
    // InternalImperativeOCL.g:14135:1: rule__TypeNameExpCS__Group_1_1__2__Impl : ( '}' ) ;
    public final void rule__TypeNameExpCS__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14139:1: ( ( '}' ) )
            // InternalImperativeOCL.g:14140:1: ( '}' )
            {
            // InternalImperativeOCL.g:14140:1: ( '}' )
            // InternalImperativeOCL.g:14141:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__Group_1_1__2__Impl"


    // $ANTLR start "rule__TypeExpCS__Group__0"
    // InternalImperativeOCL.g:14160:1: rule__TypeExpCS__Group__0 : rule__TypeExpCS__Group__0__Impl rule__TypeExpCS__Group__1 ;
    public final void rule__TypeExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14164:1: ( rule__TypeExpCS__Group__0__Impl rule__TypeExpCS__Group__1 )
            // InternalImperativeOCL.g:14165:2: rule__TypeExpCS__Group__0__Impl rule__TypeExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__TypeExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpCS__Group__0"


    // $ANTLR start "rule__TypeExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:14172:1: rule__TypeExpCS__Group__0__Impl : ( ruleTypeExpWithoutMultiplicityCS ) ;
    public final void rule__TypeExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14176:1: ( ( ruleTypeExpWithoutMultiplicityCS ) )
            // InternalImperativeOCL.g:14177:1: ( ruleTypeExpWithoutMultiplicityCS )
            {
            // InternalImperativeOCL.g:14177:1: ( ruleTypeExpWithoutMultiplicityCS )
            // InternalImperativeOCL.g:14178:1: ruleTypeExpWithoutMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpCS__Group__0__Impl"


    // $ANTLR start "rule__TypeExpCS__Group__1"
    // InternalImperativeOCL.g:14189:1: rule__TypeExpCS__Group__1 : rule__TypeExpCS__Group__1__Impl ;
    public final void rule__TypeExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14193:1: ( rule__TypeExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:14194:2: rule__TypeExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpCS__Group__1"


    // $ANTLR start "rule__TypeExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:14200:1: rule__TypeExpCS__Group__1__Impl : ( ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )? ) ;
    public final void rule__TypeExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14204:1: ( ( ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )? ) )
            // InternalImperativeOCL.g:14205:1: ( ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )? )
            {
            // InternalImperativeOCL.g:14205:1: ( ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )? )
            // InternalImperativeOCL.g:14206:1: ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityAssignment_1());
            }
            // InternalImperativeOCL.g:14207:1: ( rule__TypeExpCS__OwnedMultiplicityAssignment_1 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==102) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalImperativeOCL.g:14207:2: rule__TypeExpCS__OwnedMultiplicityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeExpCS__OwnedMultiplicityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpCS__Group__1__Impl"


    // $ANTLR start "rule__ExpCS__Group_0__0"
    // InternalImperativeOCL.g:14221:1: rule__ExpCS__Group_0__0 : rule__ExpCS__Group_0__0__Impl rule__ExpCS__Group_0__1 ;
    public final void rule__ExpCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14225:1: ( rule__ExpCS__Group_0__0__Impl rule__ExpCS__Group_0__1 )
            // InternalImperativeOCL.g:14226:2: rule__ExpCS__Group_0__0__Impl rule__ExpCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__ExpCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0__0"


    // $ANTLR start "rule__ExpCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:14233:1: rule__ExpCS__Group_0__0__Impl : ( rulePrefixedPrimaryExpCS ) ;
    public final void rule__ExpCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14237:1: ( ( rulePrefixedPrimaryExpCS ) )
            // InternalImperativeOCL.g:14238:1: ( rulePrefixedPrimaryExpCS )
            {
            // InternalImperativeOCL.g:14238:1: ( rulePrefixedPrimaryExpCS )
            // InternalImperativeOCL.g:14239:1: rulePrefixedPrimaryExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0__0__Impl"


    // $ANTLR start "rule__ExpCS__Group_0__1"
    // InternalImperativeOCL.g:14250:1: rule__ExpCS__Group_0__1 : rule__ExpCS__Group_0__1__Impl ;
    public final void rule__ExpCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14254:1: ( rule__ExpCS__Group_0__1__Impl )
            // InternalImperativeOCL.g:14255:2: rule__ExpCS__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0__1"


    // $ANTLR start "rule__ExpCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:14261:1: rule__ExpCS__Group_0__1__Impl : ( ( rule__ExpCS__Group_0_1__0 )? ) ;
    public final void rule__ExpCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14265:1: ( ( ( rule__ExpCS__Group_0_1__0 )? ) )
            // InternalImperativeOCL.g:14266:1: ( ( rule__ExpCS__Group_0_1__0 )? )
            {
            // InternalImperativeOCL.g:14266:1: ( ( rule__ExpCS__Group_0_1__0 )? )
            // InternalImperativeOCL.g:14267:1: ( rule__ExpCS__Group_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getGroup_0_1());
            }
            // InternalImperativeOCL.g:14268:1: ( rule__ExpCS__Group_0_1__0 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalImperativeOCL.g:14268:2: rule__ExpCS__Group_0_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpCS__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getGroup_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0__1__Impl"


    // $ANTLR start "rule__ExpCS__Group_0_1__0"
    // InternalImperativeOCL.g:14282:1: rule__ExpCS__Group_0_1__0 : rule__ExpCS__Group_0_1__0__Impl rule__ExpCS__Group_0_1__1 ;
    public final void rule__ExpCS__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14286:1: ( rule__ExpCS__Group_0_1__0__Impl rule__ExpCS__Group_0_1__1 )
            // InternalImperativeOCL.g:14287:2: rule__ExpCS__Group_0_1__0__Impl rule__ExpCS__Group_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__ExpCS__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__0"


    // $ANTLR start "rule__ExpCS__Group_0_1__0__Impl"
    // InternalImperativeOCL.g:14294:1: rule__ExpCS__Group_0_1__0__Impl : ( () ) ;
    public final void rule__ExpCS__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14298:1: ( ( () ) )
            // InternalImperativeOCL.g:14299:1: ( () )
            {
            // InternalImperativeOCL.g:14299:1: ( () )
            // InternalImperativeOCL.g:14300:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0());
            }
            // InternalImperativeOCL.g:14301:1: ()
            // InternalImperativeOCL.g:14303:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__0__Impl"


    // $ANTLR start "rule__ExpCS__Group_0_1__1"
    // InternalImperativeOCL.g:14313:1: rule__ExpCS__Group_0_1__1 : rule__ExpCS__Group_0_1__1__Impl rule__ExpCS__Group_0_1__2 ;
    public final void rule__ExpCS__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14317:1: ( rule__ExpCS__Group_0_1__1__Impl rule__ExpCS__Group_0_1__2 )
            // InternalImperativeOCL.g:14318:2: rule__ExpCS__Group_0_1__1__Impl rule__ExpCS__Group_0_1__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ExpCS__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__1"


    // $ANTLR start "rule__ExpCS__Group_0_1__1__Impl"
    // InternalImperativeOCL.g:14325:1: rule__ExpCS__Group_0_1__1__Impl : ( ( rule__ExpCS__NameAssignment_0_1_1 ) ) ;
    public final void rule__ExpCS__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14329:1: ( ( ( rule__ExpCS__NameAssignment_0_1_1 ) ) )
            // InternalImperativeOCL.g:14330:1: ( ( rule__ExpCS__NameAssignment_0_1_1 ) )
            {
            // InternalImperativeOCL.g:14330:1: ( ( rule__ExpCS__NameAssignment_0_1_1 ) )
            // InternalImperativeOCL.g:14331:1: ( rule__ExpCS__NameAssignment_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getNameAssignment_0_1_1());
            }
            // InternalImperativeOCL.g:14332:1: ( rule__ExpCS__NameAssignment_0_1_1 )
            // InternalImperativeOCL.g:14332:2: rule__ExpCS__NameAssignment_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__NameAssignment_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getNameAssignment_0_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__1__Impl"


    // $ANTLR start "rule__ExpCS__Group_0_1__2"
    // InternalImperativeOCL.g:14342:1: rule__ExpCS__Group_0_1__2 : rule__ExpCS__Group_0_1__2__Impl ;
    public final void rule__ExpCS__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14346:1: ( rule__ExpCS__Group_0_1__2__Impl )
            // InternalImperativeOCL.g:14347:2: rule__ExpCS__Group_0_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__2"


    // $ANTLR start "rule__ExpCS__Group_0_1__2__Impl"
    // InternalImperativeOCL.g:14353:1: rule__ExpCS__Group_0_1__2__Impl : ( ( rule__ExpCS__OwnedRightAssignment_0_1_2 ) ) ;
    public final void rule__ExpCS__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14357:1: ( ( ( rule__ExpCS__OwnedRightAssignment_0_1_2 ) ) )
            // InternalImperativeOCL.g:14358:1: ( ( rule__ExpCS__OwnedRightAssignment_0_1_2 ) )
            {
            // InternalImperativeOCL.g:14358:1: ( ( rule__ExpCS__OwnedRightAssignment_0_1_2 ) )
            // InternalImperativeOCL.g:14359:1: ( rule__ExpCS__OwnedRightAssignment_0_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getOwnedRightAssignment_0_1_2());
            }
            // InternalImperativeOCL.g:14360:1: ( rule__ExpCS__OwnedRightAssignment_0_1_2 )
            // InternalImperativeOCL.g:14360:2: rule__ExpCS__OwnedRightAssignment_0_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpCS__OwnedRightAssignment_0_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getOwnedRightAssignment_0_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__Group_0_1__2__Impl"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__0"
    // InternalImperativeOCL.g:14376:1: rule__PrefixedLetExpCS__Group_0__0 : rule__PrefixedLetExpCS__Group_0__0__Impl rule__PrefixedLetExpCS__Group_0__1 ;
    public final void rule__PrefixedLetExpCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14380:1: ( rule__PrefixedLetExpCS__Group_0__0__Impl rule__PrefixedLetExpCS__Group_0__1 )
            // InternalImperativeOCL.g:14381:2: rule__PrefixedLetExpCS__Group_0__0__Impl rule__PrefixedLetExpCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__PrefixedLetExpCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__0"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:14388:1: rule__PrefixedLetExpCS__Group_0__0__Impl : ( () ) ;
    public final void rule__PrefixedLetExpCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14392:1: ( ( () ) )
            // InternalImperativeOCL.g:14393:1: ( () )
            {
            // InternalImperativeOCL.g:14393:1: ( () )
            // InternalImperativeOCL.g:14394:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0());
            }
            // InternalImperativeOCL.g:14395:1: ()
            // InternalImperativeOCL.g:14397:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__0__Impl"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__1"
    // InternalImperativeOCL.g:14407:1: rule__PrefixedLetExpCS__Group_0__1 : rule__PrefixedLetExpCS__Group_0__1__Impl rule__PrefixedLetExpCS__Group_0__2 ;
    public final void rule__PrefixedLetExpCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14411:1: ( rule__PrefixedLetExpCS__Group_0__1__Impl rule__PrefixedLetExpCS__Group_0__2 )
            // InternalImperativeOCL.g:14412:2: rule__PrefixedLetExpCS__Group_0__1__Impl rule__PrefixedLetExpCS__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__PrefixedLetExpCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__1"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:14419:1: rule__PrefixedLetExpCS__Group_0__1__Impl : ( ( rule__PrefixedLetExpCS__NameAssignment_0_1 ) ) ;
    public final void rule__PrefixedLetExpCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14423:1: ( ( ( rule__PrefixedLetExpCS__NameAssignment_0_1 ) ) )
            // InternalImperativeOCL.g:14424:1: ( ( rule__PrefixedLetExpCS__NameAssignment_0_1 ) )
            {
            // InternalImperativeOCL.g:14424:1: ( ( rule__PrefixedLetExpCS__NameAssignment_0_1 ) )
            // InternalImperativeOCL.g:14425:1: ( rule__PrefixedLetExpCS__NameAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getNameAssignment_0_1());
            }
            // InternalImperativeOCL.g:14426:1: ( rule__PrefixedLetExpCS__NameAssignment_0_1 )
            // InternalImperativeOCL.g:14426:2: rule__PrefixedLetExpCS__NameAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__NameAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getNameAssignment_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__1__Impl"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__2"
    // InternalImperativeOCL.g:14436:1: rule__PrefixedLetExpCS__Group_0__2 : rule__PrefixedLetExpCS__Group_0__2__Impl ;
    public final void rule__PrefixedLetExpCS__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14440:1: ( rule__PrefixedLetExpCS__Group_0__2__Impl )
            // InternalImperativeOCL.g:14441:2: rule__PrefixedLetExpCS__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__2"


    // $ANTLR start "rule__PrefixedLetExpCS__Group_0__2__Impl"
    // InternalImperativeOCL.g:14447:1: rule__PrefixedLetExpCS__Group_0__2__Impl : ( ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 ) ) ;
    public final void rule__PrefixedLetExpCS__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14451:1: ( ( ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 ) ) )
            // InternalImperativeOCL.g:14452:1: ( ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 ) )
            {
            // InternalImperativeOCL.g:14452:1: ( ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 ) )
            // InternalImperativeOCL.g:14453:1: ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightAssignment_0_2());
            }
            // InternalImperativeOCL.g:14454:1: ( rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 )
            // InternalImperativeOCL.g:14454:2: rule__PrefixedLetExpCS__OwnedRightAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedLetExpCS__OwnedRightAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightAssignment_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__Group_0__2__Impl"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__0"
    // InternalImperativeOCL.g:14470:1: rule__PrefixedPrimaryExpCS__Group_0__0 : rule__PrefixedPrimaryExpCS__Group_0__0__Impl rule__PrefixedPrimaryExpCS__Group_0__1 ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14474:1: ( rule__PrefixedPrimaryExpCS__Group_0__0__Impl rule__PrefixedPrimaryExpCS__Group_0__1 )
            // InternalImperativeOCL.g:14475:2: rule__PrefixedPrimaryExpCS__Group_0__0__Impl rule__PrefixedPrimaryExpCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__PrefixedPrimaryExpCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__0"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:14482:1: rule__PrefixedPrimaryExpCS__Group_0__0__Impl : ( () ) ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14486:1: ( ( () ) )
            // InternalImperativeOCL.g:14487:1: ( () )
            {
            // InternalImperativeOCL.g:14487:1: ( () )
            // InternalImperativeOCL.g:14488:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0());
            }
            // InternalImperativeOCL.g:14489:1: ()
            // InternalImperativeOCL.g:14491:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__0__Impl"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__1"
    // InternalImperativeOCL.g:14501:1: rule__PrefixedPrimaryExpCS__Group_0__1 : rule__PrefixedPrimaryExpCS__Group_0__1__Impl rule__PrefixedPrimaryExpCS__Group_0__2 ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14505:1: ( rule__PrefixedPrimaryExpCS__Group_0__1__Impl rule__PrefixedPrimaryExpCS__Group_0__2 )
            // InternalImperativeOCL.g:14506:2: rule__PrefixedPrimaryExpCS__Group_0__1__Impl rule__PrefixedPrimaryExpCS__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__PrefixedPrimaryExpCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__1"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:14513:1: rule__PrefixedPrimaryExpCS__Group_0__1__Impl : ( ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 ) ) ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14517:1: ( ( ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 ) ) )
            // InternalImperativeOCL.g:14518:1: ( ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 ) )
            {
            // InternalImperativeOCL.g:14518:1: ( ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 ) )
            // InternalImperativeOCL.g:14519:1: ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameAssignment_0_1());
            }
            // InternalImperativeOCL.g:14520:1: ( rule__PrefixedPrimaryExpCS__NameAssignment_0_1 )
            // InternalImperativeOCL.g:14520:2: rule__PrefixedPrimaryExpCS__NameAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__NameAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameAssignment_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__1__Impl"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__2"
    // InternalImperativeOCL.g:14530:1: rule__PrefixedPrimaryExpCS__Group_0__2 : rule__PrefixedPrimaryExpCS__Group_0__2__Impl ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14534:1: ( rule__PrefixedPrimaryExpCS__Group_0__2__Impl )
            // InternalImperativeOCL.g:14535:2: rule__PrefixedPrimaryExpCS__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__2"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__Group_0__2__Impl"
    // InternalImperativeOCL.g:14541:1: rule__PrefixedPrimaryExpCS__Group_0__2__Impl : ( ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 ) ) ;
    public final void rule__PrefixedPrimaryExpCS__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14545:1: ( ( ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 ) ) )
            // InternalImperativeOCL.g:14546:1: ( ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 ) )
            {
            // InternalImperativeOCL.g:14546:1: ( ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 ) )
            // InternalImperativeOCL.g:14547:1: ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightAssignment_0_2());
            }
            // InternalImperativeOCL.g:14548:1: ( rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 )
            // InternalImperativeOCL.g:14548:2: rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightAssignment_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__Group_0__2__Impl"


    // $ANTLR start "rule__NameExpCS__Group__0"
    // InternalImperativeOCL.g:14564:1: rule__NameExpCS__Group__0 : rule__NameExpCS__Group__0__Impl rule__NameExpCS__Group__1 ;
    public final void rule__NameExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14568:1: ( rule__NameExpCS__Group__0__Impl rule__NameExpCS__Group__1 )
            // InternalImperativeOCL.g:14569:2: rule__NameExpCS__Group__0__Impl rule__NameExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__NameExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__0"


    // $ANTLR start "rule__NameExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:14576:1: rule__NameExpCS__Group__0__Impl : ( ( rule__NameExpCS__OwnedPathNameAssignment_0 ) ) ;
    public final void rule__NameExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14580:1: ( ( ( rule__NameExpCS__OwnedPathNameAssignment_0 ) ) )
            // InternalImperativeOCL.g:14581:1: ( ( rule__NameExpCS__OwnedPathNameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:14581:1: ( ( rule__NameExpCS__OwnedPathNameAssignment_0 ) )
            // InternalImperativeOCL.g:14582:1: ( rule__NameExpCS__OwnedPathNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedPathNameAssignment_0());
            }
            // InternalImperativeOCL.g:14583:1: ( rule__NameExpCS__OwnedPathNameAssignment_0 )
            // InternalImperativeOCL.g:14583:2: rule__NameExpCS__OwnedPathNameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__OwnedPathNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedPathNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__0__Impl"


    // $ANTLR start "rule__NameExpCS__Group__1"
    // InternalImperativeOCL.g:14593:1: rule__NameExpCS__Group__1 : rule__NameExpCS__Group__1__Impl rule__NameExpCS__Group__2 ;
    public final void rule__NameExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14597:1: ( rule__NameExpCS__Group__1__Impl rule__NameExpCS__Group__2 )
            // InternalImperativeOCL.g:14598:2: rule__NameExpCS__Group__1__Impl rule__NameExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__NameExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__1"


    // $ANTLR start "rule__NameExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:14605:1: rule__NameExpCS__Group__1__Impl : ( ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )* ) ;
    public final void rule__NameExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14609:1: ( ( ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )* ) )
            // InternalImperativeOCL.g:14610:1: ( ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )* )
            {
            // InternalImperativeOCL.g:14610:1: ( ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )* )
            // InternalImperativeOCL.g:14611:1: ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesAssignment_1());
            }
            // InternalImperativeOCL.g:14612:1: ( rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==102) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalImperativeOCL.g:14612:2: rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__1__Impl"


    // $ANTLR start "rule__NameExpCS__Group__2"
    // InternalImperativeOCL.g:14622:1: rule__NameExpCS__Group__2 : rule__NameExpCS__Group__2__Impl rule__NameExpCS__Group__3 ;
    public final void rule__NameExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14626:1: ( rule__NameExpCS__Group__2__Impl rule__NameExpCS__Group__3 )
            // InternalImperativeOCL.g:14627:2: rule__NameExpCS__Group__2__Impl rule__NameExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__NameExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__2"


    // $ANTLR start "rule__NameExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:14634:1: rule__NameExpCS__Group__2__Impl : ( ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )? ) ;
    public final void rule__NameExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14638:1: ( ( ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )? ) )
            // InternalImperativeOCL.g:14639:1: ( ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )? )
            {
            // InternalImperativeOCL.g:14639:1: ( ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )? )
            // InternalImperativeOCL.g:14640:1: ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseAssignment_2());
            }
            // InternalImperativeOCL.g:14641:1: ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalImperativeOCL.g:14641:2: rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__2__Impl"


    // $ANTLR start "rule__NameExpCS__Group__3"
    // InternalImperativeOCL.g:14651:1: rule__NameExpCS__Group__3 : rule__NameExpCS__Group__3__Impl rule__NameExpCS__Group__4 ;
    public final void rule__NameExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14655:1: ( rule__NameExpCS__Group__3__Impl rule__NameExpCS__Group__4 )
            // InternalImperativeOCL.g:14656:2: rule__NameExpCS__Group__3__Impl rule__NameExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__NameExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__3"


    // $ANTLR start "rule__NameExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:14663:1: rule__NameExpCS__Group__3__Impl : ( ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )? ) ;
    public final void rule__NameExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14667:1: ( ( ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )? ) )
            // InternalImperativeOCL.g:14668:1: ( ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )? )
            {
            // InternalImperativeOCL.g:14668:1: ( ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )? )
            // InternalImperativeOCL.g:14669:1: ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_3());
            }
            // InternalImperativeOCL.g:14670:1: ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalImperativeOCL.g:14670:2: rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__3__Impl"


    // $ANTLR start "rule__NameExpCS__Group__4"
    // InternalImperativeOCL.g:14680:1: rule__NameExpCS__Group__4 : rule__NameExpCS__Group__4__Impl ;
    public final void rule__NameExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14684:1: ( rule__NameExpCS__Group__4__Impl )
            // InternalImperativeOCL.g:14685:2: rule__NameExpCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__4"


    // $ANTLR start "rule__NameExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:14691:1: rule__NameExpCS__Group__4__Impl : ( ( rule__NameExpCS__Group_4__0 )? ) ;
    public final void rule__NameExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14695:1: ( ( ( rule__NameExpCS__Group_4__0 )? ) )
            // InternalImperativeOCL.g:14696:1: ( ( rule__NameExpCS__Group_4__0 )? )
            {
            // InternalImperativeOCL.g:14696:1: ( ( rule__NameExpCS__Group_4__0 )? )
            // InternalImperativeOCL.g:14697:1: ( rule__NameExpCS__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getGroup_4());
            }
            // InternalImperativeOCL.g:14698:1: ( rule__NameExpCS__Group_4__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==82) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalImperativeOCL.g:14698:2: rule__NameExpCS__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NameExpCS__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getGroup_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group__4__Impl"


    // $ANTLR start "rule__NameExpCS__Group_4__0"
    // InternalImperativeOCL.g:14718:1: rule__NameExpCS__Group_4__0 : rule__NameExpCS__Group_4__0__Impl rule__NameExpCS__Group_4__1 ;
    public final void rule__NameExpCS__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14722:1: ( rule__NameExpCS__Group_4__0__Impl rule__NameExpCS__Group_4__1 )
            // InternalImperativeOCL.g:14723:2: rule__NameExpCS__Group_4__0__Impl rule__NameExpCS__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__NameExpCS__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group_4__0"


    // $ANTLR start "rule__NameExpCS__Group_4__0__Impl"
    // InternalImperativeOCL.g:14730:1: rule__NameExpCS__Group_4__0__Impl : ( ( rule__NameExpCS__IsPreAssignment_4_0 ) ) ;
    public final void rule__NameExpCS__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14734:1: ( ( ( rule__NameExpCS__IsPreAssignment_4_0 ) ) )
            // InternalImperativeOCL.g:14735:1: ( ( rule__NameExpCS__IsPreAssignment_4_0 ) )
            {
            // InternalImperativeOCL.g:14735:1: ( ( rule__NameExpCS__IsPreAssignment_4_0 ) )
            // InternalImperativeOCL.g:14736:1: ( rule__NameExpCS__IsPreAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getIsPreAssignment_4_0());
            }
            // InternalImperativeOCL.g:14737:1: ( rule__NameExpCS__IsPreAssignment_4_0 )
            // InternalImperativeOCL.g:14737:2: rule__NameExpCS__IsPreAssignment_4_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__IsPreAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getIsPreAssignment_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group_4__0__Impl"


    // $ANTLR start "rule__NameExpCS__Group_4__1"
    // InternalImperativeOCL.g:14747:1: rule__NameExpCS__Group_4__1 : rule__NameExpCS__Group_4__1__Impl ;
    public final void rule__NameExpCS__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14751:1: ( rule__NameExpCS__Group_4__1__Impl )
            // InternalImperativeOCL.g:14752:2: rule__NameExpCS__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NameExpCS__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group_4__1"


    // $ANTLR start "rule__NameExpCS__Group_4__1__Impl"
    // InternalImperativeOCL.g:14758:1: rule__NameExpCS__Group_4__1__Impl : ( 'pre' ) ;
    public final void rule__NameExpCS__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14762:1: ( ( 'pre' ) )
            // InternalImperativeOCL.g:14763:1: ( 'pre' )
            {
            // InternalImperativeOCL.g:14763:1: ( 'pre' )
            // InternalImperativeOCL.g:14764:1: 'pre'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());
            }
            match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__Group_4__1__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__0"
    // InternalImperativeOCL.g:14781:1: rule__CurlyBracketedClauseCS__Group__0 : rule__CurlyBracketedClauseCS__Group__0__Impl rule__CurlyBracketedClauseCS__Group__1 ;
    public final void rule__CurlyBracketedClauseCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14785:1: ( rule__CurlyBracketedClauseCS__Group__0__Impl rule__CurlyBracketedClauseCS__Group__1 )
            // InternalImperativeOCL.g:14786:2: rule__CurlyBracketedClauseCS__Group__0__Impl rule__CurlyBracketedClauseCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__CurlyBracketedClauseCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__0"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__0__Impl"
    // InternalImperativeOCL.g:14793:1: rule__CurlyBracketedClauseCS__Group__0__Impl : ( () ) ;
    public final void rule__CurlyBracketedClauseCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14797:1: ( ( () ) )
            // InternalImperativeOCL.g:14798:1: ( () )
            {
            // InternalImperativeOCL.g:14798:1: ( () )
            // InternalImperativeOCL.g:14799:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0());
            }
            // InternalImperativeOCL.g:14800:1: ()
            // InternalImperativeOCL.g:14802:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__0__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__1"
    // InternalImperativeOCL.g:14812:1: rule__CurlyBracketedClauseCS__Group__1 : rule__CurlyBracketedClauseCS__Group__1__Impl rule__CurlyBracketedClauseCS__Group__2 ;
    public final void rule__CurlyBracketedClauseCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14816:1: ( rule__CurlyBracketedClauseCS__Group__1__Impl rule__CurlyBracketedClauseCS__Group__2 )
            // InternalImperativeOCL.g:14817:2: rule__CurlyBracketedClauseCS__Group__1__Impl rule__CurlyBracketedClauseCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__CurlyBracketedClauseCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__1"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__1__Impl"
    // InternalImperativeOCL.g:14824:1: rule__CurlyBracketedClauseCS__Group__1__Impl : ( '{' ) ;
    public final void rule__CurlyBracketedClauseCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14828:1: ( ( '{' ) )
            // InternalImperativeOCL.g:14829:1: ( '{' )
            {
            // InternalImperativeOCL.g:14829:1: ( '{' )
            // InternalImperativeOCL.g:14830:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__1__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__2"
    // InternalImperativeOCL.g:14843:1: rule__CurlyBracketedClauseCS__Group__2 : rule__CurlyBracketedClauseCS__Group__2__Impl rule__CurlyBracketedClauseCS__Group__3 ;
    public final void rule__CurlyBracketedClauseCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14847:1: ( rule__CurlyBracketedClauseCS__Group__2__Impl rule__CurlyBracketedClauseCS__Group__3 )
            // InternalImperativeOCL.g:14848:2: rule__CurlyBracketedClauseCS__Group__2__Impl rule__CurlyBracketedClauseCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__CurlyBracketedClauseCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__2"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__2__Impl"
    // InternalImperativeOCL.g:14855:1: rule__CurlyBracketedClauseCS__Group__2__Impl : ( ( rule__CurlyBracketedClauseCS__Group_2__0 )? ) ;
    public final void rule__CurlyBracketedClauseCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14859:1: ( ( ( rule__CurlyBracketedClauseCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:14860:1: ( ( rule__CurlyBracketedClauseCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:14860:1: ( ( rule__CurlyBracketedClauseCS__Group_2__0 )? )
            // InternalImperativeOCL.g:14861:1: ( rule__CurlyBracketedClauseCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:14862:1: ( rule__CurlyBracketedClauseCS__Group_2__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( ((LA106_0>=RULE_SINGLE_QUOTED_STRING && LA106_0<=RULE_ESCAPED_ID)) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalImperativeOCL.g:14862:2: rule__CurlyBracketedClauseCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CurlyBracketedClauseCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__2__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__3"
    // InternalImperativeOCL.g:14872:1: rule__CurlyBracketedClauseCS__Group__3 : rule__CurlyBracketedClauseCS__Group__3__Impl ;
    public final void rule__CurlyBracketedClauseCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14876:1: ( rule__CurlyBracketedClauseCS__Group__3__Impl )
            // InternalImperativeOCL.g:14877:2: rule__CurlyBracketedClauseCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__3"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group__3__Impl"
    // InternalImperativeOCL.g:14883:1: rule__CurlyBracketedClauseCS__Group__3__Impl : ( '}' ) ;
    public final void rule__CurlyBracketedClauseCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14887:1: ( ( '}' ) )
            // InternalImperativeOCL.g:14888:1: ( '}' )
            {
            // InternalImperativeOCL.g:14888:1: ( '}' )
            // InternalImperativeOCL.g:14889:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group__3__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2__0"
    // InternalImperativeOCL.g:14910:1: rule__CurlyBracketedClauseCS__Group_2__0 : rule__CurlyBracketedClauseCS__Group_2__0__Impl rule__CurlyBracketedClauseCS__Group_2__1 ;
    public final void rule__CurlyBracketedClauseCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14914:1: ( rule__CurlyBracketedClauseCS__Group_2__0__Impl rule__CurlyBracketedClauseCS__Group_2__1 )
            // InternalImperativeOCL.g:14915:2: rule__CurlyBracketedClauseCS__Group_2__0__Impl rule__CurlyBracketedClauseCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__CurlyBracketedClauseCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2__0"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:14922:1: rule__CurlyBracketedClauseCS__Group_2__0__Impl : ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 ) ) ;
    public final void rule__CurlyBracketedClauseCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14926:1: ( ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:14927:1: ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:14927:1: ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 ) )
            // InternalImperativeOCL.g:14928:1: ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0());
            }
            // InternalImperativeOCL.g:14929:1: ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 )
            // InternalImperativeOCL.g:14929:2: rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2__0__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2__1"
    // InternalImperativeOCL.g:14939:1: rule__CurlyBracketedClauseCS__Group_2__1 : rule__CurlyBracketedClauseCS__Group_2__1__Impl ;
    public final void rule__CurlyBracketedClauseCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14943:1: ( rule__CurlyBracketedClauseCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:14944:2: rule__CurlyBracketedClauseCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2__1"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:14950:1: rule__CurlyBracketedClauseCS__Group_2__1__Impl : ( ( rule__CurlyBracketedClauseCS__Group_2_1__0 )* ) ;
    public final void rule__CurlyBracketedClauseCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14954:1: ( ( ( rule__CurlyBracketedClauseCS__Group_2_1__0 )* ) )
            // InternalImperativeOCL.g:14955:1: ( ( rule__CurlyBracketedClauseCS__Group_2_1__0 )* )
            {
            // InternalImperativeOCL.g:14955:1: ( ( rule__CurlyBracketedClauseCS__Group_2_1__0 )* )
            // InternalImperativeOCL.g:14956:1: ( rule__CurlyBracketedClauseCS__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_1());
            }
            // InternalImperativeOCL.g:14957:1: ( rule__CurlyBracketedClauseCS__Group_2_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==67) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalImperativeOCL.g:14957:2: rule__CurlyBracketedClauseCS__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__CurlyBracketedClauseCS__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2__1__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2_1__0"
    // InternalImperativeOCL.g:14971:1: rule__CurlyBracketedClauseCS__Group_2_1__0 : rule__CurlyBracketedClauseCS__Group_2_1__0__Impl rule__CurlyBracketedClauseCS__Group_2_1__1 ;
    public final void rule__CurlyBracketedClauseCS__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14975:1: ( rule__CurlyBracketedClauseCS__Group_2_1__0__Impl rule__CurlyBracketedClauseCS__Group_2_1__1 )
            // InternalImperativeOCL.g:14976:2: rule__CurlyBracketedClauseCS__Group_2_1__0__Impl rule__CurlyBracketedClauseCS__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__CurlyBracketedClauseCS__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2_1__0"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2_1__0__Impl"
    // InternalImperativeOCL.g:14983:1: rule__CurlyBracketedClauseCS__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__CurlyBracketedClauseCS__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:14987:1: ( ( ',' ) )
            // InternalImperativeOCL.g:14988:1: ( ',' )
            {
            // InternalImperativeOCL.g:14988:1: ( ',' )
            // InternalImperativeOCL.g:14989:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2_1__0__Impl"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2_1__1"
    // InternalImperativeOCL.g:15002:1: rule__CurlyBracketedClauseCS__Group_2_1__1 : rule__CurlyBracketedClauseCS__Group_2_1__1__Impl ;
    public final void rule__CurlyBracketedClauseCS__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15006:1: ( rule__CurlyBracketedClauseCS__Group_2_1__1__Impl )
            // InternalImperativeOCL.g:15007:2: rule__CurlyBracketedClauseCS__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2_1__1"


    // $ANTLR start "rule__CurlyBracketedClauseCS__Group_2_1__1__Impl"
    // InternalImperativeOCL.g:15013:1: rule__CurlyBracketedClauseCS__Group_2_1__1__Impl : ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 ) ) ;
    public final void rule__CurlyBracketedClauseCS__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15017:1: ( ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 ) ) )
            // InternalImperativeOCL.g:15018:1: ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 ) )
            {
            // InternalImperativeOCL.g:15018:1: ( ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 ) )
            // InternalImperativeOCL.g:15019:1: ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_1_1());
            }
            // InternalImperativeOCL.g:15020:1: ( rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 )
            // InternalImperativeOCL.g:15020:2: rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__Group_2_1__1__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__0"
    // InternalImperativeOCL.g:15034:1: rule__RoundBracketedClauseCS__Group__0 : rule__RoundBracketedClauseCS__Group__0__Impl rule__RoundBracketedClauseCS__Group__1 ;
    public final void rule__RoundBracketedClauseCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15038:1: ( rule__RoundBracketedClauseCS__Group__0__Impl rule__RoundBracketedClauseCS__Group__1 )
            // InternalImperativeOCL.g:15039:2: rule__RoundBracketedClauseCS__Group__0__Impl rule__RoundBracketedClauseCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__RoundBracketedClauseCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__0"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__0__Impl"
    // InternalImperativeOCL.g:15046:1: rule__RoundBracketedClauseCS__Group__0__Impl : ( () ) ;
    public final void rule__RoundBracketedClauseCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15050:1: ( ( () ) )
            // InternalImperativeOCL.g:15051:1: ( () )
            {
            // InternalImperativeOCL.g:15051:1: ( () )
            // InternalImperativeOCL.g:15052:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0());
            }
            // InternalImperativeOCL.g:15053:1: ()
            // InternalImperativeOCL.g:15055:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__0__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__1"
    // InternalImperativeOCL.g:15065:1: rule__RoundBracketedClauseCS__Group__1 : rule__RoundBracketedClauseCS__Group__1__Impl rule__RoundBracketedClauseCS__Group__2 ;
    public final void rule__RoundBracketedClauseCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15069:1: ( rule__RoundBracketedClauseCS__Group__1__Impl rule__RoundBracketedClauseCS__Group__2 )
            // InternalImperativeOCL.g:15070:2: rule__RoundBracketedClauseCS__Group__1__Impl rule__RoundBracketedClauseCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__RoundBracketedClauseCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__1"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__1__Impl"
    // InternalImperativeOCL.g:15077:1: rule__RoundBracketedClauseCS__Group__1__Impl : ( '(' ) ;
    public final void rule__RoundBracketedClauseCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15081:1: ( ( '(' ) )
            // InternalImperativeOCL.g:15082:1: ( '(' )
            {
            // InternalImperativeOCL.g:15082:1: ( '(' )
            // InternalImperativeOCL.g:15083:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__1__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__2"
    // InternalImperativeOCL.g:15096:1: rule__RoundBracketedClauseCS__Group__2 : rule__RoundBracketedClauseCS__Group__2__Impl rule__RoundBracketedClauseCS__Group__3 ;
    public final void rule__RoundBracketedClauseCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15100:1: ( rule__RoundBracketedClauseCS__Group__2__Impl rule__RoundBracketedClauseCS__Group__3 )
            // InternalImperativeOCL.g:15101:2: rule__RoundBracketedClauseCS__Group__2__Impl rule__RoundBracketedClauseCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__RoundBracketedClauseCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__2"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__2__Impl"
    // InternalImperativeOCL.g:15108:1: rule__RoundBracketedClauseCS__Group__2__Impl : ( ( rule__RoundBracketedClauseCS__Group_2__0 )? ) ;
    public final void rule__RoundBracketedClauseCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15112:1: ( ( ( rule__RoundBracketedClauseCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:15113:1: ( ( rule__RoundBracketedClauseCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:15113:1: ( ( rule__RoundBracketedClauseCS__Group_2__0 )? )
            // InternalImperativeOCL.g:15114:1: ( rule__RoundBracketedClauseCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:15115:1: ( rule__RoundBracketedClauseCS__Group_2__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=RULE_INT && LA108_0<=RULE_ESCAPED_ID)||(LA108_0>=16 && LA108_0<=23)||(LA108_0>=40 && LA108_0<=54)||(LA108_0>=63 && LA108_0<=64)||LA108_0==66||LA108_0==68||LA108_0==71||LA108_0==73||(LA108_0>=75 && LA108_0<=78)||LA108_0==81||LA108_0==83||(LA108_0>=85 && LA108_0<=86)||LA108_0==90||(LA108_0>=92 && LA108_0<=94)||LA108_0==97||(LA108_0>=99 && LA108_0<=100)||LA108_0==105||(LA108_0>=108 && LA108_0<=109)||(LA108_0>=113 && LA108_0<=116)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalImperativeOCL.g:15115:2: rule__RoundBracketedClauseCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RoundBracketedClauseCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__2__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__3"
    // InternalImperativeOCL.g:15125:1: rule__RoundBracketedClauseCS__Group__3 : rule__RoundBracketedClauseCS__Group__3__Impl ;
    public final void rule__RoundBracketedClauseCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15129:1: ( rule__RoundBracketedClauseCS__Group__3__Impl )
            // InternalImperativeOCL.g:15130:2: rule__RoundBracketedClauseCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__3"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group__3__Impl"
    // InternalImperativeOCL.g:15136:1: rule__RoundBracketedClauseCS__Group__3__Impl : ( ')' ) ;
    public final void rule__RoundBracketedClauseCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15140:1: ( ( ')' ) )
            // InternalImperativeOCL.g:15141:1: ( ')' )
            {
            // InternalImperativeOCL.g:15141:1: ( ')' )
            // InternalImperativeOCL.g:15142:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group__3__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__0"
    // InternalImperativeOCL.g:15163:1: rule__RoundBracketedClauseCS__Group_2__0 : rule__RoundBracketedClauseCS__Group_2__0__Impl rule__RoundBracketedClauseCS__Group_2__1 ;
    public final void rule__RoundBracketedClauseCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15167:1: ( rule__RoundBracketedClauseCS__Group_2__0__Impl rule__RoundBracketedClauseCS__Group_2__1 )
            // InternalImperativeOCL.g:15168:2: rule__RoundBracketedClauseCS__Group_2__0__Impl rule__RoundBracketedClauseCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__RoundBracketedClauseCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__0"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:15175:1: rule__RoundBracketedClauseCS__Group_2__0__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 ) ) ;
    public final void rule__RoundBracketedClauseCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15179:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 ) ) )
            // InternalImperativeOCL.g:15180:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 ) )
            {
            // InternalImperativeOCL.g:15180:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 ) )
            // InternalImperativeOCL.g:15181:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_0());
            }
            // InternalImperativeOCL.g:15182:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 )
            // InternalImperativeOCL.g:15182:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__0__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__1"
    // InternalImperativeOCL.g:15192:1: rule__RoundBracketedClauseCS__Group_2__1 : rule__RoundBracketedClauseCS__Group_2__1__Impl rule__RoundBracketedClauseCS__Group_2__2 ;
    public final void rule__RoundBracketedClauseCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15196:1: ( rule__RoundBracketedClauseCS__Group_2__1__Impl rule__RoundBracketedClauseCS__Group_2__2 )
            // InternalImperativeOCL.g:15197:2: rule__RoundBracketedClauseCS__Group_2__1__Impl rule__RoundBracketedClauseCS__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__RoundBracketedClauseCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__1"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:15204:1: rule__RoundBracketedClauseCS__Group_2__1__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )* ) ;
    public final void rule__RoundBracketedClauseCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15208:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )* ) )
            // InternalImperativeOCL.g:15209:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )* )
            {
            // InternalImperativeOCL.g:15209:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )* )
            // InternalImperativeOCL.g:15210:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_1());
            }
            // InternalImperativeOCL.g:15211:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==67) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalImperativeOCL.g:15211:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__1__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__2"
    // InternalImperativeOCL.g:15221:1: rule__RoundBracketedClauseCS__Group_2__2 : rule__RoundBracketedClauseCS__Group_2__2__Impl rule__RoundBracketedClauseCS__Group_2__3 ;
    public final void rule__RoundBracketedClauseCS__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15225:1: ( rule__RoundBracketedClauseCS__Group_2__2__Impl rule__RoundBracketedClauseCS__Group_2__3 )
            // InternalImperativeOCL.g:15226:2: rule__RoundBracketedClauseCS__Group_2__2__Impl rule__RoundBracketedClauseCS__Group_2__3
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__RoundBracketedClauseCS__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__2"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__2__Impl"
    // InternalImperativeOCL.g:15233:1: rule__RoundBracketedClauseCS__Group_2__2__Impl : ( ( rule__RoundBracketedClauseCS__Group_2_2__0 )? ) ;
    public final void rule__RoundBracketedClauseCS__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15237:1: ( ( ( rule__RoundBracketedClauseCS__Group_2_2__0 )? ) )
            // InternalImperativeOCL.g:15238:1: ( ( rule__RoundBracketedClauseCS__Group_2_2__0 )? )
            {
            // InternalImperativeOCL.g:15238:1: ( ( rule__RoundBracketedClauseCS__Group_2_2__0 )? )
            // InternalImperativeOCL.g:15239:1: ( rule__RoundBracketedClauseCS__Group_2_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_2());
            }
            // InternalImperativeOCL.g:15240:1: ( rule__RoundBracketedClauseCS__Group_2_2__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==79) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalImperativeOCL.g:15240:2: rule__RoundBracketedClauseCS__Group_2_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RoundBracketedClauseCS__Group_2_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__2__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__3"
    // InternalImperativeOCL.g:15250:1: rule__RoundBracketedClauseCS__Group_2__3 : rule__RoundBracketedClauseCS__Group_2__3__Impl ;
    public final void rule__RoundBracketedClauseCS__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15254:1: ( rule__RoundBracketedClauseCS__Group_2__3__Impl )
            // InternalImperativeOCL.g:15255:2: rule__RoundBracketedClauseCS__Group_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__3"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2__3__Impl"
    // InternalImperativeOCL.g:15261:1: rule__RoundBracketedClauseCS__Group_2__3__Impl : ( ( rule__RoundBracketedClauseCS__Group_2_3__0 )* ) ;
    public final void rule__RoundBracketedClauseCS__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15265:1: ( ( ( rule__RoundBracketedClauseCS__Group_2_3__0 )* ) )
            // InternalImperativeOCL.g:15266:1: ( ( rule__RoundBracketedClauseCS__Group_2_3__0 )* )
            {
            // InternalImperativeOCL.g:15266:1: ( ( rule__RoundBracketedClauseCS__Group_2_3__0 )* )
            // InternalImperativeOCL.g:15267:1: ( rule__RoundBracketedClauseCS__Group_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_3());
            }
            // InternalImperativeOCL.g:15268:1: ( rule__RoundBracketedClauseCS__Group_2_3__0 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==80) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalImperativeOCL.g:15268:2: rule__RoundBracketedClauseCS__Group_2_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__RoundBracketedClauseCS__Group_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2__3__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_2__0"
    // InternalImperativeOCL.g:15286:1: rule__RoundBracketedClauseCS__Group_2_2__0 : rule__RoundBracketedClauseCS__Group_2_2__0__Impl rule__RoundBracketedClauseCS__Group_2_2__1 ;
    public final void rule__RoundBracketedClauseCS__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15290:1: ( rule__RoundBracketedClauseCS__Group_2_2__0__Impl rule__RoundBracketedClauseCS__Group_2_2__1 )
            // InternalImperativeOCL.g:15291:2: rule__RoundBracketedClauseCS__Group_2_2__0__Impl rule__RoundBracketedClauseCS__Group_2_2__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__RoundBracketedClauseCS__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_2__0"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_2__0__Impl"
    // InternalImperativeOCL.g:15298:1: rule__RoundBracketedClauseCS__Group_2_2__0__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 ) ) ;
    public final void rule__RoundBracketedClauseCS__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15302:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 ) ) )
            // InternalImperativeOCL.g:15303:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 ) )
            {
            // InternalImperativeOCL.g:15303:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 ) )
            // InternalImperativeOCL.g:15304:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_0());
            }
            // InternalImperativeOCL.g:15305:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 )
            // InternalImperativeOCL.g:15305:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_2__0__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_2__1"
    // InternalImperativeOCL.g:15315:1: rule__RoundBracketedClauseCS__Group_2_2__1 : rule__RoundBracketedClauseCS__Group_2_2__1__Impl ;
    public final void rule__RoundBracketedClauseCS__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15319:1: ( rule__RoundBracketedClauseCS__Group_2_2__1__Impl )
            // InternalImperativeOCL.g:15320:2: rule__RoundBracketedClauseCS__Group_2_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_2__1"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_2__1__Impl"
    // InternalImperativeOCL.g:15326:1: rule__RoundBracketedClauseCS__Group_2_2__1__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )* ) ;
    public final void rule__RoundBracketedClauseCS__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15330:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )* ) )
            // InternalImperativeOCL.g:15331:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )* )
            {
            // InternalImperativeOCL.g:15331:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )* )
            // InternalImperativeOCL.g:15332:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_1());
            }
            // InternalImperativeOCL.g:15333:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==67) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalImperativeOCL.g:15333:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_2__1__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_3__0"
    // InternalImperativeOCL.g:15347:1: rule__RoundBracketedClauseCS__Group_2_3__0 : rule__RoundBracketedClauseCS__Group_2_3__0__Impl rule__RoundBracketedClauseCS__Group_2_3__1 ;
    public final void rule__RoundBracketedClauseCS__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15351:1: ( rule__RoundBracketedClauseCS__Group_2_3__0__Impl rule__RoundBracketedClauseCS__Group_2_3__1 )
            // InternalImperativeOCL.g:15352:2: rule__RoundBracketedClauseCS__Group_2_3__0__Impl rule__RoundBracketedClauseCS__Group_2_3__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__RoundBracketedClauseCS__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_3__0"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_3__0__Impl"
    // InternalImperativeOCL.g:15359:1: rule__RoundBracketedClauseCS__Group_2_3__0__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 ) ) ;
    public final void rule__RoundBracketedClauseCS__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15363:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 ) ) )
            // InternalImperativeOCL.g:15364:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 ) )
            {
            // InternalImperativeOCL.g:15364:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 ) )
            // InternalImperativeOCL.g:15365:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_0());
            }
            // InternalImperativeOCL.g:15366:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 )
            // InternalImperativeOCL.g:15366:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_3__0__Impl"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_3__1"
    // InternalImperativeOCL.g:15376:1: rule__RoundBracketedClauseCS__Group_2_3__1 : rule__RoundBracketedClauseCS__Group_2_3__1__Impl ;
    public final void rule__RoundBracketedClauseCS__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15380:1: ( rule__RoundBracketedClauseCS__Group_2_3__1__Impl )
            // InternalImperativeOCL.g:15381:2: rule__RoundBracketedClauseCS__Group_2_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RoundBracketedClauseCS__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_3__1"


    // $ANTLR start "rule__RoundBracketedClauseCS__Group_2_3__1__Impl"
    // InternalImperativeOCL.g:15387:1: rule__RoundBracketedClauseCS__Group_2_3__1__Impl : ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )* ) ;
    public final void rule__RoundBracketedClauseCS__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15391:1: ( ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )* ) )
            // InternalImperativeOCL.g:15392:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )* )
            {
            // InternalImperativeOCL.g:15392:1: ( ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )* )
            // InternalImperativeOCL.g:15393:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_1());
            }
            // InternalImperativeOCL.g:15394:1: ( rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==67) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalImperativeOCL.g:15394:2: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__Group_2_3__1__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__0"
    // InternalImperativeOCL.g:15408:1: rule__SquareBracketedClauseCS__Group__0 : rule__SquareBracketedClauseCS__Group__0__Impl rule__SquareBracketedClauseCS__Group__1 ;
    public final void rule__SquareBracketedClauseCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15412:1: ( rule__SquareBracketedClauseCS__Group__0__Impl rule__SquareBracketedClauseCS__Group__1 )
            // InternalImperativeOCL.g:15413:2: rule__SquareBracketedClauseCS__Group__0__Impl rule__SquareBracketedClauseCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SquareBracketedClauseCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__0"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__0__Impl"
    // InternalImperativeOCL.g:15420:1: rule__SquareBracketedClauseCS__Group__0__Impl : ( '[' ) ;
    public final void rule__SquareBracketedClauseCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15424:1: ( ( '[' ) )
            // InternalImperativeOCL.g:15425:1: ( '[' )
            {
            // InternalImperativeOCL.g:15425:1: ( '[' )
            // InternalImperativeOCL.g:15426:1: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());
            }
            match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__0__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__1"
    // InternalImperativeOCL.g:15439:1: rule__SquareBracketedClauseCS__Group__1 : rule__SquareBracketedClauseCS__Group__1__Impl rule__SquareBracketedClauseCS__Group__2 ;
    public final void rule__SquareBracketedClauseCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15443:1: ( rule__SquareBracketedClauseCS__Group__1__Impl rule__SquareBracketedClauseCS__Group__2 )
            // InternalImperativeOCL.g:15444:2: rule__SquareBracketedClauseCS__Group__1__Impl rule__SquareBracketedClauseCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__SquareBracketedClauseCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__1"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__1__Impl"
    // InternalImperativeOCL.g:15451:1: rule__SquareBracketedClauseCS__Group__1__Impl : ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 ) ) ;
    public final void rule__SquareBracketedClauseCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15455:1: ( ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 ) ) )
            // InternalImperativeOCL.g:15456:1: ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 ) )
            {
            // InternalImperativeOCL.g:15456:1: ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 ) )
            // InternalImperativeOCL.g:15457:1: ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_1());
            }
            // InternalImperativeOCL.g:15458:1: ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 )
            // InternalImperativeOCL.g:15458:2: rule__SquareBracketedClauseCS__OwnedTermsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__OwnedTermsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__1__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__2"
    // InternalImperativeOCL.g:15468:1: rule__SquareBracketedClauseCS__Group__2 : rule__SquareBracketedClauseCS__Group__2__Impl rule__SquareBracketedClauseCS__Group__3 ;
    public final void rule__SquareBracketedClauseCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15472:1: ( rule__SquareBracketedClauseCS__Group__2__Impl rule__SquareBracketedClauseCS__Group__3 )
            // InternalImperativeOCL.g:15473:2: rule__SquareBracketedClauseCS__Group__2__Impl rule__SquareBracketedClauseCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__SquareBracketedClauseCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__2"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__2__Impl"
    // InternalImperativeOCL.g:15480:1: rule__SquareBracketedClauseCS__Group__2__Impl : ( ( rule__SquareBracketedClauseCS__Group_2__0 )* ) ;
    public final void rule__SquareBracketedClauseCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15484:1: ( ( ( rule__SquareBracketedClauseCS__Group_2__0 )* ) )
            // InternalImperativeOCL.g:15485:1: ( ( rule__SquareBracketedClauseCS__Group_2__0 )* )
            {
            // InternalImperativeOCL.g:15485:1: ( ( rule__SquareBracketedClauseCS__Group_2__0 )* )
            // InternalImperativeOCL.g:15486:1: ( rule__SquareBracketedClauseCS__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:15487:1: ( rule__SquareBracketedClauseCS__Group_2__0 )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==67) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalImperativeOCL.g:15487:2: rule__SquareBracketedClauseCS__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__SquareBracketedClauseCS__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__2__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__3"
    // InternalImperativeOCL.g:15497:1: rule__SquareBracketedClauseCS__Group__3 : rule__SquareBracketedClauseCS__Group__3__Impl ;
    public final void rule__SquareBracketedClauseCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15501:1: ( rule__SquareBracketedClauseCS__Group__3__Impl )
            // InternalImperativeOCL.g:15502:2: rule__SquareBracketedClauseCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__3"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group__3__Impl"
    // InternalImperativeOCL.g:15508:1: rule__SquareBracketedClauseCS__Group__3__Impl : ( ']' ) ;
    public final void rule__SquareBracketedClauseCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15512:1: ( ( ']' ) )
            // InternalImperativeOCL.g:15513:1: ( ']' )
            {
            // InternalImperativeOCL.g:15513:1: ( ']' )
            // InternalImperativeOCL.g:15514:1: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());
            }
            match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group__3__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group_2__0"
    // InternalImperativeOCL.g:15535:1: rule__SquareBracketedClauseCS__Group_2__0 : rule__SquareBracketedClauseCS__Group_2__0__Impl rule__SquareBracketedClauseCS__Group_2__1 ;
    public final void rule__SquareBracketedClauseCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15539:1: ( rule__SquareBracketedClauseCS__Group_2__0__Impl rule__SquareBracketedClauseCS__Group_2__1 )
            // InternalImperativeOCL.g:15540:2: rule__SquareBracketedClauseCS__Group_2__0__Impl rule__SquareBracketedClauseCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SquareBracketedClauseCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group_2__0"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:15547:1: rule__SquareBracketedClauseCS__Group_2__0__Impl : ( ',' ) ;
    public final void rule__SquareBracketedClauseCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15551:1: ( ( ',' ) )
            // InternalImperativeOCL.g:15552:1: ( ',' )
            {
            // InternalImperativeOCL.g:15552:1: ( ',' )
            // InternalImperativeOCL.g:15553:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group_2__0__Impl"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group_2__1"
    // InternalImperativeOCL.g:15566:1: rule__SquareBracketedClauseCS__Group_2__1 : rule__SquareBracketedClauseCS__Group_2__1__Impl ;
    public final void rule__SquareBracketedClauseCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15570:1: ( rule__SquareBracketedClauseCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:15571:2: rule__SquareBracketedClauseCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group_2__1"


    // $ANTLR start "rule__SquareBracketedClauseCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:15577:1: rule__SquareBracketedClauseCS__Group_2__1__Impl : ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 ) ) ;
    public final void rule__SquareBracketedClauseCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15581:1: ( ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:15582:1: ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:15582:1: ( ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 ) )
            // InternalImperativeOCL.g:15583:1: ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_2_1());
            }
            // InternalImperativeOCL.g:15584:1: ( rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 )
            // InternalImperativeOCL.g:15584:2: rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__Group_2__1__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0__0"
    // InternalImperativeOCL.g:15598:1: rule__NavigatingArgCS__Group_0__0 : rule__NavigatingArgCS__Group_0__0__Impl rule__NavigatingArgCS__Group_0__1 ;
    public final void rule__NavigatingArgCS__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15602:1: ( rule__NavigatingArgCS__Group_0__0__Impl rule__NavigatingArgCS__Group_0__1 )
            // InternalImperativeOCL.g:15603:2: rule__NavigatingArgCS__Group_0__0__Impl rule__NavigatingArgCS__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__NavigatingArgCS__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0__0"


    // $ANTLR start "rule__NavigatingArgCS__Group_0__0__Impl"
    // InternalImperativeOCL.g:15610:1: rule__NavigatingArgCS__Group_0__0__Impl : ( ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 ) ) ;
    public final void rule__NavigatingArgCS__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15614:1: ( ( ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 ) ) )
            // InternalImperativeOCL.g:15615:1: ( ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 ) )
            {
            // InternalImperativeOCL.g:15615:1: ( ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 ) )
            // InternalImperativeOCL.g:15616:1: ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionAssignment_0_0());
            }
            // InternalImperativeOCL.g:15617:1: ( rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 )
            // InternalImperativeOCL.g:15617:2: rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionAssignment_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0__0__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0__1"
    // InternalImperativeOCL.g:15627:1: rule__NavigatingArgCS__Group_0__1 : rule__NavigatingArgCS__Group_0__1__Impl ;
    public final void rule__NavigatingArgCS__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15631:1: ( rule__NavigatingArgCS__Group_0__1__Impl )
            // InternalImperativeOCL.g:15632:2: rule__NavigatingArgCS__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0__1"


    // $ANTLR start "rule__NavigatingArgCS__Group_0__1__Impl"
    // InternalImperativeOCL.g:15638:1: rule__NavigatingArgCS__Group_0__1__Impl : ( ( rule__NavigatingArgCS__Alternatives_0_1 )? ) ;
    public final void rule__NavigatingArgCS__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15642:1: ( ( ( rule__NavigatingArgCS__Alternatives_0_1 )? ) )
            // InternalImperativeOCL.g:15643:1: ( ( rule__NavigatingArgCS__Alternatives_0_1 )? )
            {
            // InternalImperativeOCL.g:15643:1: ( ( rule__NavigatingArgCS__Alternatives_0_1 )? )
            // InternalImperativeOCL.g:15644:1: ( rule__NavigatingArgCS__Alternatives_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getAlternatives_0_1());
            }
            // InternalImperativeOCL.g:15645:1: ( rule__NavigatingArgCS__Alternatives_0_1 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==75||LA115_0==104) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalImperativeOCL.g:15645:2: rule__NavigatingArgCS__Alternatives_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Alternatives_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getAlternatives_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0__1__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__0"
    // InternalImperativeOCL.g:15659:1: rule__NavigatingArgCS__Group_0_1_0__0 : rule__NavigatingArgCS__Group_0_1_0__0__Impl rule__NavigatingArgCS__Group_0_1_0__1 ;
    public final void rule__NavigatingArgCS__Group_0_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15663:1: ( rule__NavigatingArgCS__Group_0_1_0__0__Impl rule__NavigatingArgCS__Group_0_1_0__1 )
            // InternalImperativeOCL.g:15664:2: rule__NavigatingArgCS__Group_0_1_0__0__Impl rule__NavigatingArgCS__Group_0_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NavigatingArgCS__Group_0_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__0"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__0__Impl"
    // InternalImperativeOCL.g:15671:1: rule__NavigatingArgCS__Group_0_1_0__0__Impl : ( ':' ) ;
    public final void rule__NavigatingArgCS__Group_0_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15675:1: ( ( ':' ) )
            // InternalImperativeOCL.g:15676:1: ( ':' )
            {
            // InternalImperativeOCL.g:15676:1: ( ':' )
            // InternalImperativeOCL.g:15677:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_0_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__0__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__1"
    // InternalImperativeOCL.g:15690:1: rule__NavigatingArgCS__Group_0_1_0__1 : rule__NavigatingArgCS__Group_0_1_0__1__Impl rule__NavigatingArgCS__Group_0_1_0__2 ;
    public final void rule__NavigatingArgCS__Group_0_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15694:1: ( rule__NavigatingArgCS__Group_0_1_0__1__Impl rule__NavigatingArgCS__Group_0_1_0__2 )
            // InternalImperativeOCL.g:15695:2: rule__NavigatingArgCS__Group_0_1_0__1__Impl rule__NavigatingArgCS__Group_0_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NavigatingArgCS__Group_0_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__1"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__1__Impl"
    // InternalImperativeOCL.g:15702:1: rule__NavigatingArgCS__Group_0_1_0__1__Impl : ( ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 ) ) ;
    public final void rule__NavigatingArgCS__Group_0_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15706:1: ( ( ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 ) ) )
            // InternalImperativeOCL.g:15707:1: ( ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 ) )
            {
            // InternalImperativeOCL.g:15707:1: ( ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 ) )
            // InternalImperativeOCL.g:15708:1: ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_0_1_0_1());
            }
            // InternalImperativeOCL.g:15709:1: ( rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 )
            // InternalImperativeOCL.g:15709:2: rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_0_1_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__1__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__2"
    // InternalImperativeOCL.g:15719:1: rule__NavigatingArgCS__Group_0_1_0__2 : rule__NavigatingArgCS__Group_0_1_0__2__Impl ;
    public final void rule__NavigatingArgCS__Group_0_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15723:1: ( rule__NavigatingArgCS__Group_0_1_0__2__Impl )
            // InternalImperativeOCL.g:15724:2: rule__NavigatingArgCS__Group_0_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__2"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0__2__Impl"
    // InternalImperativeOCL.g:15730:1: rule__NavigatingArgCS__Group_0_1_0__2__Impl : ( ( rule__NavigatingArgCS__Group_0_1_0_2__0 )? ) ;
    public final void rule__NavigatingArgCS__Group_0_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15734:1: ( ( ( rule__NavigatingArgCS__Group_0_1_0_2__0 )? ) )
            // InternalImperativeOCL.g:15735:1: ( ( rule__NavigatingArgCS__Group_0_1_0_2__0 )? )
            {
            // InternalImperativeOCL.g:15735:1: ( ( rule__NavigatingArgCS__Group_0_1_0_2__0 )? )
            // InternalImperativeOCL.g:15736:1: ( rule__NavigatingArgCS__Group_0_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0_2());
            }
            // InternalImperativeOCL.g:15737:1: ( rule__NavigatingArgCS__Group_0_1_0_2__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==30) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalImperativeOCL.g:15737:2: rule__NavigatingArgCS__Group_0_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingArgCS__Group_0_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0__2__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0_2__0"
    // InternalImperativeOCL.g:15753:1: rule__NavigatingArgCS__Group_0_1_0_2__0 : rule__NavigatingArgCS__Group_0_1_0_2__0__Impl rule__NavigatingArgCS__Group_0_1_0_2__1 ;
    public final void rule__NavigatingArgCS__Group_0_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15757:1: ( rule__NavigatingArgCS__Group_0_1_0_2__0__Impl rule__NavigatingArgCS__Group_0_1_0_2__1 )
            // InternalImperativeOCL.g:15758:2: rule__NavigatingArgCS__Group_0_1_0_2__0__Impl rule__NavigatingArgCS__Group_0_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingArgCS__Group_0_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0_2__0"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0_2__0__Impl"
    // InternalImperativeOCL.g:15765:1: rule__NavigatingArgCS__Group_0_1_0_2__0__Impl : ( '=' ) ;
    public final void rule__NavigatingArgCS__Group_0_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15769:1: ( ( '=' ) )
            // InternalImperativeOCL.g:15770:1: ( '=' )
            {
            // InternalImperativeOCL.g:15770:1: ( '=' )
            // InternalImperativeOCL.g:15771:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0_2__0__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0_2__1"
    // InternalImperativeOCL.g:15784:1: rule__NavigatingArgCS__Group_0_1_0_2__1 : rule__NavigatingArgCS__Group_0_1_0_2__1__Impl ;
    public final void rule__NavigatingArgCS__Group_0_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15788:1: ( rule__NavigatingArgCS__Group_0_1_0_2__1__Impl )
            // InternalImperativeOCL.g:15789:2: rule__NavigatingArgCS__Group_0_1_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0_2__1"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_0_2__1__Impl"
    // InternalImperativeOCL.g:15795:1: rule__NavigatingArgCS__Group_0_1_0_2__1__Impl : ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 ) ) ;
    public final void rule__NavigatingArgCS__Group_0_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15799:1: ( ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 ) ) )
            // InternalImperativeOCL.g:15800:1: ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 ) )
            {
            // InternalImperativeOCL.g:15800:1: ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 ) )
            // InternalImperativeOCL.g:15801:1: ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_0_2_1());
            }
            // InternalImperativeOCL.g:15802:1: ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 )
            // InternalImperativeOCL.g:15802:2: rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_0_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_0_2__1__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_1__0"
    // InternalImperativeOCL.g:15816:1: rule__NavigatingArgCS__Group_0_1_1__0 : rule__NavigatingArgCS__Group_0_1_1__0__Impl rule__NavigatingArgCS__Group_0_1_1__1 ;
    public final void rule__NavigatingArgCS__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15820:1: ( rule__NavigatingArgCS__Group_0_1_1__0__Impl rule__NavigatingArgCS__Group_0_1_1__1 )
            // InternalImperativeOCL.g:15821:2: rule__NavigatingArgCS__Group_0_1_1__0__Impl rule__NavigatingArgCS__Group_0_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingArgCS__Group_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_1__0"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_1__0__Impl"
    // InternalImperativeOCL.g:15828:1: rule__NavigatingArgCS__Group_0_1_1__0__Impl : ( 'in' ) ;
    public final void rule__NavigatingArgCS__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15832:1: ( ( 'in' ) )
            // InternalImperativeOCL.g:15833:1: ( 'in' )
            {
            // InternalImperativeOCL.g:15833:1: ( 'in' )
            // InternalImperativeOCL.g:15834:1: 'in'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_1_0());
            }
            match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_1__1"
    // InternalImperativeOCL.g:15847:1: rule__NavigatingArgCS__Group_0_1_1__1 : rule__NavigatingArgCS__Group_0_1_1__1__Impl ;
    public final void rule__NavigatingArgCS__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15851:1: ( rule__NavigatingArgCS__Group_0_1_1__1__Impl )
            // InternalImperativeOCL.g:15852:2: rule__NavigatingArgCS__Group_0_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_1__1"


    // $ANTLR start "rule__NavigatingArgCS__Group_0_1_1__1__Impl"
    // InternalImperativeOCL.g:15858:1: rule__NavigatingArgCS__Group_0_1_1__1__Impl : ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 ) ) ;
    public final void rule__NavigatingArgCS__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15862:1: ( ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 ) ) )
            // InternalImperativeOCL.g:15863:1: ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 ) )
            {
            // InternalImperativeOCL.g:15863:1: ( ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 ) )
            // InternalImperativeOCL.g:15864:1: ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_1_1());
            }
            // InternalImperativeOCL.g:15865:1: ( rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 )
            // InternalImperativeOCL.g:15865:2: rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_1__0"
    // InternalImperativeOCL.g:15879:1: rule__NavigatingArgCS__Group_1__0 : rule__NavigatingArgCS__Group_1__0__Impl rule__NavigatingArgCS__Group_1__1 ;
    public final void rule__NavigatingArgCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15883:1: ( rule__NavigatingArgCS__Group_1__0__Impl rule__NavigatingArgCS__Group_1__1 )
            // InternalImperativeOCL.g:15884:2: rule__NavigatingArgCS__Group_1__0__Impl rule__NavigatingArgCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NavigatingArgCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_1__0"


    // $ANTLR start "rule__NavigatingArgCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:15891:1: rule__NavigatingArgCS__Group_1__0__Impl : ( ':' ) ;
    public final void rule__NavigatingArgCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15895:1: ( ( ':' ) )
            // InternalImperativeOCL.g:15896:1: ( ':' )
            {
            // InternalImperativeOCL.g:15896:1: ( ':' )
            // InternalImperativeOCL.g:15897:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_1__0__Impl"


    // $ANTLR start "rule__NavigatingArgCS__Group_1__1"
    // InternalImperativeOCL.g:15910:1: rule__NavigatingArgCS__Group_1__1 : rule__NavigatingArgCS__Group_1__1__Impl ;
    public final void rule__NavigatingArgCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15914:1: ( rule__NavigatingArgCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:15915:2: rule__NavigatingArgCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_1__1"


    // $ANTLR start "rule__NavigatingArgCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:15921:1: rule__NavigatingArgCS__Group_1__1__Impl : ( ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 ) ) ;
    public final void rule__NavigatingArgCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15925:1: ( ( ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:15926:1: ( ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:15926:1: ( ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 ) )
            // InternalImperativeOCL.g:15927:1: ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1());
            }
            // InternalImperativeOCL.g:15928:1: ( rule__NavigatingArgCS__OwnedTypeAssignment_1_1 )
            // InternalImperativeOCL.g:15928:2: rule__NavigatingArgCS__OwnedTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingArgCS__OwnedTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__Group_1__1__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__0"
    // InternalImperativeOCL.g:15942:1: rule__NavigatingBarArgCS__Group__0 : rule__NavigatingBarArgCS__Group__0__Impl rule__NavigatingBarArgCS__Group__1 ;
    public final void rule__NavigatingBarArgCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15946:1: ( rule__NavigatingBarArgCS__Group__0__Impl rule__NavigatingBarArgCS__Group__1 )
            // InternalImperativeOCL.g:15947:2: rule__NavigatingBarArgCS__Group__0__Impl rule__NavigatingBarArgCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingBarArgCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__0"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__0__Impl"
    // InternalImperativeOCL.g:15954:1: rule__NavigatingBarArgCS__Group__0__Impl : ( ( rule__NavigatingBarArgCS__PrefixAssignment_0 ) ) ;
    public final void rule__NavigatingBarArgCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15958:1: ( ( ( rule__NavigatingBarArgCS__PrefixAssignment_0 ) ) )
            // InternalImperativeOCL.g:15959:1: ( ( rule__NavigatingBarArgCS__PrefixAssignment_0 ) )
            {
            // InternalImperativeOCL.g:15959:1: ( ( rule__NavigatingBarArgCS__PrefixAssignment_0 ) )
            // InternalImperativeOCL.g:15960:1: ( rule__NavigatingBarArgCS__PrefixAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0());
            }
            // InternalImperativeOCL.g:15961:1: ( rule__NavigatingBarArgCS__PrefixAssignment_0 )
            // InternalImperativeOCL.g:15961:2: rule__NavigatingBarArgCS__PrefixAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__PrefixAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__0__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__1"
    // InternalImperativeOCL.g:15971:1: rule__NavigatingBarArgCS__Group__1 : rule__NavigatingBarArgCS__Group__1__Impl rule__NavigatingBarArgCS__Group__2 ;
    public final void rule__NavigatingBarArgCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15975:1: ( rule__NavigatingBarArgCS__Group__1__Impl rule__NavigatingBarArgCS__Group__2 )
            // InternalImperativeOCL.g:15976:2: rule__NavigatingBarArgCS__Group__1__Impl rule__NavigatingBarArgCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NavigatingBarArgCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__1"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__1__Impl"
    // InternalImperativeOCL.g:15983:1: rule__NavigatingBarArgCS__Group__1__Impl : ( ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 ) ) ;
    public final void rule__NavigatingBarArgCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:15987:1: ( ( ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 ) ) )
            // InternalImperativeOCL.g:15988:1: ( ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:15988:1: ( ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 ) )
            // InternalImperativeOCL.g:15989:1: ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionAssignment_1());
            }
            // InternalImperativeOCL.g:15990:1: ( rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 )
            // InternalImperativeOCL.g:15990:2: rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__1__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__2"
    // InternalImperativeOCL.g:16000:1: rule__NavigatingBarArgCS__Group__2 : rule__NavigatingBarArgCS__Group__2__Impl ;
    public final void rule__NavigatingBarArgCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16004:1: ( rule__NavigatingBarArgCS__Group__2__Impl )
            // InternalImperativeOCL.g:16005:2: rule__NavigatingBarArgCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__2"


    // $ANTLR start "rule__NavigatingBarArgCS__Group__2__Impl"
    // InternalImperativeOCL.g:16011:1: rule__NavigatingBarArgCS__Group__2__Impl : ( ( rule__NavigatingBarArgCS__Group_2__0 )? ) ;
    public final void rule__NavigatingBarArgCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16015:1: ( ( ( rule__NavigatingBarArgCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:16016:1: ( ( rule__NavigatingBarArgCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:16016:1: ( ( rule__NavigatingBarArgCS__Group_2__0 )? )
            // InternalImperativeOCL.g:16017:1: ( rule__NavigatingBarArgCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:16018:1: ( rule__NavigatingBarArgCS__Group_2__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==75) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalImperativeOCL.g:16018:2: rule__NavigatingBarArgCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingBarArgCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group__2__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__0"
    // InternalImperativeOCL.g:16034:1: rule__NavigatingBarArgCS__Group_2__0 : rule__NavigatingBarArgCS__Group_2__0__Impl rule__NavigatingBarArgCS__Group_2__1 ;
    public final void rule__NavigatingBarArgCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16038:1: ( rule__NavigatingBarArgCS__Group_2__0__Impl rule__NavigatingBarArgCS__Group_2__1 )
            // InternalImperativeOCL.g:16039:2: rule__NavigatingBarArgCS__Group_2__0__Impl rule__NavigatingBarArgCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NavigatingBarArgCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__0"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:16046:1: rule__NavigatingBarArgCS__Group_2__0__Impl : ( ':' ) ;
    public final void rule__NavigatingBarArgCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16050:1: ( ( ':' ) )
            // InternalImperativeOCL.g:16051:1: ( ':' )
            {
            // InternalImperativeOCL.g:16051:1: ( ':' )
            // InternalImperativeOCL.g:16052:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__0__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__1"
    // InternalImperativeOCL.g:16065:1: rule__NavigatingBarArgCS__Group_2__1 : rule__NavigatingBarArgCS__Group_2__1__Impl rule__NavigatingBarArgCS__Group_2__2 ;
    public final void rule__NavigatingBarArgCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16069:1: ( rule__NavigatingBarArgCS__Group_2__1__Impl rule__NavigatingBarArgCS__Group_2__2 )
            // InternalImperativeOCL.g:16070:2: rule__NavigatingBarArgCS__Group_2__1__Impl rule__NavigatingBarArgCS__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NavigatingBarArgCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__1"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:16077:1: rule__NavigatingBarArgCS__Group_2__1__Impl : ( ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 ) ) ;
    public final void rule__NavigatingBarArgCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16081:1: ( ( ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:16082:1: ( ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:16082:1: ( ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 ) )
            // InternalImperativeOCL.g:16083:1: ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1());
            }
            // InternalImperativeOCL.g:16084:1: ( rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 )
            // InternalImperativeOCL.g:16084:2: rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__1__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__2"
    // InternalImperativeOCL.g:16094:1: rule__NavigatingBarArgCS__Group_2__2 : rule__NavigatingBarArgCS__Group_2__2__Impl ;
    public final void rule__NavigatingBarArgCS__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16098:1: ( rule__NavigatingBarArgCS__Group_2__2__Impl )
            // InternalImperativeOCL.g:16099:2: rule__NavigatingBarArgCS__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__2"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2__2__Impl"
    // InternalImperativeOCL.g:16105:1: rule__NavigatingBarArgCS__Group_2__2__Impl : ( ( rule__NavigatingBarArgCS__Group_2_2__0 )? ) ;
    public final void rule__NavigatingBarArgCS__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16109:1: ( ( ( rule__NavigatingBarArgCS__Group_2_2__0 )? ) )
            // InternalImperativeOCL.g:16110:1: ( ( rule__NavigatingBarArgCS__Group_2_2__0 )? )
            {
            // InternalImperativeOCL.g:16110:1: ( ( rule__NavigatingBarArgCS__Group_2_2__0 )? )
            // InternalImperativeOCL.g:16111:1: ( rule__NavigatingBarArgCS__Group_2_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2());
            }
            // InternalImperativeOCL.g:16112:1: ( rule__NavigatingBarArgCS__Group_2_2__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==30) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalImperativeOCL.g:16112:2: rule__NavigatingBarArgCS__Group_2_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingBarArgCS__Group_2_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2__2__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2_2__0"
    // InternalImperativeOCL.g:16128:1: rule__NavigatingBarArgCS__Group_2_2__0 : rule__NavigatingBarArgCS__Group_2_2__0__Impl rule__NavigatingBarArgCS__Group_2_2__1 ;
    public final void rule__NavigatingBarArgCS__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16132:1: ( rule__NavigatingBarArgCS__Group_2_2__0__Impl rule__NavigatingBarArgCS__Group_2_2__1 )
            // InternalImperativeOCL.g:16133:2: rule__NavigatingBarArgCS__Group_2_2__0__Impl rule__NavigatingBarArgCS__Group_2_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingBarArgCS__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2_2__0"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2_2__0__Impl"
    // InternalImperativeOCL.g:16140:1: rule__NavigatingBarArgCS__Group_2_2__0__Impl : ( '=' ) ;
    public final void rule__NavigatingBarArgCS__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16144:1: ( ( '=' ) )
            // InternalImperativeOCL.g:16145:1: ( '=' )
            {
            // InternalImperativeOCL.g:16145:1: ( '=' )
            // InternalImperativeOCL.g:16146:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2_2__0__Impl"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2_2__1"
    // InternalImperativeOCL.g:16159:1: rule__NavigatingBarArgCS__Group_2_2__1 : rule__NavigatingBarArgCS__Group_2_2__1__Impl ;
    public final void rule__NavigatingBarArgCS__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16163:1: ( rule__NavigatingBarArgCS__Group_2_2__1__Impl )
            // InternalImperativeOCL.g:16164:2: rule__NavigatingBarArgCS__Group_2_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2_2__1"


    // $ANTLR start "rule__NavigatingBarArgCS__Group_2_2__1__Impl"
    // InternalImperativeOCL.g:16170:1: rule__NavigatingBarArgCS__Group_2_2__1__Impl : ( ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 ) ) ;
    public final void rule__NavigatingBarArgCS__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16174:1: ( ( ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 ) ) )
            // InternalImperativeOCL.g:16175:1: ( ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 ) )
            {
            // InternalImperativeOCL.g:16175:1: ( ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 ) )
            // InternalImperativeOCL.g:16176:1: ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionAssignment_2_2_1());
            }
            // InternalImperativeOCL.g:16177:1: ( rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 )
            // InternalImperativeOCL.g:16177:2: rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionAssignment_2_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__Group_2_2__1__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__0"
    // InternalImperativeOCL.g:16191:1: rule__NavigatingCommaArgCS__Group__0 : rule__NavigatingCommaArgCS__Group__0__Impl rule__NavigatingCommaArgCS__Group__1 ;
    public final void rule__NavigatingCommaArgCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16195:1: ( rule__NavigatingCommaArgCS__Group__0__Impl rule__NavigatingCommaArgCS__Group__1 )
            // InternalImperativeOCL.g:16196:2: rule__NavigatingCommaArgCS__Group__0__Impl rule__NavigatingCommaArgCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingCommaArgCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__0"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__0__Impl"
    // InternalImperativeOCL.g:16203:1: rule__NavigatingCommaArgCS__Group__0__Impl : ( ( rule__NavigatingCommaArgCS__PrefixAssignment_0 ) ) ;
    public final void rule__NavigatingCommaArgCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16207:1: ( ( ( rule__NavigatingCommaArgCS__PrefixAssignment_0 ) ) )
            // InternalImperativeOCL.g:16208:1: ( ( rule__NavigatingCommaArgCS__PrefixAssignment_0 ) )
            {
            // InternalImperativeOCL.g:16208:1: ( ( rule__NavigatingCommaArgCS__PrefixAssignment_0 ) )
            // InternalImperativeOCL.g:16209:1: ( rule__NavigatingCommaArgCS__PrefixAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0());
            }
            // InternalImperativeOCL.g:16210:1: ( rule__NavigatingCommaArgCS__PrefixAssignment_0 )
            // InternalImperativeOCL.g:16210:2: rule__NavigatingCommaArgCS__PrefixAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__PrefixAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__0__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__1"
    // InternalImperativeOCL.g:16220:1: rule__NavigatingCommaArgCS__Group__1 : rule__NavigatingCommaArgCS__Group__1__Impl rule__NavigatingCommaArgCS__Group__2 ;
    public final void rule__NavigatingCommaArgCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16224:1: ( rule__NavigatingCommaArgCS__Group__1__Impl rule__NavigatingCommaArgCS__Group__2 )
            // InternalImperativeOCL.g:16225:2: rule__NavigatingCommaArgCS__Group__1__Impl rule__NavigatingCommaArgCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__NavigatingCommaArgCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__1"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__1__Impl"
    // InternalImperativeOCL.g:16232:1: rule__NavigatingCommaArgCS__Group__1__Impl : ( ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 ) ) ;
    public final void rule__NavigatingCommaArgCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16236:1: ( ( ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 ) ) )
            // InternalImperativeOCL.g:16237:1: ( ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:16237:1: ( ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 ) )
            // InternalImperativeOCL.g:16238:1: ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionAssignment_1());
            }
            // InternalImperativeOCL.g:16239:1: ( rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 )
            // InternalImperativeOCL.g:16239:2: rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__1__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__2"
    // InternalImperativeOCL.g:16249:1: rule__NavigatingCommaArgCS__Group__2 : rule__NavigatingCommaArgCS__Group__2__Impl ;
    public final void rule__NavigatingCommaArgCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16253:1: ( rule__NavigatingCommaArgCS__Group__2__Impl )
            // InternalImperativeOCL.g:16254:2: rule__NavigatingCommaArgCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__2"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group__2__Impl"
    // InternalImperativeOCL.g:16260:1: rule__NavigatingCommaArgCS__Group__2__Impl : ( ( rule__NavigatingCommaArgCS__Alternatives_2 )? ) ;
    public final void rule__NavigatingCommaArgCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16264:1: ( ( ( rule__NavigatingCommaArgCS__Alternatives_2 )? ) )
            // InternalImperativeOCL.g:16265:1: ( ( rule__NavigatingCommaArgCS__Alternatives_2 )? )
            {
            // InternalImperativeOCL.g:16265:1: ( ( rule__NavigatingCommaArgCS__Alternatives_2 )? )
            // InternalImperativeOCL.g:16266:1: ( rule__NavigatingCommaArgCS__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getAlternatives_2());
            }
            // InternalImperativeOCL.g:16267:1: ( rule__NavigatingCommaArgCS__Alternatives_2 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==75||LA119_0==104) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalImperativeOCL.g:16267:2: rule__NavigatingCommaArgCS__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingCommaArgCS__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getAlternatives_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group__2__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__0"
    // InternalImperativeOCL.g:16283:1: rule__NavigatingCommaArgCS__Group_2_0__0 : rule__NavigatingCommaArgCS__Group_2_0__0__Impl rule__NavigatingCommaArgCS__Group_2_0__1 ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16287:1: ( rule__NavigatingCommaArgCS__Group_2_0__0__Impl rule__NavigatingCommaArgCS__Group_2_0__1 )
            // InternalImperativeOCL.g:16288:2: rule__NavigatingCommaArgCS__Group_2_0__0__Impl rule__NavigatingCommaArgCS__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NavigatingCommaArgCS__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__0"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__0__Impl"
    // InternalImperativeOCL.g:16295:1: rule__NavigatingCommaArgCS__Group_2_0__0__Impl : ( ':' ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16299:1: ( ( ':' ) )
            // InternalImperativeOCL.g:16300:1: ( ':' )
            {
            // InternalImperativeOCL.g:16300:1: ( ':' )
            // InternalImperativeOCL.g:16301:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_0_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__0__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__1"
    // InternalImperativeOCL.g:16314:1: rule__NavigatingCommaArgCS__Group_2_0__1 : rule__NavigatingCommaArgCS__Group_2_0__1__Impl rule__NavigatingCommaArgCS__Group_2_0__2 ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16318:1: ( rule__NavigatingCommaArgCS__Group_2_0__1__Impl rule__NavigatingCommaArgCS__Group_2_0__2 )
            // InternalImperativeOCL.g:16319:2: rule__NavigatingCommaArgCS__Group_2_0__1__Impl rule__NavigatingCommaArgCS__Group_2_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NavigatingCommaArgCS__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__1"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__1__Impl"
    // InternalImperativeOCL.g:16326:1: rule__NavigatingCommaArgCS__Group_2_0__1__Impl : ( ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 ) ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16330:1: ( ( ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 ) ) )
            // InternalImperativeOCL.g:16331:1: ( ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 ) )
            {
            // InternalImperativeOCL.g:16331:1: ( ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 ) )
            // InternalImperativeOCL.g:16332:1: ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_0_1());
            }
            // InternalImperativeOCL.g:16333:1: ( rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 )
            // InternalImperativeOCL.g:16333:2: rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_0_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__1__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__2"
    // InternalImperativeOCL.g:16343:1: rule__NavigatingCommaArgCS__Group_2_0__2 : rule__NavigatingCommaArgCS__Group_2_0__2__Impl ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16347:1: ( rule__NavigatingCommaArgCS__Group_2_0__2__Impl )
            // InternalImperativeOCL.g:16348:2: rule__NavigatingCommaArgCS__Group_2_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__2"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0__2__Impl"
    // InternalImperativeOCL.g:16354:1: rule__NavigatingCommaArgCS__Group_2_0__2__Impl : ( ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )? ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16358:1: ( ( ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )? ) )
            // InternalImperativeOCL.g:16359:1: ( ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )? )
            {
            // InternalImperativeOCL.g:16359:1: ( ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )? )
            // InternalImperativeOCL.g:16360:1: ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0_2());
            }
            // InternalImperativeOCL.g:16361:1: ( rule__NavigatingCommaArgCS__Group_2_0_2__0 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==30) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalImperativeOCL.g:16361:2: rule__NavigatingCommaArgCS__Group_2_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingCommaArgCS__Group_2_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0__2__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0_2__0"
    // InternalImperativeOCL.g:16377:1: rule__NavigatingCommaArgCS__Group_2_0_2__0 : rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl rule__NavigatingCommaArgCS__Group_2_0_2__1 ;
    public final void rule__NavigatingCommaArgCS__Group_2_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16381:1: ( rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl rule__NavigatingCommaArgCS__Group_2_0_2__1 )
            // InternalImperativeOCL.g:16382:2: rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl rule__NavigatingCommaArgCS__Group_2_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0_2__0"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl"
    // InternalImperativeOCL.g:16389:1: rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl : ( '=' ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16393:1: ( ( '=' ) )
            // InternalImperativeOCL.g:16394:1: ( '=' )
            {
            // InternalImperativeOCL.g:16394:1: ( '=' )
            // InternalImperativeOCL.g:16395:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0_2__0__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0_2__1"
    // InternalImperativeOCL.g:16408:1: rule__NavigatingCommaArgCS__Group_2_0_2__1 : rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl ;
    public final void rule__NavigatingCommaArgCS__Group_2_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16412:1: ( rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl )
            // InternalImperativeOCL.g:16413:2: rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0_2__1"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl"
    // InternalImperativeOCL.g:16419:1: rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl : ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 ) ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16423:1: ( ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 ) ) )
            // InternalImperativeOCL.g:16424:1: ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 ) )
            {
            // InternalImperativeOCL.g:16424:1: ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 ) )
            // InternalImperativeOCL.g:16425:1: ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_0_2_1());
            }
            // InternalImperativeOCL.g:16426:1: ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 )
            // InternalImperativeOCL.g:16426:2: rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_0_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_0_2__1__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_1__0"
    // InternalImperativeOCL.g:16440:1: rule__NavigatingCommaArgCS__Group_2_1__0 : rule__NavigatingCommaArgCS__Group_2_1__0__Impl rule__NavigatingCommaArgCS__Group_2_1__1 ;
    public final void rule__NavigatingCommaArgCS__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16444:1: ( rule__NavigatingCommaArgCS__Group_2_1__0__Impl rule__NavigatingCommaArgCS__Group_2_1__1 )
            // InternalImperativeOCL.g:16445:2: rule__NavigatingCommaArgCS__Group_2_1__0__Impl rule__NavigatingCommaArgCS__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingCommaArgCS__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_1__0"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_1__0__Impl"
    // InternalImperativeOCL.g:16452:1: rule__NavigatingCommaArgCS__Group_2_1__0__Impl : ( 'in' ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16456:1: ( ( 'in' ) )
            // InternalImperativeOCL.g:16457:1: ( 'in' )
            {
            // InternalImperativeOCL.g:16457:1: ( 'in' )
            // InternalImperativeOCL.g:16458:1: 'in'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_1_0());
            }
            match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_1__0__Impl"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_1__1"
    // InternalImperativeOCL.g:16471:1: rule__NavigatingCommaArgCS__Group_2_1__1 : rule__NavigatingCommaArgCS__Group_2_1__1__Impl ;
    public final void rule__NavigatingCommaArgCS__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16475:1: ( rule__NavigatingCommaArgCS__Group_2_1__1__Impl )
            // InternalImperativeOCL.g:16476:2: rule__NavigatingCommaArgCS__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_1__1"


    // $ANTLR start "rule__NavigatingCommaArgCS__Group_2_1__1__Impl"
    // InternalImperativeOCL.g:16482:1: rule__NavigatingCommaArgCS__Group_2_1__1__Impl : ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 ) ) ;
    public final void rule__NavigatingCommaArgCS__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16486:1: ( ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 ) ) )
            // InternalImperativeOCL.g:16487:1: ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 ) )
            {
            // InternalImperativeOCL.g:16487:1: ( ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 ) )
            // InternalImperativeOCL.g:16488:1: ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_1_1());
            }
            // InternalImperativeOCL.g:16489:1: ( rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 )
            // InternalImperativeOCL.g:16489:2: rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__Group_2_1__1__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__0"
    // InternalImperativeOCL.g:16503:1: rule__NavigatingSemiArgCS__Group__0 : rule__NavigatingSemiArgCS__Group__0__Impl rule__NavigatingSemiArgCS__Group__1 ;
    public final void rule__NavigatingSemiArgCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16507:1: ( rule__NavigatingSemiArgCS__Group__0__Impl rule__NavigatingSemiArgCS__Group__1 )
            // InternalImperativeOCL.g:16508:2: rule__NavigatingSemiArgCS__Group__0__Impl rule__NavigatingSemiArgCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingSemiArgCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__0"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__0__Impl"
    // InternalImperativeOCL.g:16515:1: rule__NavigatingSemiArgCS__Group__0__Impl : ( ( rule__NavigatingSemiArgCS__PrefixAssignment_0 ) ) ;
    public final void rule__NavigatingSemiArgCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16519:1: ( ( ( rule__NavigatingSemiArgCS__PrefixAssignment_0 ) ) )
            // InternalImperativeOCL.g:16520:1: ( ( rule__NavigatingSemiArgCS__PrefixAssignment_0 ) )
            {
            // InternalImperativeOCL.g:16520:1: ( ( rule__NavigatingSemiArgCS__PrefixAssignment_0 ) )
            // InternalImperativeOCL.g:16521:1: ( rule__NavigatingSemiArgCS__PrefixAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0());
            }
            // InternalImperativeOCL.g:16522:1: ( rule__NavigatingSemiArgCS__PrefixAssignment_0 )
            // InternalImperativeOCL.g:16522:2: rule__NavigatingSemiArgCS__PrefixAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__PrefixAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__0__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__1"
    // InternalImperativeOCL.g:16532:1: rule__NavigatingSemiArgCS__Group__1 : rule__NavigatingSemiArgCS__Group__1__Impl rule__NavigatingSemiArgCS__Group__2 ;
    public final void rule__NavigatingSemiArgCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16536:1: ( rule__NavigatingSemiArgCS__Group__1__Impl rule__NavigatingSemiArgCS__Group__2 )
            // InternalImperativeOCL.g:16537:2: rule__NavigatingSemiArgCS__Group__1__Impl rule__NavigatingSemiArgCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NavigatingSemiArgCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__1"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__1__Impl"
    // InternalImperativeOCL.g:16544:1: rule__NavigatingSemiArgCS__Group__1__Impl : ( ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 ) ) ;
    public final void rule__NavigatingSemiArgCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16548:1: ( ( ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 ) ) )
            // InternalImperativeOCL.g:16549:1: ( ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:16549:1: ( ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 ) )
            // InternalImperativeOCL.g:16550:1: ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionAssignment_1());
            }
            // InternalImperativeOCL.g:16551:1: ( rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 )
            // InternalImperativeOCL.g:16551:2: rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__1__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__2"
    // InternalImperativeOCL.g:16561:1: rule__NavigatingSemiArgCS__Group__2 : rule__NavigatingSemiArgCS__Group__2__Impl ;
    public final void rule__NavigatingSemiArgCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16565:1: ( rule__NavigatingSemiArgCS__Group__2__Impl )
            // InternalImperativeOCL.g:16566:2: rule__NavigatingSemiArgCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__2"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group__2__Impl"
    // InternalImperativeOCL.g:16572:1: rule__NavigatingSemiArgCS__Group__2__Impl : ( ( rule__NavigatingSemiArgCS__Group_2__0 )? ) ;
    public final void rule__NavigatingSemiArgCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16576:1: ( ( ( rule__NavigatingSemiArgCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:16577:1: ( ( rule__NavigatingSemiArgCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:16577:1: ( ( rule__NavigatingSemiArgCS__Group_2__0 )? )
            // InternalImperativeOCL.g:16578:1: ( rule__NavigatingSemiArgCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:16579:1: ( rule__NavigatingSemiArgCS__Group_2__0 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==75) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalImperativeOCL.g:16579:2: rule__NavigatingSemiArgCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingSemiArgCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group__2__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__0"
    // InternalImperativeOCL.g:16595:1: rule__NavigatingSemiArgCS__Group_2__0 : rule__NavigatingSemiArgCS__Group_2__0__Impl rule__NavigatingSemiArgCS__Group_2__1 ;
    public final void rule__NavigatingSemiArgCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16599:1: ( rule__NavigatingSemiArgCS__Group_2__0__Impl rule__NavigatingSemiArgCS__Group_2__1 )
            // InternalImperativeOCL.g:16600:2: rule__NavigatingSemiArgCS__Group_2__0__Impl rule__NavigatingSemiArgCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NavigatingSemiArgCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__0"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:16607:1: rule__NavigatingSemiArgCS__Group_2__0__Impl : ( ':' ) ;
    public final void rule__NavigatingSemiArgCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16611:1: ( ( ':' ) )
            // InternalImperativeOCL.g:16612:1: ( ':' )
            {
            // InternalImperativeOCL.g:16612:1: ( ':' )
            // InternalImperativeOCL.g:16613:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__0__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__1"
    // InternalImperativeOCL.g:16626:1: rule__NavigatingSemiArgCS__Group_2__1 : rule__NavigatingSemiArgCS__Group_2__1__Impl rule__NavigatingSemiArgCS__Group_2__2 ;
    public final void rule__NavigatingSemiArgCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16630:1: ( rule__NavigatingSemiArgCS__Group_2__1__Impl rule__NavigatingSemiArgCS__Group_2__2 )
            // InternalImperativeOCL.g:16631:2: rule__NavigatingSemiArgCS__Group_2__1__Impl rule__NavigatingSemiArgCS__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NavigatingSemiArgCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__1"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:16638:1: rule__NavigatingSemiArgCS__Group_2__1__Impl : ( ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 ) ) ;
    public final void rule__NavigatingSemiArgCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16642:1: ( ( ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:16643:1: ( ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:16643:1: ( ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 ) )
            // InternalImperativeOCL.g:16644:1: ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1());
            }
            // InternalImperativeOCL.g:16645:1: ( rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 )
            // InternalImperativeOCL.g:16645:2: rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__1__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__2"
    // InternalImperativeOCL.g:16655:1: rule__NavigatingSemiArgCS__Group_2__2 : rule__NavigatingSemiArgCS__Group_2__2__Impl ;
    public final void rule__NavigatingSemiArgCS__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16659:1: ( rule__NavigatingSemiArgCS__Group_2__2__Impl )
            // InternalImperativeOCL.g:16660:2: rule__NavigatingSemiArgCS__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__2"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2__2__Impl"
    // InternalImperativeOCL.g:16666:1: rule__NavigatingSemiArgCS__Group_2__2__Impl : ( ( rule__NavigatingSemiArgCS__Group_2_2__0 )? ) ;
    public final void rule__NavigatingSemiArgCS__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16670:1: ( ( ( rule__NavigatingSemiArgCS__Group_2_2__0 )? ) )
            // InternalImperativeOCL.g:16671:1: ( ( rule__NavigatingSemiArgCS__Group_2_2__0 )? )
            {
            // InternalImperativeOCL.g:16671:1: ( ( rule__NavigatingSemiArgCS__Group_2_2__0 )? )
            // InternalImperativeOCL.g:16672:1: ( rule__NavigatingSemiArgCS__Group_2_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2());
            }
            // InternalImperativeOCL.g:16673:1: ( rule__NavigatingSemiArgCS__Group_2_2__0 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==30) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalImperativeOCL.g:16673:2: rule__NavigatingSemiArgCS__Group_2_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NavigatingSemiArgCS__Group_2_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2__2__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2_2__0"
    // InternalImperativeOCL.g:16689:1: rule__NavigatingSemiArgCS__Group_2_2__0 : rule__NavigatingSemiArgCS__Group_2_2__0__Impl rule__NavigatingSemiArgCS__Group_2_2__1 ;
    public final void rule__NavigatingSemiArgCS__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16693:1: ( rule__NavigatingSemiArgCS__Group_2_2__0__Impl rule__NavigatingSemiArgCS__Group_2_2__1 )
            // InternalImperativeOCL.g:16694:2: rule__NavigatingSemiArgCS__Group_2_2__0__Impl rule__NavigatingSemiArgCS__Group_2_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NavigatingSemiArgCS__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2_2__0"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2_2__0__Impl"
    // InternalImperativeOCL.g:16701:1: rule__NavigatingSemiArgCS__Group_2_2__0__Impl : ( '=' ) ;
    public final void rule__NavigatingSemiArgCS__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16705:1: ( ( '=' ) )
            // InternalImperativeOCL.g:16706:1: ( '=' )
            {
            // InternalImperativeOCL.g:16706:1: ( '=' )
            // InternalImperativeOCL.g:16707:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2_2__0__Impl"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2_2__1"
    // InternalImperativeOCL.g:16720:1: rule__NavigatingSemiArgCS__Group_2_2__1 : rule__NavigatingSemiArgCS__Group_2_2__1__Impl ;
    public final void rule__NavigatingSemiArgCS__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16724:1: ( rule__NavigatingSemiArgCS__Group_2_2__1__Impl )
            // InternalImperativeOCL.g:16725:2: rule__NavigatingSemiArgCS__Group_2_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2_2__1"


    // $ANTLR start "rule__NavigatingSemiArgCS__Group_2_2__1__Impl"
    // InternalImperativeOCL.g:16731:1: rule__NavigatingSemiArgCS__Group_2_2__1__Impl : ( ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 ) ) ;
    public final void rule__NavigatingSemiArgCS__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16735:1: ( ( ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 ) ) )
            // InternalImperativeOCL.g:16736:1: ( ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 ) )
            {
            // InternalImperativeOCL.g:16736:1: ( ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 ) )
            // InternalImperativeOCL.g:16737:1: ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionAssignment_2_2_1());
            }
            // InternalImperativeOCL.g:16738:1: ( rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 )
            // InternalImperativeOCL.g:16738:2: rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionAssignment_2_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__Group_2_2__1__Impl"


    // $ANTLR start "rule__IfExpCS__Group__0"
    // InternalImperativeOCL.g:16752:1: rule__IfExpCS__Group__0 : rule__IfExpCS__Group__0__Impl rule__IfExpCS__Group__1 ;
    public final void rule__IfExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16756:1: ( rule__IfExpCS__Group__0__Impl rule__IfExpCS__Group__1 )
            // InternalImperativeOCL.g:16757:2: rule__IfExpCS__Group__0__Impl rule__IfExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__IfExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__0"


    // $ANTLR start "rule__IfExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:16764:1: rule__IfExpCS__Group__0__Impl : ( 'if' ) ;
    public final void rule__IfExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16768:1: ( ( 'if' ) )
            // InternalImperativeOCL.g:16769:1: ( 'if' )
            {
            // InternalImperativeOCL.g:16769:1: ( 'if' )
            // InternalImperativeOCL.g:16770:1: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getIfKeyword_0());
            }
            match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getIfKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__0__Impl"


    // $ANTLR start "rule__IfExpCS__Group__1"
    // InternalImperativeOCL.g:16783:1: rule__IfExpCS__Group__1 : rule__IfExpCS__Group__1__Impl rule__IfExpCS__Group__2 ;
    public final void rule__IfExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16787:1: ( rule__IfExpCS__Group__1__Impl rule__IfExpCS__Group__2 )
            // InternalImperativeOCL.g:16788:2: rule__IfExpCS__Group__1__Impl rule__IfExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__IfExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__1"


    // $ANTLR start "rule__IfExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:16795:1: rule__IfExpCS__Group__1__Impl : ( ( rule__IfExpCS__OwnedConditionAssignment_1 ) ) ;
    public final void rule__IfExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16799:1: ( ( ( rule__IfExpCS__OwnedConditionAssignment_1 ) ) )
            // InternalImperativeOCL.g:16800:1: ( ( rule__IfExpCS__OwnedConditionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:16800:1: ( ( rule__IfExpCS__OwnedConditionAssignment_1 ) )
            // InternalImperativeOCL.g:16801:1: ( rule__IfExpCS__OwnedConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedConditionAssignment_1());
            }
            // InternalImperativeOCL.g:16802:1: ( rule__IfExpCS__OwnedConditionAssignment_1 )
            // InternalImperativeOCL.g:16802:2: rule__IfExpCS__OwnedConditionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__OwnedConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedConditionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__1__Impl"


    // $ANTLR start "rule__IfExpCS__Group__2"
    // InternalImperativeOCL.g:16812:1: rule__IfExpCS__Group__2 : rule__IfExpCS__Group__2__Impl rule__IfExpCS__Group__3 ;
    public final void rule__IfExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16816:1: ( rule__IfExpCS__Group__2__Impl rule__IfExpCS__Group__3 )
            // InternalImperativeOCL.g:16817:2: rule__IfExpCS__Group__2__Impl rule__IfExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__IfExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__2"


    // $ANTLR start "rule__IfExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:16824:1: rule__IfExpCS__Group__2__Impl : ( 'then' ) ;
    public final void rule__IfExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16828:1: ( ( 'then' ) )
            // InternalImperativeOCL.g:16829:1: ( 'then' )
            {
            // InternalImperativeOCL.g:16829:1: ( 'then' )
            // InternalImperativeOCL.g:16830:1: 'then'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getThenKeyword_2());
            }
            match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getThenKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__2__Impl"


    // $ANTLR start "rule__IfExpCS__Group__3"
    // InternalImperativeOCL.g:16843:1: rule__IfExpCS__Group__3 : rule__IfExpCS__Group__3__Impl rule__IfExpCS__Group__4 ;
    public final void rule__IfExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16847:1: ( rule__IfExpCS__Group__3__Impl rule__IfExpCS__Group__4 )
            // InternalImperativeOCL.g:16848:2: rule__IfExpCS__Group__3__Impl rule__IfExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__IfExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__3"


    // $ANTLR start "rule__IfExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:16855:1: rule__IfExpCS__Group__3__Impl : ( ( rule__IfExpCS__OwnedThenExpressionAssignment_3 ) ) ;
    public final void rule__IfExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16859:1: ( ( ( rule__IfExpCS__OwnedThenExpressionAssignment_3 ) ) )
            // InternalImperativeOCL.g:16860:1: ( ( rule__IfExpCS__OwnedThenExpressionAssignment_3 ) )
            {
            // InternalImperativeOCL.g:16860:1: ( ( rule__IfExpCS__OwnedThenExpressionAssignment_3 ) )
            // InternalImperativeOCL.g:16861:1: ( rule__IfExpCS__OwnedThenExpressionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionAssignment_3());
            }
            // InternalImperativeOCL.g:16862:1: ( rule__IfExpCS__OwnedThenExpressionAssignment_3 )
            // InternalImperativeOCL.g:16862:2: rule__IfExpCS__OwnedThenExpressionAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__OwnedThenExpressionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__3__Impl"


    // $ANTLR start "rule__IfExpCS__Group__4"
    // InternalImperativeOCL.g:16872:1: rule__IfExpCS__Group__4 : rule__IfExpCS__Group__4__Impl rule__IfExpCS__Group__5 ;
    public final void rule__IfExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16876:1: ( rule__IfExpCS__Group__4__Impl rule__IfExpCS__Group__5 )
            // InternalImperativeOCL.g:16877:2: rule__IfExpCS__Group__4__Impl rule__IfExpCS__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__IfExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__4"


    // $ANTLR start "rule__IfExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:16884:1: rule__IfExpCS__Group__4__Impl : ( ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )* ) ;
    public final void rule__IfExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16888:1: ( ( ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )* ) )
            // InternalImperativeOCL.g:16889:1: ( ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )* )
            {
            // InternalImperativeOCL.g:16889:1: ( ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )* )
            // InternalImperativeOCL.g:16890:1: ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsAssignment_4());
            }
            // InternalImperativeOCL.g:16891:1: ( rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==107) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalImperativeOCL.g:16891:2: rule__IfExpCS__OwnedIfThenExpressionsAssignment_4
            	    {
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    rule__IfExpCS__OwnedIfThenExpressionsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsAssignment_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__4__Impl"


    // $ANTLR start "rule__IfExpCS__Group__5"
    // InternalImperativeOCL.g:16901:1: rule__IfExpCS__Group__5 : rule__IfExpCS__Group__5__Impl rule__IfExpCS__Group__6 ;
    public final void rule__IfExpCS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16905:1: ( rule__IfExpCS__Group__5__Impl rule__IfExpCS__Group__6 )
            // InternalImperativeOCL.g:16906:2: rule__IfExpCS__Group__5__Impl rule__IfExpCS__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__IfExpCS__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__5"


    // $ANTLR start "rule__IfExpCS__Group__5__Impl"
    // InternalImperativeOCL.g:16913:1: rule__IfExpCS__Group__5__Impl : ( 'else' ) ;
    public final void rule__IfExpCS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16917:1: ( ( 'else' ) )
            // InternalImperativeOCL.g:16918:1: ( 'else' )
            {
            // InternalImperativeOCL.g:16918:1: ( 'else' )
            // InternalImperativeOCL.g:16919:1: 'else'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getElseKeyword_5());
            }
            match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getElseKeyword_5());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__5__Impl"


    // $ANTLR start "rule__IfExpCS__Group__6"
    // InternalImperativeOCL.g:16932:1: rule__IfExpCS__Group__6 : rule__IfExpCS__Group__6__Impl rule__IfExpCS__Group__7 ;
    public final void rule__IfExpCS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16936:1: ( rule__IfExpCS__Group__6__Impl rule__IfExpCS__Group__7 )
            // InternalImperativeOCL.g:16937:2: rule__IfExpCS__Group__6__Impl rule__IfExpCS__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__IfExpCS__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__6"


    // $ANTLR start "rule__IfExpCS__Group__6__Impl"
    // InternalImperativeOCL.g:16944:1: rule__IfExpCS__Group__6__Impl : ( ( rule__IfExpCS__OwnedElseExpressionAssignment_6 ) ) ;
    public final void rule__IfExpCS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16948:1: ( ( ( rule__IfExpCS__OwnedElseExpressionAssignment_6 ) ) )
            // InternalImperativeOCL.g:16949:1: ( ( rule__IfExpCS__OwnedElseExpressionAssignment_6 ) )
            {
            // InternalImperativeOCL.g:16949:1: ( ( rule__IfExpCS__OwnedElseExpressionAssignment_6 ) )
            // InternalImperativeOCL.g:16950:1: ( rule__IfExpCS__OwnedElseExpressionAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionAssignment_6());
            }
            // InternalImperativeOCL.g:16951:1: ( rule__IfExpCS__OwnedElseExpressionAssignment_6 )
            // InternalImperativeOCL.g:16951:2: rule__IfExpCS__OwnedElseExpressionAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__OwnedElseExpressionAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionAssignment_6());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__6__Impl"


    // $ANTLR start "rule__IfExpCS__Group__7"
    // InternalImperativeOCL.g:16961:1: rule__IfExpCS__Group__7 : rule__IfExpCS__Group__7__Impl ;
    public final void rule__IfExpCS__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16965:1: ( rule__IfExpCS__Group__7__Impl )
            // InternalImperativeOCL.g:16966:2: rule__IfExpCS__Group__7__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__7"


    // $ANTLR start "rule__IfExpCS__Group__7__Impl"
    // InternalImperativeOCL.g:16972:1: rule__IfExpCS__Group__7__Impl : ( 'endif' ) ;
    public final void rule__IfExpCS__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:16976:1: ( ( 'endif' ) )
            // InternalImperativeOCL.g:16977:1: ( 'endif' )
            {
            // InternalImperativeOCL.g:16977:1: ( 'endif' )
            // InternalImperativeOCL.g:16978:1: 'endif'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getEndifKeyword_7());
            }
            match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getEndifKeyword_7());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__Group__7__Impl"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__0"
    // InternalImperativeOCL.g:17007:1: rule__ElseIfThenExpCS__Group__0 : rule__ElseIfThenExpCS__Group__0__Impl rule__ElseIfThenExpCS__Group__1 ;
    public final void rule__ElseIfThenExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17011:1: ( rule__ElseIfThenExpCS__Group__0__Impl rule__ElseIfThenExpCS__Group__1 )
            // InternalImperativeOCL.g:17012:2: rule__ElseIfThenExpCS__Group__0__Impl rule__ElseIfThenExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ElseIfThenExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__0"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:17019:1: rule__ElseIfThenExpCS__Group__0__Impl : ( 'elseif' ) ;
    public final void rule__ElseIfThenExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17023:1: ( ( 'elseif' ) )
            // InternalImperativeOCL.g:17024:1: ( 'elseif' )
            {
            // InternalImperativeOCL.g:17024:1: ( 'elseif' )
            // InternalImperativeOCL.g:17025:1: 'elseif'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());
            }
            match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__0__Impl"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__1"
    // InternalImperativeOCL.g:17038:1: rule__ElseIfThenExpCS__Group__1 : rule__ElseIfThenExpCS__Group__1__Impl rule__ElseIfThenExpCS__Group__2 ;
    public final void rule__ElseIfThenExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17042:1: ( rule__ElseIfThenExpCS__Group__1__Impl rule__ElseIfThenExpCS__Group__2 )
            // InternalImperativeOCL.g:17043:2: rule__ElseIfThenExpCS__Group__1__Impl rule__ElseIfThenExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ElseIfThenExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__1"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:17050:1: rule__ElseIfThenExpCS__Group__1__Impl : ( ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 ) ) ;
    public final void rule__ElseIfThenExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17054:1: ( ( ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 ) ) )
            // InternalImperativeOCL.g:17055:1: ( ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:17055:1: ( ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 ) )
            // InternalImperativeOCL.g:17056:1: ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionAssignment_1());
            }
            // InternalImperativeOCL.g:17057:1: ( rule__ElseIfThenExpCS__OwnedConditionAssignment_1 )
            // InternalImperativeOCL.g:17057:2: rule__ElseIfThenExpCS__OwnedConditionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__OwnedConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__1__Impl"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__2"
    // InternalImperativeOCL.g:17067:1: rule__ElseIfThenExpCS__Group__2 : rule__ElseIfThenExpCS__Group__2__Impl rule__ElseIfThenExpCS__Group__3 ;
    public final void rule__ElseIfThenExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17071:1: ( rule__ElseIfThenExpCS__Group__2__Impl rule__ElseIfThenExpCS__Group__3 )
            // InternalImperativeOCL.g:17072:2: rule__ElseIfThenExpCS__Group__2__Impl rule__ElseIfThenExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ElseIfThenExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__2"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:17079:1: rule__ElseIfThenExpCS__Group__2__Impl : ( 'then' ) ;
    public final void rule__ElseIfThenExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17083:1: ( ( 'then' ) )
            // InternalImperativeOCL.g:17084:1: ( 'then' )
            {
            // InternalImperativeOCL.g:17084:1: ( 'then' )
            // InternalImperativeOCL.g:17085:1: 'then'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());
            }
            match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__2__Impl"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__3"
    // InternalImperativeOCL.g:17098:1: rule__ElseIfThenExpCS__Group__3 : rule__ElseIfThenExpCS__Group__3__Impl ;
    public final void rule__ElseIfThenExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17102:1: ( rule__ElseIfThenExpCS__Group__3__Impl )
            // InternalImperativeOCL.g:17103:2: rule__ElseIfThenExpCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__3"


    // $ANTLR start "rule__ElseIfThenExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:17109:1: rule__ElseIfThenExpCS__Group__3__Impl : ( ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 ) ) ;
    public final void rule__ElseIfThenExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17113:1: ( ( ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 ) ) )
            // InternalImperativeOCL.g:17114:1: ( ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 ) )
            {
            // InternalImperativeOCL.g:17114:1: ( ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 ) )
            // InternalImperativeOCL.g:17115:1: ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionAssignment_3());
            }
            // InternalImperativeOCL.g:17116:1: ( rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 )
            // InternalImperativeOCL.g:17116:2: rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionAssignment_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__Group__3__Impl"


    // $ANTLR start "rule__LetExpCS__Group__0"
    // InternalImperativeOCL.g:17134:1: rule__LetExpCS__Group__0 : rule__LetExpCS__Group__0__Impl rule__LetExpCS__Group__1 ;
    public final void rule__LetExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17138:1: ( rule__LetExpCS__Group__0__Impl rule__LetExpCS__Group__1 )
            // InternalImperativeOCL.g:17139:2: rule__LetExpCS__Group__0__Impl rule__LetExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__LetExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__0"


    // $ANTLR start "rule__LetExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:17146:1: rule__LetExpCS__Group__0__Impl : ( 'let' ) ;
    public final void rule__LetExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17150:1: ( ( 'let' ) )
            // InternalImperativeOCL.g:17151:1: ( 'let' )
            {
            // InternalImperativeOCL.g:17151:1: ( 'let' )
            // InternalImperativeOCL.g:17152:1: 'let'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getLetKeyword_0());
            }
            match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getLetKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__0__Impl"


    // $ANTLR start "rule__LetExpCS__Group__1"
    // InternalImperativeOCL.g:17165:1: rule__LetExpCS__Group__1 : rule__LetExpCS__Group__1__Impl rule__LetExpCS__Group__2 ;
    public final void rule__LetExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17169:1: ( rule__LetExpCS__Group__1__Impl rule__LetExpCS__Group__2 )
            // InternalImperativeOCL.g:17170:2: rule__LetExpCS__Group__1__Impl rule__LetExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__LetExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__1"


    // $ANTLR start "rule__LetExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:17177:1: rule__LetExpCS__Group__1__Impl : ( ( rule__LetExpCS__OwnedVariablesAssignment_1 ) ) ;
    public final void rule__LetExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17181:1: ( ( ( rule__LetExpCS__OwnedVariablesAssignment_1 ) ) )
            // InternalImperativeOCL.g:17182:1: ( ( rule__LetExpCS__OwnedVariablesAssignment_1 ) )
            {
            // InternalImperativeOCL.g:17182:1: ( ( rule__LetExpCS__OwnedVariablesAssignment_1 ) )
            // InternalImperativeOCL.g:17183:1: ( rule__LetExpCS__OwnedVariablesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_1());
            }
            // InternalImperativeOCL.g:17184:1: ( rule__LetExpCS__OwnedVariablesAssignment_1 )
            // InternalImperativeOCL.g:17184:2: rule__LetExpCS__OwnedVariablesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__OwnedVariablesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__1__Impl"


    // $ANTLR start "rule__LetExpCS__Group__2"
    // InternalImperativeOCL.g:17194:1: rule__LetExpCS__Group__2 : rule__LetExpCS__Group__2__Impl rule__LetExpCS__Group__3 ;
    public final void rule__LetExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17198:1: ( rule__LetExpCS__Group__2__Impl rule__LetExpCS__Group__3 )
            // InternalImperativeOCL.g:17199:2: rule__LetExpCS__Group__2__Impl rule__LetExpCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__LetExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__2"


    // $ANTLR start "rule__LetExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:17206:1: rule__LetExpCS__Group__2__Impl : ( ( rule__LetExpCS__Group_2__0 )* ) ;
    public final void rule__LetExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17210:1: ( ( ( rule__LetExpCS__Group_2__0 )* ) )
            // InternalImperativeOCL.g:17211:1: ( ( rule__LetExpCS__Group_2__0 )* )
            {
            // InternalImperativeOCL.g:17211:1: ( ( rule__LetExpCS__Group_2__0 )* )
            // InternalImperativeOCL.g:17212:1: ( rule__LetExpCS__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:17213:1: ( rule__LetExpCS__Group_2__0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==67) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalImperativeOCL.g:17213:2: rule__LetExpCS__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__LetExpCS__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__2__Impl"


    // $ANTLR start "rule__LetExpCS__Group__3"
    // InternalImperativeOCL.g:17223:1: rule__LetExpCS__Group__3 : rule__LetExpCS__Group__3__Impl rule__LetExpCS__Group__4 ;
    public final void rule__LetExpCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17227:1: ( rule__LetExpCS__Group__3__Impl rule__LetExpCS__Group__4 )
            // InternalImperativeOCL.g:17228:2: rule__LetExpCS__Group__3__Impl rule__LetExpCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LetExpCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__3"


    // $ANTLR start "rule__LetExpCS__Group__3__Impl"
    // InternalImperativeOCL.g:17235:1: rule__LetExpCS__Group__3__Impl : ( 'in' ) ;
    public final void rule__LetExpCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17239:1: ( ( 'in' ) )
            // InternalImperativeOCL.g:17240:1: ( 'in' )
            {
            // InternalImperativeOCL.g:17240:1: ( 'in' )
            // InternalImperativeOCL.g:17241:1: 'in'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getInKeyword_3());
            }
            match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getInKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__3__Impl"


    // $ANTLR start "rule__LetExpCS__Group__4"
    // InternalImperativeOCL.g:17254:1: rule__LetExpCS__Group__4 : rule__LetExpCS__Group__4__Impl ;
    public final void rule__LetExpCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17258:1: ( rule__LetExpCS__Group__4__Impl )
            // InternalImperativeOCL.g:17259:2: rule__LetExpCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__4"


    // $ANTLR start "rule__LetExpCS__Group__4__Impl"
    // InternalImperativeOCL.g:17265:1: rule__LetExpCS__Group__4__Impl : ( ( rule__LetExpCS__OwnedInExpressionAssignment_4 ) ) ;
    public final void rule__LetExpCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17269:1: ( ( ( rule__LetExpCS__OwnedInExpressionAssignment_4 ) ) )
            // InternalImperativeOCL.g:17270:1: ( ( rule__LetExpCS__OwnedInExpressionAssignment_4 ) )
            {
            // InternalImperativeOCL.g:17270:1: ( ( rule__LetExpCS__OwnedInExpressionAssignment_4 ) )
            // InternalImperativeOCL.g:17271:1: ( rule__LetExpCS__OwnedInExpressionAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedInExpressionAssignment_4());
            }
            // InternalImperativeOCL.g:17272:1: ( rule__LetExpCS__OwnedInExpressionAssignment_4 )
            // InternalImperativeOCL.g:17272:2: rule__LetExpCS__OwnedInExpressionAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__OwnedInExpressionAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedInExpressionAssignment_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group__4__Impl"


    // $ANTLR start "rule__LetExpCS__Group_2__0"
    // InternalImperativeOCL.g:17292:1: rule__LetExpCS__Group_2__0 : rule__LetExpCS__Group_2__0__Impl rule__LetExpCS__Group_2__1 ;
    public final void rule__LetExpCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17296:1: ( rule__LetExpCS__Group_2__0__Impl rule__LetExpCS__Group_2__1 )
            // InternalImperativeOCL.g:17297:2: rule__LetExpCS__Group_2__0__Impl rule__LetExpCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__LetExpCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group_2__0"


    // $ANTLR start "rule__LetExpCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:17304:1: rule__LetExpCS__Group_2__0__Impl : ( ',' ) ;
    public final void rule__LetExpCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17308:1: ( ( ',' ) )
            // InternalImperativeOCL.g:17309:1: ( ',' )
            {
            // InternalImperativeOCL.g:17309:1: ( ',' )
            // InternalImperativeOCL.g:17310:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group_2__0__Impl"


    // $ANTLR start "rule__LetExpCS__Group_2__1"
    // InternalImperativeOCL.g:17323:1: rule__LetExpCS__Group_2__1 : rule__LetExpCS__Group_2__1__Impl ;
    public final void rule__LetExpCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17327:1: ( rule__LetExpCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:17328:2: rule__LetExpCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group_2__1"


    // $ANTLR start "rule__LetExpCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:17334:1: rule__LetExpCS__Group_2__1__Impl : ( ( rule__LetExpCS__OwnedVariablesAssignment_2_1 ) ) ;
    public final void rule__LetExpCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17338:1: ( ( ( rule__LetExpCS__OwnedVariablesAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:17339:1: ( ( rule__LetExpCS__OwnedVariablesAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:17339:1: ( ( rule__LetExpCS__OwnedVariablesAssignment_2_1 ) )
            // InternalImperativeOCL.g:17340:1: ( rule__LetExpCS__OwnedVariablesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_2_1());
            }
            // InternalImperativeOCL.g:17341:1: ( rule__LetExpCS__OwnedVariablesAssignment_2_1 )
            // InternalImperativeOCL.g:17341:2: rule__LetExpCS__OwnedVariablesAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetExpCS__OwnedVariablesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__Group_2__1__Impl"


    // $ANTLR start "rule__LetVariableCS__Group__0"
    // InternalImperativeOCL.g:17355:1: rule__LetVariableCS__Group__0 : rule__LetVariableCS__Group__0__Impl rule__LetVariableCS__Group__1 ;
    public final void rule__LetVariableCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17359:1: ( rule__LetVariableCS__Group__0__Impl rule__LetVariableCS__Group__1 )
            // InternalImperativeOCL.g:17360:2: rule__LetVariableCS__Group__0__Impl rule__LetVariableCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__LetVariableCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__0"


    // $ANTLR start "rule__LetVariableCS__Group__0__Impl"
    // InternalImperativeOCL.g:17367:1: rule__LetVariableCS__Group__0__Impl : ( ( rule__LetVariableCS__NameAssignment_0 ) ) ;
    public final void rule__LetVariableCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17371:1: ( ( ( rule__LetVariableCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:17372:1: ( ( rule__LetVariableCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:17372:1: ( ( rule__LetVariableCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:17373:1: ( rule__LetVariableCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:17374:1: ( rule__LetVariableCS__NameAssignment_0 )
            // InternalImperativeOCL.g:17374:2: rule__LetVariableCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__0__Impl"


    // $ANTLR start "rule__LetVariableCS__Group__1"
    // InternalImperativeOCL.g:17384:1: rule__LetVariableCS__Group__1 : rule__LetVariableCS__Group__1__Impl rule__LetVariableCS__Group__2 ;
    public final void rule__LetVariableCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17388:1: ( rule__LetVariableCS__Group__1__Impl rule__LetVariableCS__Group__2 )
            // InternalImperativeOCL.g:17389:2: rule__LetVariableCS__Group__1__Impl rule__LetVariableCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__LetVariableCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__1"


    // $ANTLR start "rule__LetVariableCS__Group__1__Impl"
    // InternalImperativeOCL.g:17396:1: rule__LetVariableCS__Group__1__Impl : ( ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )? ) ;
    public final void rule__LetVariableCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17400:1: ( ( ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )? ) )
            // InternalImperativeOCL.g:17401:1: ( ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )? )
            {
            // InternalImperativeOCL.g:17401:1: ( ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )? )
            // InternalImperativeOCL.g:17402:1: ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseAssignment_1());
            }
            // InternalImperativeOCL.g:17403:1: ( rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==64) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalImperativeOCL.g:17403:2: rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__1__Impl"


    // $ANTLR start "rule__LetVariableCS__Group__2"
    // InternalImperativeOCL.g:17413:1: rule__LetVariableCS__Group__2 : rule__LetVariableCS__Group__2__Impl rule__LetVariableCS__Group__3 ;
    public final void rule__LetVariableCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17417:1: ( rule__LetVariableCS__Group__2__Impl rule__LetVariableCS__Group__3 )
            // InternalImperativeOCL.g:17418:2: rule__LetVariableCS__Group__2__Impl rule__LetVariableCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__LetVariableCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__2"


    // $ANTLR start "rule__LetVariableCS__Group__2__Impl"
    // InternalImperativeOCL.g:17425:1: rule__LetVariableCS__Group__2__Impl : ( ( rule__LetVariableCS__Group_2__0 )? ) ;
    public final void rule__LetVariableCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17429:1: ( ( ( rule__LetVariableCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:17430:1: ( ( rule__LetVariableCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:17430:1: ( ( rule__LetVariableCS__Group_2__0 )? )
            // InternalImperativeOCL.g:17431:1: ( rule__LetVariableCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:17432:1: ( rule__LetVariableCS__Group_2__0 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==75) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalImperativeOCL.g:17432:2: rule__LetVariableCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LetVariableCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__2__Impl"


    // $ANTLR start "rule__LetVariableCS__Group__3"
    // InternalImperativeOCL.g:17442:1: rule__LetVariableCS__Group__3 : rule__LetVariableCS__Group__3__Impl rule__LetVariableCS__Group__4 ;
    public final void rule__LetVariableCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17446:1: ( rule__LetVariableCS__Group__3__Impl rule__LetVariableCS__Group__4 )
            // InternalImperativeOCL.g:17447:2: rule__LetVariableCS__Group__3__Impl rule__LetVariableCS__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LetVariableCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__3"


    // $ANTLR start "rule__LetVariableCS__Group__3__Impl"
    // InternalImperativeOCL.g:17454:1: rule__LetVariableCS__Group__3__Impl : ( '=' ) ;
    public final void rule__LetVariableCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17458:1: ( ( '=' ) )
            // InternalImperativeOCL.g:17459:1: ( '=' )
            {
            // InternalImperativeOCL.g:17459:1: ( '=' )
            // InternalImperativeOCL.g:17460:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__3__Impl"


    // $ANTLR start "rule__LetVariableCS__Group__4"
    // InternalImperativeOCL.g:17473:1: rule__LetVariableCS__Group__4 : rule__LetVariableCS__Group__4__Impl ;
    public final void rule__LetVariableCS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17477:1: ( rule__LetVariableCS__Group__4__Impl )
            // InternalImperativeOCL.g:17478:2: rule__LetVariableCS__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__4"


    // $ANTLR start "rule__LetVariableCS__Group__4__Impl"
    // InternalImperativeOCL.g:17484:1: rule__LetVariableCS__Group__4__Impl : ( ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 ) ) ;
    public final void rule__LetVariableCS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17488:1: ( ( ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 ) ) )
            // InternalImperativeOCL.g:17489:1: ( ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 ) )
            {
            // InternalImperativeOCL.g:17489:1: ( ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 ) )
            // InternalImperativeOCL.g:17490:1: ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionAssignment_4());
            }
            // InternalImperativeOCL.g:17491:1: ( rule__LetVariableCS__OwnedInitExpressionAssignment_4 )
            // InternalImperativeOCL.g:17491:2: rule__LetVariableCS__OwnedInitExpressionAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__OwnedInitExpressionAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionAssignment_4());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group__4__Impl"


    // $ANTLR start "rule__LetVariableCS__Group_2__0"
    // InternalImperativeOCL.g:17511:1: rule__LetVariableCS__Group_2__0 : rule__LetVariableCS__Group_2__0__Impl rule__LetVariableCS__Group_2__1 ;
    public final void rule__LetVariableCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17515:1: ( rule__LetVariableCS__Group_2__0__Impl rule__LetVariableCS__Group_2__1 )
            // InternalImperativeOCL.g:17516:2: rule__LetVariableCS__Group_2__0__Impl rule__LetVariableCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LetVariableCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group_2__0"


    // $ANTLR start "rule__LetVariableCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:17523:1: rule__LetVariableCS__Group_2__0__Impl : ( ':' ) ;
    public final void rule__LetVariableCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17527:1: ( ( ':' ) )
            // InternalImperativeOCL.g:17528:1: ( ':' )
            {
            // InternalImperativeOCL.g:17528:1: ( ':' )
            // InternalImperativeOCL.g:17529:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group_2__0__Impl"


    // $ANTLR start "rule__LetVariableCS__Group_2__1"
    // InternalImperativeOCL.g:17542:1: rule__LetVariableCS__Group_2__1 : rule__LetVariableCS__Group_2__1__Impl ;
    public final void rule__LetVariableCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17546:1: ( rule__LetVariableCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:17547:2: rule__LetVariableCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group_2__1"


    // $ANTLR start "rule__LetVariableCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:17553:1: rule__LetVariableCS__Group_2__1__Impl : ( ( rule__LetVariableCS__OwnedTypeAssignment_2_1 ) ) ;
    public final void rule__LetVariableCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17557:1: ( ( ( rule__LetVariableCS__OwnedTypeAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:17558:1: ( ( rule__LetVariableCS__OwnedTypeAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:17558:1: ( ( rule__LetVariableCS__OwnedTypeAssignment_2_1 ) )
            // InternalImperativeOCL.g:17559:1: ( rule__LetVariableCS__OwnedTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_2_1());
            }
            // InternalImperativeOCL.g:17560:1: ( rule__LetVariableCS__OwnedTypeAssignment_2_1 )
            // InternalImperativeOCL.g:17560:2: rule__LetVariableCS__OwnedTypeAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LetVariableCS__OwnedTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__Group_2__1__Impl"


    // $ANTLR start "rule__NestedExpCS__Group__0"
    // InternalImperativeOCL.g:17574:1: rule__NestedExpCS__Group__0 : rule__NestedExpCS__Group__0__Impl rule__NestedExpCS__Group__1 ;
    public final void rule__NestedExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17578:1: ( rule__NestedExpCS__Group__0__Impl rule__NestedExpCS__Group__1 )
            // InternalImperativeOCL.g:17579:2: rule__NestedExpCS__Group__0__Impl rule__NestedExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__NestedExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__0"


    // $ANTLR start "rule__NestedExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:17586:1: rule__NestedExpCS__Group__0__Impl : ( '(' ) ;
    public final void rule__NestedExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17590:1: ( ( '(' ) )
            // InternalImperativeOCL.g:17591:1: ( '(' )
            {
            // InternalImperativeOCL.g:17591:1: ( '(' )
            // InternalImperativeOCL.g:17592:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__0__Impl"


    // $ANTLR start "rule__NestedExpCS__Group__1"
    // InternalImperativeOCL.g:17605:1: rule__NestedExpCS__Group__1 : rule__NestedExpCS__Group__1__Impl rule__NestedExpCS__Group__2 ;
    public final void rule__NestedExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17609:1: ( rule__NestedExpCS__Group__1__Impl rule__NestedExpCS__Group__2 )
            // InternalImperativeOCL.g:17610:2: rule__NestedExpCS__Group__1__Impl rule__NestedExpCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__NestedExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__1"


    // $ANTLR start "rule__NestedExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:17617:1: rule__NestedExpCS__Group__1__Impl : ( ( rule__NestedExpCS__OwnedExpressionAssignment_1 ) ) ;
    public final void rule__NestedExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17621:1: ( ( ( rule__NestedExpCS__OwnedExpressionAssignment_1 ) ) )
            // InternalImperativeOCL.g:17622:1: ( ( rule__NestedExpCS__OwnedExpressionAssignment_1 ) )
            {
            // InternalImperativeOCL.g:17622:1: ( ( rule__NestedExpCS__OwnedExpressionAssignment_1 ) )
            // InternalImperativeOCL.g:17623:1: ( rule__NestedExpCS__OwnedExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSAccess().getOwnedExpressionAssignment_1());
            }
            // InternalImperativeOCL.g:17624:1: ( rule__NestedExpCS__OwnedExpressionAssignment_1 )
            // InternalImperativeOCL.g:17624:2: rule__NestedExpCS__OwnedExpressionAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpCS__OwnedExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSAccess().getOwnedExpressionAssignment_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__1__Impl"


    // $ANTLR start "rule__NestedExpCS__Group__2"
    // InternalImperativeOCL.g:17634:1: rule__NestedExpCS__Group__2 : rule__NestedExpCS__Group__2__Impl ;
    public final void rule__NestedExpCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17638:1: ( rule__NestedExpCS__Group__2__Impl )
            // InternalImperativeOCL.g:17639:2: rule__NestedExpCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__2"


    // $ANTLR start "rule__NestedExpCS__Group__2__Impl"
    // InternalImperativeOCL.g:17645:1: rule__NestedExpCS__Group__2__Impl : ( ')' ) ;
    public final void rule__NestedExpCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17649:1: ( ( ')' ) )
            // InternalImperativeOCL.g:17650:1: ( ')' )
            {
            // InternalImperativeOCL.g:17650:1: ( ')' )
            // InternalImperativeOCL.g:17651:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__Group__2__Impl"


    // $ANTLR start "rule__SelfExpCS__Group__0"
    // InternalImperativeOCL.g:17670:1: rule__SelfExpCS__Group__0 : rule__SelfExpCS__Group__0__Impl rule__SelfExpCS__Group__1 ;
    public final void rule__SelfExpCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17674:1: ( rule__SelfExpCS__Group__0__Impl rule__SelfExpCS__Group__1 )
            // InternalImperativeOCL.g:17675:2: rule__SelfExpCS__Group__0__Impl rule__SelfExpCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__SelfExpCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SelfExpCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelfExpCS__Group__0"


    // $ANTLR start "rule__SelfExpCS__Group__0__Impl"
    // InternalImperativeOCL.g:17682:1: rule__SelfExpCS__Group__0__Impl : ( () ) ;
    public final void rule__SelfExpCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17686:1: ( ( () ) )
            // InternalImperativeOCL.g:17687:1: ( () )
            {
            // InternalImperativeOCL.g:17687:1: ( () )
            // InternalImperativeOCL.g:17688:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0());
            }
            // InternalImperativeOCL.g:17689:1: ()
            // InternalImperativeOCL.g:17691:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelfExpCS__Group__0__Impl"


    // $ANTLR start "rule__SelfExpCS__Group__1"
    // InternalImperativeOCL.g:17701:1: rule__SelfExpCS__Group__1 : rule__SelfExpCS__Group__1__Impl ;
    public final void rule__SelfExpCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17705:1: ( rule__SelfExpCS__Group__1__Impl )
            // InternalImperativeOCL.g:17706:2: rule__SelfExpCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SelfExpCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelfExpCS__Group__1"


    // $ANTLR start "rule__SelfExpCS__Group__1__Impl"
    // InternalImperativeOCL.g:17712:1: rule__SelfExpCS__Group__1__Impl : ( 'self' ) ;
    public final void rule__SelfExpCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17716:1: ( ( 'self' ) )
            // InternalImperativeOCL.g:17717:1: ( 'self' )
            {
            // InternalImperativeOCL.g:17717:1: ( 'self' )
            // InternalImperativeOCL.g:17718:1: 'self'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());
            }
            match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelfExpCS__Group__1__Impl"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group__0"
    // InternalImperativeOCL.g:17735:1: rule__MultiplicityBoundsCS__Group__0 : rule__MultiplicityBoundsCS__Group__0__Impl rule__MultiplicityBoundsCS__Group__1 ;
    public final void rule__MultiplicityBoundsCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17739:1: ( rule__MultiplicityBoundsCS__Group__0__Impl rule__MultiplicityBoundsCS__Group__1 )
            // InternalImperativeOCL.g:17740:2: rule__MultiplicityBoundsCS__Group__0__Impl rule__MultiplicityBoundsCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__MultiplicityBoundsCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group__0"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group__0__Impl"
    // InternalImperativeOCL.g:17747:1: rule__MultiplicityBoundsCS__Group__0__Impl : ( ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 ) ) ;
    public final void rule__MultiplicityBoundsCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17751:1: ( ( ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 ) ) )
            // InternalImperativeOCL.g:17752:1: ( ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 ) )
            {
            // InternalImperativeOCL.g:17752:1: ( ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 ) )
            // InternalImperativeOCL.g:17753:1: ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0());
            }
            // InternalImperativeOCL.g:17754:1: ( rule__MultiplicityBoundsCS__LowerBoundAssignment_0 )
            // InternalImperativeOCL.g:17754:2: rule__MultiplicityBoundsCS__LowerBoundAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__LowerBoundAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group__0__Impl"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group__1"
    // InternalImperativeOCL.g:17764:1: rule__MultiplicityBoundsCS__Group__1 : rule__MultiplicityBoundsCS__Group__1__Impl ;
    public final void rule__MultiplicityBoundsCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17768:1: ( rule__MultiplicityBoundsCS__Group__1__Impl )
            // InternalImperativeOCL.g:17769:2: rule__MultiplicityBoundsCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group__1"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group__1__Impl"
    // InternalImperativeOCL.g:17775:1: rule__MultiplicityBoundsCS__Group__1__Impl : ( ( rule__MultiplicityBoundsCS__Group_1__0 )? ) ;
    public final void rule__MultiplicityBoundsCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17779:1: ( ( ( rule__MultiplicityBoundsCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:17780:1: ( ( rule__MultiplicityBoundsCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:17780:1: ( ( rule__MultiplicityBoundsCS__Group_1__0 )? )
            // InternalImperativeOCL.g:17781:1: ( rule__MultiplicityBoundsCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:17782:1: ( rule__MultiplicityBoundsCS__Group_1__0 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==95) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalImperativeOCL.g:17782:2: rule__MultiplicityBoundsCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MultiplicityBoundsCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group__1__Impl"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group_1__0"
    // InternalImperativeOCL.g:17796:1: rule__MultiplicityBoundsCS__Group_1__0 : rule__MultiplicityBoundsCS__Group_1__0__Impl rule__MultiplicityBoundsCS__Group_1__1 ;
    public final void rule__MultiplicityBoundsCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17800:1: ( rule__MultiplicityBoundsCS__Group_1__0__Impl rule__MultiplicityBoundsCS__Group_1__1 )
            // InternalImperativeOCL.g:17801:2: rule__MultiplicityBoundsCS__Group_1__0__Impl rule__MultiplicityBoundsCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__MultiplicityBoundsCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group_1__0"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:17808:1: rule__MultiplicityBoundsCS__Group_1__0__Impl : ( '..' ) ;
    public final void rule__MultiplicityBoundsCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17812:1: ( ( '..' ) )
            // InternalImperativeOCL.g:17813:1: ( '..' )
            {
            // InternalImperativeOCL.g:17813:1: ( '..' )
            // InternalImperativeOCL.g:17814:1: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());
            }
            match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group_1__1"
    // InternalImperativeOCL.g:17827:1: rule__MultiplicityBoundsCS__Group_1__1 : rule__MultiplicityBoundsCS__Group_1__1__Impl ;
    public final void rule__MultiplicityBoundsCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17831:1: ( rule__MultiplicityBoundsCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:17832:2: rule__MultiplicityBoundsCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group_1__1"


    // $ANTLR start "rule__MultiplicityBoundsCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:17838:1: rule__MultiplicityBoundsCS__Group_1__1__Impl : ( ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 ) ) ;
    public final void rule__MultiplicityBoundsCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17842:1: ( ( ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:17843:1: ( ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:17843:1: ( ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 ) )
            // InternalImperativeOCL.g:17844:1: ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1());
            }
            // InternalImperativeOCL.g:17845:1: ( rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 )
            // InternalImperativeOCL.g:17845:2: rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicityCS__Group__0"
    // InternalImperativeOCL.g:17859:1: rule__MultiplicityCS__Group__0 : rule__MultiplicityCS__Group__0__Impl rule__MultiplicityCS__Group__1 ;
    public final void rule__MultiplicityCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17863:1: ( rule__MultiplicityCS__Group__0__Impl rule__MultiplicityCS__Group__1 )
            // InternalImperativeOCL.g:17864:2: rule__MultiplicityCS__Group__0__Impl rule__MultiplicityCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__MultiplicityCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__0"


    // $ANTLR start "rule__MultiplicityCS__Group__0__Impl"
    // InternalImperativeOCL.g:17871:1: rule__MultiplicityCS__Group__0__Impl : ( '[' ) ;
    public final void rule__MultiplicityCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17875:1: ( ( '[' ) )
            // InternalImperativeOCL.g:17876:1: ( '[' )
            {
            // InternalImperativeOCL.g:17876:1: ( '[' )
            // InternalImperativeOCL.g:17877:1: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());
            }
            match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__0__Impl"


    // $ANTLR start "rule__MultiplicityCS__Group__1"
    // InternalImperativeOCL.g:17890:1: rule__MultiplicityCS__Group__1 : rule__MultiplicityCS__Group__1__Impl rule__MultiplicityCS__Group__2 ;
    public final void rule__MultiplicityCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17894:1: ( rule__MultiplicityCS__Group__1__Impl rule__MultiplicityCS__Group__2 )
            // InternalImperativeOCL.g:17895:2: rule__MultiplicityCS__Group__1__Impl rule__MultiplicityCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__MultiplicityCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__1"


    // $ANTLR start "rule__MultiplicityCS__Group__1__Impl"
    // InternalImperativeOCL.g:17902:1: rule__MultiplicityCS__Group__1__Impl : ( ( rule__MultiplicityCS__Alternatives_1 ) ) ;
    public final void rule__MultiplicityCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17906:1: ( ( ( rule__MultiplicityCS__Alternatives_1 ) ) )
            // InternalImperativeOCL.g:17907:1: ( ( rule__MultiplicityCS__Alternatives_1 ) )
            {
            // InternalImperativeOCL.g:17907:1: ( ( rule__MultiplicityCS__Alternatives_1 ) )
            // InternalImperativeOCL.g:17908:1: ( rule__MultiplicityCS__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getAlternatives_1());
            }
            // InternalImperativeOCL.g:17909:1: ( rule__MultiplicityCS__Alternatives_1 )
            // InternalImperativeOCL.g:17909:2: rule__MultiplicityCS__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getAlternatives_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__1__Impl"


    // $ANTLR start "rule__MultiplicityCS__Group__2"
    // InternalImperativeOCL.g:17919:1: rule__MultiplicityCS__Group__2 : rule__MultiplicityCS__Group__2__Impl rule__MultiplicityCS__Group__3 ;
    public final void rule__MultiplicityCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17923:1: ( rule__MultiplicityCS__Group__2__Impl rule__MultiplicityCS__Group__3 )
            // InternalImperativeOCL.g:17924:2: rule__MultiplicityCS__Group__2__Impl rule__MultiplicityCS__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__MultiplicityCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__2"


    // $ANTLR start "rule__MultiplicityCS__Group__2__Impl"
    // InternalImperativeOCL.g:17931:1: rule__MultiplicityCS__Group__2__Impl : ( ( rule__MultiplicityCS__Alternatives_2 )? ) ;
    public final void rule__MultiplicityCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17935:1: ( ( ( rule__MultiplicityCS__Alternatives_2 )? ) )
            // InternalImperativeOCL.g:17936:1: ( ( rule__MultiplicityCS__Alternatives_2 )? )
            {
            // InternalImperativeOCL.g:17936:1: ( ( rule__MultiplicityCS__Alternatives_2 )? )
            // InternalImperativeOCL.g:17937:1: ( rule__MultiplicityCS__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getAlternatives_2());
            }
            // InternalImperativeOCL.g:17938:1: ( rule__MultiplicityCS__Alternatives_2 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==55||LA128_0==117) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalImperativeOCL.g:17938:2: rule__MultiplicityCS__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MultiplicityCS__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getAlternatives_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__2__Impl"


    // $ANTLR start "rule__MultiplicityCS__Group__3"
    // InternalImperativeOCL.g:17948:1: rule__MultiplicityCS__Group__3 : rule__MultiplicityCS__Group__3__Impl ;
    public final void rule__MultiplicityCS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17952:1: ( rule__MultiplicityCS__Group__3__Impl )
            // InternalImperativeOCL.g:17953:2: rule__MultiplicityCS__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityCS__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__3"


    // $ANTLR start "rule__MultiplicityCS__Group__3__Impl"
    // InternalImperativeOCL.g:17959:1: rule__MultiplicityCS__Group__3__Impl : ( ']' ) ;
    public final void rule__MultiplicityCS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17963:1: ( ( ']' ) )
            // InternalImperativeOCL.g:17964:1: ( ']' )
            {
            // InternalImperativeOCL.g:17964:1: ( ']' )
            // InternalImperativeOCL.g:17965:1: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());
            }
            match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__Group__3__Impl"


    // $ANTLR start "rule__PathNameCS__Group__0"
    // InternalImperativeOCL.g:17986:1: rule__PathNameCS__Group__0 : rule__PathNameCS__Group__0__Impl rule__PathNameCS__Group__1 ;
    public final void rule__PathNameCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:17990:1: ( rule__PathNameCS__Group__0__Impl rule__PathNameCS__Group__1 )
            // InternalImperativeOCL.g:17991:2: rule__PathNameCS__Group__0__Impl rule__PathNameCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__PathNameCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group__0"


    // $ANTLR start "rule__PathNameCS__Group__0__Impl"
    // InternalImperativeOCL.g:17998:1: rule__PathNameCS__Group__0__Impl : ( ( rule__PathNameCS__OwnedPathElementsAssignment_0 ) ) ;
    public final void rule__PathNameCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18002:1: ( ( ( rule__PathNameCS__OwnedPathElementsAssignment_0 ) ) )
            // InternalImperativeOCL.g:18003:1: ( ( rule__PathNameCS__OwnedPathElementsAssignment_0 ) )
            {
            // InternalImperativeOCL.g:18003:1: ( ( rule__PathNameCS__OwnedPathElementsAssignment_0 ) )
            // InternalImperativeOCL.g:18004:1: ( rule__PathNameCS__OwnedPathElementsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_0());
            }
            // InternalImperativeOCL.g:18005:1: ( rule__PathNameCS__OwnedPathElementsAssignment_0 )
            // InternalImperativeOCL.g:18005:2: rule__PathNameCS__OwnedPathElementsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__OwnedPathElementsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group__0__Impl"


    // $ANTLR start "rule__PathNameCS__Group__1"
    // InternalImperativeOCL.g:18015:1: rule__PathNameCS__Group__1 : rule__PathNameCS__Group__1__Impl ;
    public final void rule__PathNameCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18019:1: ( rule__PathNameCS__Group__1__Impl )
            // InternalImperativeOCL.g:18020:2: rule__PathNameCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group__1"


    // $ANTLR start "rule__PathNameCS__Group__1__Impl"
    // InternalImperativeOCL.g:18026:1: rule__PathNameCS__Group__1__Impl : ( ( rule__PathNameCS__Group_1__0 )* ) ;
    public final void rule__PathNameCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18030:1: ( ( ( rule__PathNameCS__Group_1__0 )* ) )
            // InternalImperativeOCL.g:18031:1: ( ( rule__PathNameCS__Group_1__0 )* )
            {
            // InternalImperativeOCL.g:18031:1: ( ( rule__PathNameCS__Group_1__0 )* )
            // InternalImperativeOCL.g:18032:1: ( rule__PathNameCS__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:18033:1: ( rule__PathNameCS__Group_1__0 )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==110) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalImperativeOCL.g:18033:2: rule__PathNameCS__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    rule__PathNameCS__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group__1__Impl"


    // $ANTLR start "rule__PathNameCS__Group_1__0"
    // InternalImperativeOCL.g:18047:1: rule__PathNameCS__Group_1__0 : rule__PathNameCS__Group_1__0__Impl rule__PathNameCS__Group_1__1 ;
    public final void rule__PathNameCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18051:1: ( rule__PathNameCS__Group_1__0__Impl rule__PathNameCS__Group_1__1 )
            // InternalImperativeOCL.g:18052:2: rule__PathNameCS__Group_1__0__Impl rule__PathNameCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__PathNameCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group_1__0"


    // $ANTLR start "rule__PathNameCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:18059:1: rule__PathNameCS__Group_1__0__Impl : ( '::' ) ;
    public final void rule__PathNameCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18063:1: ( ( '::' ) )
            // InternalImperativeOCL.g:18064:1: ( '::' )
            {
            // InternalImperativeOCL.g:18064:1: ( '::' )
            // InternalImperativeOCL.g:18065:1: '::'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());
            }
            match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group_1__0__Impl"


    // $ANTLR start "rule__PathNameCS__Group_1__1"
    // InternalImperativeOCL.g:18078:1: rule__PathNameCS__Group_1__1 : rule__PathNameCS__Group_1__1__Impl ;
    public final void rule__PathNameCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18082:1: ( rule__PathNameCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:18083:2: rule__PathNameCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group_1__1"


    // $ANTLR start "rule__PathNameCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:18089:1: rule__PathNameCS__Group_1__1__Impl : ( ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 ) ) ;
    public final void rule__PathNameCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18093:1: ( ( ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:18094:1: ( ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:18094:1: ( ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 ) )
            // InternalImperativeOCL.g:18095:1: ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_1_1());
            }
            // InternalImperativeOCL.g:18096:1: ( rule__PathNameCS__OwnedPathElementsAssignment_1_1 )
            // InternalImperativeOCL.g:18096:2: rule__PathNameCS__OwnedPathElementsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PathNameCS__OwnedPathElementsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__Group_1__1__Impl"


    // $ANTLR start "rule__TemplateBindingCS__Group__0"
    // InternalImperativeOCL.g:18110:1: rule__TemplateBindingCS__Group__0 : rule__TemplateBindingCS__Group__0__Impl rule__TemplateBindingCS__Group__1 ;
    public final void rule__TemplateBindingCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18114:1: ( rule__TemplateBindingCS__Group__0__Impl rule__TemplateBindingCS__Group__1 )
            // InternalImperativeOCL.g:18115:2: rule__TemplateBindingCS__Group__0__Impl rule__TemplateBindingCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__TemplateBindingCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__0"


    // $ANTLR start "rule__TemplateBindingCS__Group__0__Impl"
    // InternalImperativeOCL.g:18122:1: rule__TemplateBindingCS__Group__0__Impl : ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 ) ) ;
    public final void rule__TemplateBindingCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18126:1: ( ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 ) ) )
            // InternalImperativeOCL.g:18127:1: ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 ) )
            {
            // InternalImperativeOCL.g:18127:1: ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 ) )
            // InternalImperativeOCL.g:18128:1: ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_0());
            }
            // InternalImperativeOCL.g:18129:1: ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 )
            // InternalImperativeOCL.g:18129:2: rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__0__Impl"


    // $ANTLR start "rule__TemplateBindingCS__Group__1"
    // InternalImperativeOCL.g:18139:1: rule__TemplateBindingCS__Group__1 : rule__TemplateBindingCS__Group__1__Impl rule__TemplateBindingCS__Group__2 ;
    public final void rule__TemplateBindingCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18143:1: ( rule__TemplateBindingCS__Group__1__Impl rule__TemplateBindingCS__Group__2 )
            // InternalImperativeOCL.g:18144:2: rule__TemplateBindingCS__Group__1__Impl rule__TemplateBindingCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__TemplateBindingCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__1"


    // $ANTLR start "rule__TemplateBindingCS__Group__1__Impl"
    // InternalImperativeOCL.g:18151:1: rule__TemplateBindingCS__Group__1__Impl : ( ( rule__TemplateBindingCS__Group_1__0 )* ) ;
    public final void rule__TemplateBindingCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18155:1: ( ( ( rule__TemplateBindingCS__Group_1__0 )* ) )
            // InternalImperativeOCL.g:18156:1: ( ( rule__TemplateBindingCS__Group_1__0 )* )
            {
            // InternalImperativeOCL.g:18156:1: ( ( rule__TemplateBindingCS__Group_1__0 )* )
            // InternalImperativeOCL.g:18157:1: ( rule__TemplateBindingCS__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:18158:1: ( rule__TemplateBindingCS__Group_1__0 )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==67) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalImperativeOCL.g:18158:2: rule__TemplateBindingCS__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__TemplateBindingCS__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__1__Impl"


    // $ANTLR start "rule__TemplateBindingCS__Group__2"
    // InternalImperativeOCL.g:18168:1: rule__TemplateBindingCS__Group__2 : rule__TemplateBindingCS__Group__2__Impl ;
    public final void rule__TemplateBindingCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18172:1: ( rule__TemplateBindingCS__Group__2__Impl )
            // InternalImperativeOCL.g:18173:2: rule__TemplateBindingCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__2"


    // $ANTLR start "rule__TemplateBindingCS__Group__2__Impl"
    // InternalImperativeOCL.g:18179:1: rule__TemplateBindingCS__Group__2__Impl : ( ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )? ) ;
    public final void rule__TemplateBindingCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18183:1: ( ( ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )? ) )
            // InternalImperativeOCL.g:18184:1: ( ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )? )
            {
            // InternalImperativeOCL.g:18184:1: ( ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )? )
            // InternalImperativeOCL.g:18185:1: ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityAssignment_2());
            }
            // InternalImperativeOCL.g:18186:1: ( rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==102) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalImperativeOCL.g:18186:2: rule__TemplateBindingCS__OwnedMultiplicityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateBindingCS__OwnedMultiplicityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityAssignment_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group__2__Impl"


    // $ANTLR start "rule__TemplateBindingCS__Group_1__0"
    // InternalImperativeOCL.g:18202:1: rule__TemplateBindingCS__Group_1__0 : rule__TemplateBindingCS__Group_1__0__Impl rule__TemplateBindingCS__Group_1__1 ;
    public final void rule__TemplateBindingCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18206:1: ( rule__TemplateBindingCS__Group_1__0__Impl rule__TemplateBindingCS__Group_1__1 )
            // InternalImperativeOCL.g:18207:2: rule__TemplateBindingCS__Group_1__0__Impl rule__TemplateBindingCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__TemplateBindingCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group_1__0"


    // $ANTLR start "rule__TemplateBindingCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:18214:1: rule__TemplateBindingCS__Group_1__0__Impl : ( ',' ) ;
    public final void rule__TemplateBindingCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18218:1: ( ( ',' ) )
            // InternalImperativeOCL.g:18219:1: ( ',' )
            {
            // InternalImperativeOCL.g:18219:1: ( ',' )
            // InternalImperativeOCL.g:18220:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group_1__0__Impl"


    // $ANTLR start "rule__TemplateBindingCS__Group_1__1"
    // InternalImperativeOCL.g:18233:1: rule__TemplateBindingCS__Group_1__1 : rule__TemplateBindingCS__Group_1__1__Impl ;
    public final void rule__TemplateBindingCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18237:1: ( rule__TemplateBindingCS__Group_1__1__Impl )
            // InternalImperativeOCL.g:18238:2: rule__TemplateBindingCS__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group_1__1"


    // $ANTLR start "rule__TemplateBindingCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:18244:1: rule__TemplateBindingCS__Group_1__1__Impl : ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 ) ) ;
    public final void rule__TemplateBindingCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18248:1: ( ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:18249:1: ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:18249:1: ( ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 ) )
            // InternalImperativeOCL.g:18250:1: ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_1_1());
            }
            // InternalImperativeOCL.g:18251:1: ( rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 )
            // InternalImperativeOCL.g:18251:2: rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__Group_1__1__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group__0"
    // InternalImperativeOCL.g:18267:1: rule__TypeParameterCS__Group__0 : rule__TypeParameterCS__Group__0__Impl rule__TypeParameterCS__Group__1 ;
    public final void rule__TypeParameterCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18271:1: ( rule__TypeParameterCS__Group__0__Impl rule__TypeParameterCS__Group__1 )
            // InternalImperativeOCL.g:18272:2: rule__TypeParameterCS__Group__0__Impl rule__TypeParameterCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_87);
            rule__TypeParameterCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group__0"


    // $ANTLR start "rule__TypeParameterCS__Group__0__Impl"
    // InternalImperativeOCL.g:18279:1: rule__TypeParameterCS__Group__0__Impl : ( ( rule__TypeParameterCS__NameAssignment_0 ) ) ;
    public final void rule__TypeParameterCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18283:1: ( ( ( rule__TypeParameterCS__NameAssignment_0 ) ) )
            // InternalImperativeOCL.g:18284:1: ( ( rule__TypeParameterCS__NameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:18284:1: ( ( rule__TypeParameterCS__NameAssignment_0 ) )
            // InternalImperativeOCL.g:18285:1: ( rule__TypeParameterCS__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getNameAssignment_0());
            }
            // InternalImperativeOCL.g:18286:1: ( rule__TypeParameterCS__NameAssignment_0 )
            // InternalImperativeOCL.g:18286:2: rule__TypeParameterCS__NameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group__0__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group__1"
    // InternalImperativeOCL.g:18296:1: rule__TypeParameterCS__Group__1 : rule__TypeParameterCS__Group__1__Impl ;
    public final void rule__TypeParameterCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18300:1: ( rule__TypeParameterCS__Group__1__Impl )
            // InternalImperativeOCL.g:18301:2: rule__TypeParameterCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group__1"


    // $ANTLR start "rule__TypeParameterCS__Group__1__Impl"
    // InternalImperativeOCL.g:18307:1: rule__TypeParameterCS__Group__1__Impl : ( ( rule__TypeParameterCS__Group_1__0 )? ) ;
    public final void rule__TypeParameterCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18311:1: ( ( ( rule__TypeParameterCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:18312:1: ( ( rule__TypeParameterCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:18312:1: ( ( rule__TypeParameterCS__Group_1__0 )? )
            // InternalImperativeOCL.g:18313:1: ( rule__TypeParameterCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:18314:1: ( rule__TypeParameterCS__Group_1__0 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==111) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalImperativeOCL.g:18314:2: rule__TypeParameterCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeParameterCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group__1__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group_1__0"
    // InternalImperativeOCL.g:18328:1: rule__TypeParameterCS__Group_1__0 : rule__TypeParameterCS__Group_1__0__Impl rule__TypeParameterCS__Group_1__1 ;
    public final void rule__TypeParameterCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18332:1: ( rule__TypeParameterCS__Group_1__0__Impl rule__TypeParameterCS__Group_1__1 )
            // InternalImperativeOCL.g:18333:2: rule__TypeParameterCS__Group_1__0__Impl rule__TypeParameterCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TypeParameterCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__0"


    // $ANTLR start "rule__TypeParameterCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:18340:1: rule__TypeParameterCS__Group_1__0__Impl : ( 'extends' ) ;
    public final void rule__TypeParameterCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18344:1: ( ( 'extends' ) )
            // InternalImperativeOCL.g:18345:1: ( 'extends' )
            {
            // InternalImperativeOCL.g:18345:1: ( 'extends' )
            // InternalImperativeOCL.g:18346:1: 'extends'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());
            }
            match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__0__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group_1__1"
    // InternalImperativeOCL.g:18359:1: rule__TypeParameterCS__Group_1__1 : rule__TypeParameterCS__Group_1__1__Impl rule__TypeParameterCS__Group_1__2 ;
    public final void rule__TypeParameterCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18363:1: ( rule__TypeParameterCS__Group_1__1__Impl rule__TypeParameterCS__Group_1__2 )
            // InternalImperativeOCL.g:18364:2: rule__TypeParameterCS__Group_1__1__Impl rule__TypeParameterCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_88);
            rule__TypeParameterCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__1"


    // $ANTLR start "rule__TypeParameterCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:18371:1: rule__TypeParameterCS__Group_1__1__Impl : ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 ) ) ;
    public final void rule__TypeParameterCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18375:1: ( ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:18376:1: ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:18376:1: ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 ) )
            // InternalImperativeOCL.g:18377:1: ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_1());
            }
            // InternalImperativeOCL.g:18378:1: ( rule__TypeParameterCS__OwnedExtendsAssignment_1_1 )
            // InternalImperativeOCL.g:18378:2: rule__TypeParameterCS__OwnedExtendsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__OwnedExtendsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__1__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group_1__2"
    // InternalImperativeOCL.g:18388:1: rule__TypeParameterCS__Group_1__2 : rule__TypeParameterCS__Group_1__2__Impl ;
    public final void rule__TypeParameterCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18392:1: ( rule__TypeParameterCS__Group_1__2__Impl )
            // InternalImperativeOCL.g:18393:2: rule__TypeParameterCS__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__2"


    // $ANTLR start "rule__TypeParameterCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:18399:1: rule__TypeParameterCS__Group_1__2__Impl : ( ( rule__TypeParameterCS__Group_1_2__0 )* ) ;
    public final void rule__TypeParameterCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18403:1: ( ( ( rule__TypeParameterCS__Group_1_2__0 )* ) )
            // InternalImperativeOCL.g:18404:1: ( ( rule__TypeParameterCS__Group_1_2__0 )* )
            {
            // InternalImperativeOCL.g:18404:1: ( ( rule__TypeParameterCS__Group_1_2__0 )* )
            // InternalImperativeOCL.g:18405:1: ( rule__TypeParameterCS__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getGroup_1_2());
            }
            // InternalImperativeOCL.g:18406:1: ( rule__TypeParameterCS__Group_1_2__0 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==112) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalImperativeOCL.g:18406:2: rule__TypeParameterCS__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_89);
            	    rule__TypeParameterCS__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getGroup_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1__2__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group_1_2__0"
    // InternalImperativeOCL.g:18422:1: rule__TypeParameterCS__Group_1_2__0 : rule__TypeParameterCS__Group_1_2__0__Impl rule__TypeParameterCS__Group_1_2__1 ;
    public final void rule__TypeParameterCS__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18426:1: ( rule__TypeParameterCS__Group_1_2__0__Impl rule__TypeParameterCS__Group_1_2__1 )
            // InternalImperativeOCL.g:18427:2: rule__TypeParameterCS__Group_1_2__0__Impl rule__TypeParameterCS__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TypeParameterCS__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1_2__0"


    // $ANTLR start "rule__TypeParameterCS__Group_1_2__0__Impl"
    // InternalImperativeOCL.g:18434:1: rule__TypeParameterCS__Group_1_2__0__Impl : ( '&&' ) ;
    public final void rule__TypeParameterCS__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18438:1: ( ( '&&' ) )
            // InternalImperativeOCL.g:18439:1: ( '&&' )
            {
            // InternalImperativeOCL.g:18439:1: ( '&&' )
            // InternalImperativeOCL.g:18440:1: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());
            }
            match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1_2__0__Impl"


    // $ANTLR start "rule__TypeParameterCS__Group_1_2__1"
    // InternalImperativeOCL.g:18453:1: rule__TypeParameterCS__Group_1_2__1 : rule__TypeParameterCS__Group_1_2__1__Impl ;
    public final void rule__TypeParameterCS__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18457:1: ( rule__TypeParameterCS__Group_1_2__1__Impl )
            // InternalImperativeOCL.g:18458:2: rule__TypeParameterCS__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1_2__1"


    // $ANTLR start "rule__TypeParameterCS__Group_1_2__1__Impl"
    // InternalImperativeOCL.g:18464:1: rule__TypeParameterCS__Group_1_2__1__Impl : ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 ) ) ;
    public final void rule__TypeParameterCS__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18468:1: ( ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 ) ) )
            // InternalImperativeOCL.g:18469:1: ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 ) )
            {
            // InternalImperativeOCL.g:18469:1: ( ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 ) )
            // InternalImperativeOCL.g:18470:1: ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_2_1());
            }
            // InternalImperativeOCL.g:18471:1: ( rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 )
            // InternalImperativeOCL.g:18471:2: rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__Group_1_2__1__Impl"


    // $ANTLR start "rule__TypedTypeRefCS__Group__0"
    // InternalImperativeOCL.g:18485:1: rule__TypedTypeRefCS__Group__0 : rule__TypedTypeRefCS__Group__0__Impl rule__TypedTypeRefCS__Group__1 ;
    public final void rule__TypedTypeRefCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18489:1: ( rule__TypedTypeRefCS__Group__0__Impl rule__TypedTypeRefCS__Group__1 )
            // InternalImperativeOCL.g:18490:2: rule__TypedTypeRefCS__Group__0__Impl rule__TypedTypeRefCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__TypedTypeRefCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group__0"


    // $ANTLR start "rule__TypedTypeRefCS__Group__0__Impl"
    // InternalImperativeOCL.g:18497:1: rule__TypedTypeRefCS__Group__0__Impl : ( ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 ) ) ;
    public final void rule__TypedTypeRefCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18501:1: ( ( ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 ) ) )
            // InternalImperativeOCL.g:18502:1: ( ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 ) )
            {
            // InternalImperativeOCL.g:18502:1: ( ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 ) )
            // InternalImperativeOCL.g:18503:1: ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNameAssignment_0());
            }
            // InternalImperativeOCL.g:18504:1: ( rule__TypedTypeRefCS__OwnedPathNameAssignment_0 )
            // InternalImperativeOCL.g:18504:2: rule__TypedTypeRefCS__OwnedPathNameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__OwnedPathNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNameAssignment_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group__0__Impl"


    // $ANTLR start "rule__TypedTypeRefCS__Group__1"
    // InternalImperativeOCL.g:18514:1: rule__TypedTypeRefCS__Group__1 : rule__TypedTypeRefCS__Group__1__Impl ;
    public final void rule__TypedTypeRefCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18518:1: ( rule__TypedTypeRefCS__Group__1__Impl )
            // InternalImperativeOCL.g:18519:2: rule__TypedTypeRefCS__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group__1"


    // $ANTLR start "rule__TypedTypeRefCS__Group__1__Impl"
    // InternalImperativeOCL.g:18525:1: rule__TypedTypeRefCS__Group__1__Impl : ( ( rule__TypedTypeRefCS__Group_1__0 )? ) ;
    public final void rule__TypedTypeRefCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18529:1: ( ( ( rule__TypedTypeRefCS__Group_1__0 )? ) )
            // InternalImperativeOCL.g:18530:1: ( ( rule__TypedTypeRefCS__Group_1__0 )? )
            {
            // InternalImperativeOCL.g:18530:1: ( ( rule__TypedTypeRefCS__Group_1__0 )? )
            // InternalImperativeOCL.g:18531:1: ( rule__TypedTypeRefCS__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getGroup_1());
            }
            // InternalImperativeOCL.g:18532:1: ( rule__TypedTypeRefCS__Group_1__0 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==64) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalImperativeOCL.g:18532:2: rule__TypedTypeRefCS__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTypeRefCS__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getGroup_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group__1__Impl"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__0"
    // InternalImperativeOCL.g:18546:1: rule__TypedTypeRefCS__Group_1__0 : rule__TypedTypeRefCS__Group_1__0__Impl rule__TypedTypeRefCS__Group_1__1 ;
    public final void rule__TypedTypeRefCS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18550:1: ( rule__TypedTypeRefCS__Group_1__0__Impl rule__TypedTypeRefCS__Group_1__1 )
            // InternalImperativeOCL.g:18551:2: rule__TypedTypeRefCS__Group_1__0__Impl rule__TypedTypeRefCS__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__TypedTypeRefCS__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__0"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__0__Impl"
    // InternalImperativeOCL.g:18558:1: rule__TypedTypeRefCS__Group_1__0__Impl : ( '(' ) ;
    public final void rule__TypedTypeRefCS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18562:1: ( ( '(' ) )
            // InternalImperativeOCL.g:18563:1: ( '(' )
            {
            // InternalImperativeOCL.g:18563:1: ( '(' )
            // InternalImperativeOCL.g:18564:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__1"
    // InternalImperativeOCL.g:18577:1: rule__TypedTypeRefCS__Group_1__1 : rule__TypedTypeRefCS__Group_1__1__Impl rule__TypedTypeRefCS__Group_1__2 ;
    public final void rule__TypedTypeRefCS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18581:1: ( rule__TypedTypeRefCS__Group_1__1__Impl rule__TypedTypeRefCS__Group_1__2 )
            // InternalImperativeOCL.g:18582:2: rule__TypedTypeRefCS__Group_1__1__Impl rule__TypedTypeRefCS__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__TypedTypeRefCS__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__1"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__1__Impl"
    // InternalImperativeOCL.g:18589:1: rule__TypedTypeRefCS__Group_1__1__Impl : ( ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 ) ) ;
    public final void rule__TypedTypeRefCS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18593:1: ( ( ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 ) ) )
            // InternalImperativeOCL.g:18594:1: ( ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 ) )
            {
            // InternalImperativeOCL.g:18594:1: ( ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 ) )
            // InternalImperativeOCL.g:18595:1: ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingAssignment_1_1());
            }
            // InternalImperativeOCL.g:18596:1: ( rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 )
            // InternalImperativeOCL.g:18596:2: rule__TypedTypeRefCS__OwnedBindingAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__OwnedBindingAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingAssignment_1_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__2"
    // InternalImperativeOCL.g:18606:1: rule__TypedTypeRefCS__Group_1__2 : rule__TypedTypeRefCS__Group_1__2__Impl ;
    public final void rule__TypedTypeRefCS__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18610:1: ( rule__TypedTypeRefCS__Group_1__2__Impl )
            // InternalImperativeOCL.g:18611:2: rule__TypedTypeRefCS__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTypeRefCS__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__2"


    // $ANTLR start "rule__TypedTypeRefCS__Group_1__2__Impl"
    // InternalImperativeOCL.g:18617:1: rule__TypedTypeRefCS__Group_1__2__Impl : ( ')' ) ;
    public final void rule__TypedTypeRefCS__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18621:1: ( ( ')' ) )
            // InternalImperativeOCL.g:18622:1: ( ')' )
            {
            // InternalImperativeOCL.g:18622:1: ( ')' )
            // InternalImperativeOCL.g:18623:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__Group_1__2__Impl"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__0"
    // InternalImperativeOCL.g:18642:1: rule__WildcardTypeRefCS__Group__0 : rule__WildcardTypeRefCS__Group__0__Impl rule__WildcardTypeRefCS__Group__1 ;
    public final void rule__WildcardTypeRefCS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18646:1: ( rule__WildcardTypeRefCS__Group__0__Impl rule__WildcardTypeRefCS__Group__1 )
            // InternalImperativeOCL.g:18647:2: rule__WildcardTypeRefCS__Group__0__Impl rule__WildcardTypeRefCS__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__WildcardTypeRefCS__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__0"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__0__Impl"
    // InternalImperativeOCL.g:18654:1: rule__WildcardTypeRefCS__Group__0__Impl : ( () ) ;
    public final void rule__WildcardTypeRefCS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18658:1: ( ( () ) )
            // InternalImperativeOCL.g:18659:1: ( () )
            {
            // InternalImperativeOCL.g:18659:1: ( () )
            // InternalImperativeOCL.g:18660:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0());
            }
            // InternalImperativeOCL.g:18661:1: ()
            // InternalImperativeOCL.g:18663:1:
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0());
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__0__Impl"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__1"
    // InternalImperativeOCL.g:18673:1: rule__WildcardTypeRefCS__Group__1 : rule__WildcardTypeRefCS__Group__1__Impl rule__WildcardTypeRefCS__Group__2 ;
    public final void rule__WildcardTypeRefCS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18677:1: ( rule__WildcardTypeRefCS__Group__1__Impl rule__WildcardTypeRefCS__Group__2 )
            // InternalImperativeOCL.g:18678:2: rule__WildcardTypeRefCS__Group__1__Impl rule__WildcardTypeRefCS__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_87);
            rule__WildcardTypeRefCS__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__1"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__1__Impl"
    // InternalImperativeOCL.g:18685:1: rule__WildcardTypeRefCS__Group__1__Impl : ( '?' ) ;
    public final void rule__WildcardTypeRefCS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18689:1: ( ( '?' ) )
            // InternalImperativeOCL.g:18690:1: ( '?' )
            {
            // InternalImperativeOCL.g:18690:1: ( '?' )
            // InternalImperativeOCL.g:18691:1: '?'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__1__Impl"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__2"
    // InternalImperativeOCL.g:18704:1: rule__WildcardTypeRefCS__Group__2 : rule__WildcardTypeRefCS__Group__2__Impl ;
    public final void rule__WildcardTypeRefCS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18708:1: ( rule__WildcardTypeRefCS__Group__2__Impl )
            // InternalImperativeOCL.g:18709:2: rule__WildcardTypeRefCS__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__2"


    // $ANTLR start "rule__WildcardTypeRefCS__Group__2__Impl"
    // InternalImperativeOCL.g:18715:1: rule__WildcardTypeRefCS__Group__2__Impl : ( ( rule__WildcardTypeRefCS__Group_2__0 )? ) ;
    public final void rule__WildcardTypeRefCS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18719:1: ( ( ( rule__WildcardTypeRefCS__Group_2__0 )? ) )
            // InternalImperativeOCL.g:18720:1: ( ( rule__WildcardTypeRefCS__Group_2__0 )? )
            {
            // InternalImperativeOCL.g:18720:1: ( ( rule__WildcardTypeRefCS__Group_2__0 )? )
            // InternalImperativeOCL.g:18721:1: ( rule__WildcardTypeRefCS__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2());
            }
            // InternalImperativeOCL.g:18722:1: ( rule__WildcardTypeRefCS__Group_2__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==111) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalImperativeOCL.g:18722:2: rule__WildcardTypeRefCS__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WildcardTypeRefCS__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group__2__Impl"


    // $ANTLR start "rule__WildcardTypeRefCS__Group_2__0"
    // InternalImperativeOCL.g:18738:1: rule__WildcardTypeRefCS__Group_2__0 : rule__WildcardTypeRefCS__Group_2__0__Impl rule__WildcardTypeRefCS__Group_2__1 ;
    public final void rule__WildcardTypeRefCS__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18742:1: ( rule__WildcardTypeRefCS__Group_2__0__Impl rule__WildcardTypeRefCS__Group_2__1 )
            // InternalImperativeOCL.g:18743:2: rule__WildcardTypeRefCS__Group_2__0__Impl rule__WildcardTypeRefCS__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WildcardTypeRefCS__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group_2__0"


    // $ANTLR start "rule__WildcardTypeRefCS__Group_2__0__Impl"
    // InternalImperativeOCL.g:18750:1: rule__WildcardTypeRefCS__Group_2__0__Impl : ( 'extends' ) ;
    public final void rule__WildcardTypeRefCS__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18754:1: ( ( 'extends' ) )
            // InternalImperativeOCL.g:18755:1: ( 'extends' )
            {
            // InternalImperativeOCL.g:18755:1: ( 'extends' )
            // InternalImperativeOCL.g:18756:1: 'extends'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());
            }
            match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group_2__0__Impl"


    // $ANTLR start "rule__WildcardTypeRefCS__Group_2__1"
    // InternalImperativeOCL.g:18769:1: rule__WildcardTypeRefCS__Group_2__1 : rule__WildcardTypeRefCS__Group_2__1__Impl ;
    public final void rule__WildcardTypeRefCS__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18773:1: ( rule__WildcardTypeRefCS__Group_2__1__Impl )
            // InternalImperativeOCL.g:18774:2: rule__WildcardTypeRefCS__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group_2__1"


    // $ANTLR start "rule__WildcardTypeRefCS__Group_2__1__Impl"
    // InternalImperativeOCL.g:18780:1: rule__WildcardTypeRefCS__Group_2__1__Impl : ( ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 ) ) ;
    public final void rule__WildcardTypeRefCS__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18784:1: ( ( ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 ) ) )
            // InternalImperativeOCL.g:18785:1: ( ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 ) )
            {
            // InternalImperativeOCL.g:18785:1: ( ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 ) )
            // InternalImperativeOCL.g:18786:1: ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsAssignment_2_1());
            }
            // InternalImperativeOCL.g:18787:1: ( rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 )
            // InternalImperativeOCL.g:18787:2: rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsAssignment_2_1());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__Group_2__1__Impl"


    // $ANTLR start "rule__ListTypeCS__OwnedTypeRefAssignment_2"
    // InternalImperativeOCL.g:18802:1: rule__ListTypeCS__OwnedTypeRefAssignment_2 : ( ruleTypeExpCS ) ;
    public final void rule__ListTypeCS__OwnedTypeRefAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18806:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:18807:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:18807:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:18808:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListTypeCSAccess().getOwnedTypeRefTypeExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListTypeCSAccess().getOwnedTypeRefTypeExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListTypeCS__OwnedTypeRefAssignment_2"


    // $ANTLR start "rule__DictTypeCS__OwnedKeyTypeRefAssignment_2"
    // InternalImperativeOCL.g:18817:1: rule__DictTypeCS__OwnedKeyTypeRefAssignment_2 : ( ruleTypeExpCS ) ;
    public final void rule__DictTypeCS__OwnedKeyTypeRefAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18821:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:18822:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:18822:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:18823:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getOwnedKeyTypeRefTypeExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getOwnedKeyTypeRefTypeExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__OwnedKeyTypeRefAssignment_2"


    // $ANTLR start "rule__DictTypeCS__OwnedValueTypeRefAssignment_4"
    // InternalImperativeOCL.g:18832:1: rule__DictTypeCS__OwnedValueTypeRefAssignment_4 : ( ruleTypeExpCS ) ;
    public final void rule__DictTypeCS__OwnedValueTypeRefAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18836:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:18837:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:18837:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:18838:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictTypeCSAccess().getOwnedValueTypeRefTypeExpCSParserRuleCall_4_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictTypeCSAccess().getOwnedValueTypeRefTypeExpCSParserRuleCall_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictTypeCS__OwnedValueTypeRefAssignment_4"


    // $ANTLR start "rule__AssertExpCS__SeverityAssignment_1"
    // InternalImperativeOCL.g:18847:1: rule__AssertExpCS__SeverityAssignment_1 : ( ruleSeverityKindCS ) ;
    public final void rule__AssertExpCS__SeverityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18851:1: ( ( ruleSeverityKindCS ) )
            // InternalImperativeOCL.g:18852:1: ( ruleSeverityKindCS )
            {
            // InternalImperativeOCL.g:18852:1: ( ruleSeverityKindCS )
            // InternalImperativeOCL.g:18853:1: ruleSeverityKindCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getSeveritySeverityKindCSEnumRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeverityKindCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getSeveritySeverityKindCSEnumRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__SeverityAssignment_1"


    // $ANTLR start "rule__AssertExpCS__OwnedAssertionAssignment_2"
    // InternalImperativeOCL.g:18862:1: rule__AssertExpCS__OwnedAssertionAssignment_2 : ( ruleExpCS ) ;
    public final void rule__AssertExpCS__OwnedAssertionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18866:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:18867:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:18867:1: ( ruleExpCS )
            // InternalImperativeOCL.g:18868:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getOwnedAssertionExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getOwnedAssertionExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__OwnedAssertionAssignment_2"


    // $ANTLR start "rule__AssertExpCS__OwnedLogAssignment_3_1"
    // InternalImperativeOCL.g:18877:1: rule__AssertExpCS__OwnedLogAssignment_3_1 : ( ruleLogExpCS ) ;
    public final void rule__AssertExpCS__OwnedLogAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18881:1: ( ( ruleLogExpCS ) )
            // InternalImperativeOCL.g:18882:1: ( ruleLogExpCS )
            {
            // InternalImperativeOCL.g:18882:1: ( ruleLogExpCS )
            // InternalImperativeOCL.g:18883:1: ruleLogExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssertExpCSAccess().getOwnedLogLogExpCSParserRuleCall_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssertExpCSAccess().getOwnedLogLogExpCSParserRuleCall_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssertExpCS__OwnedLogAssignment_3_1"


    // $ANTLR start "rule__AssignExpCS__OwnedLeftAssignment_0"
    // InternalImperativeOCL.g:18892:1: rule__AssignExpCS__OwnedLeftAssignment_0 : ( ruleNameExpCS ) ;
    public final void rule__AssignExpCS__OwnedLeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18896:1: ( ( ruleNameExpCS ) )
            // InternalImperativeOCL.g:18897:1: ( ruleNameExpCS )
            {
            // InternalImperativeOCL.g:18897:1: ( ruleNameExpCS )
            // InternalImperativeOCL.g:18898:1: ruleNameExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedLeftNameExpCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNameExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedLeftNameExpCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__OwnedLeftAssignment_0"


    // $ANTLR start "rule__AssignExpCS__AssignOpAssignment_1"
    // InternalImperativeOCL.g:18907:1: rule__AssignExpCS__AssignOpAssignment_1 : ( ruleAssignOpCS ) ;
    public final void rule__AssignExpCS__AssignOpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18911:1: ( ( ruleAssignOpCS ) )
            // InternalImperativeOCL.g:18912:1: ( ruleAssignOpCS )
            {
            // InternalImperativeOCL.g:18912:1: ( ruleAssignOpCS )
            // InternalImperativeOCL.g:18913:1: ruleAssignOpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getAssignOpAssignOpCSEnumRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignOpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getAssignOpAssignOpCSEnumRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__AssignOpAssignment_1"


    // $ANTLR start "rule__AssignExpCS__OwnedValueAssignment_2"
    // InternalImperativeOCL.g:18922:1: rule__AssignExpCS__OwnedValueAssignment_2 : ( ruleExpCS ) ;
    public final void rule__AssignExpCS__OwnedValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18926:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:18927:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:18927:1: ( ruleExpCS )
            // InternalImperativeOCL.g:18928:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__OwnedValueAssignment_2"


    // $ANTLR start "rule__AssignExpCS__OwnedDefaultAssignment_3_1"
    // InternalImperativeOCL.g:18937:1: rule__AssignExpCS__OwnedDefaultAssignment_3_1 : ( ruleExpCS ) ;
    public final void rule__AssignExpCS__OwnedDefaultAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18941:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:18942:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:18942:1: ( ruleExpCS )
            // InternalImperativeOCL.g:18943:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignExpCSAccess().getOwnedDefaultExpCSParserRuleCall_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignExpCSAccess().getOwnedDefaultExpCSParserRuleCall_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignExpCS__OwnedDefaultAssignment_3_1"


    // $ANTLR start "rule__CatchExpCS__VarNameAssignment_2_0"
    // InternalImperativeOCL.g:18952:1: rule__CatchExpCS__VarNameAssignment_2_0 : ( ruleUnrestrictedName ) ;
    public final void rule__CatchExpCS__VarNameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18956:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:18957:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:18957:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:18958:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getVarNameUnrestrictedNameParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getVarNameUnrestrictedNameParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__VarNameAssignment_2_0"


    // $ANTLR start "rule__CatchExpCS__OwnedExceptionRefsAssignment_3"
    // InternalImperativeOCL.g:18967:1: rule__CatchExpCS__OwnedExceptionRefsAssignment_3 : ( ruleTypeExpCS ) ;
    public final void rule__CatchExpCS__OwnedExceptionRefsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18971:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:18972:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:18972:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:18973:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsTypeExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsTypeExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__OwnedExceptionRefsAssignment_3"


    // $ANTLR start "rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1"
    // InternalImperativeOCL.g:18982:1: rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1 : ( ruleTypeExpCS ) ;
    public final void rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:18986:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:18987:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:18987:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:18988:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsTypeExpCSParserRuleCall_4_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExceptionRefsTypeExpCSParserRuleCall_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__OwnedExceptionRefsAssignment_4_1"


    // $ANTLR start "rule__CatchExpCS__OwnedExpsAssignment_7"
    // InternalImperativeOCL.g:18997:1: rule__CatchExpCS__OwnedExpsAssignment_7 : ( ruleExpCS ) ;
    public final void rule__CatchExpCS__OwnedExpsAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19001:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19002:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19002:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19003:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCatchExpCSAccess().getOwnedExpsExpCSParserRuleCall_7_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCatchExpCSAccess().getOwnedExpsExpCSParserRuleCall_7_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CatchExpCS__OwnedExpsAssignment_7"


    // $ANTLR start "rule__ComputeExpCS__OwnedResultVarAssignment_2"
    // InternalImperativeOCL.g:19012:1: rule__ComputeExpCS__OwnedResultVarAssignment_2 : ( ruleVarDeclarationCS ) ;
    public final void rule__ComputeExpCS__OwnedResultVarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19016:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19017:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19017:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19018:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getOwnedResultVarVarDeclarationCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getOwnedResultVarVarDeclarationCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__OwnedResultVarAssignment_2"


    // $ANTLR start "rule__ComputeExpCS__OwnedExpsAssignment_5"
    // InternalImperativeOCL.g:19027:1: rule__ComputeExpCS__OwnedExpsAssignment_5 : ( ruleExpressionStatementCS ) ;
    public final void rule__ComputeExpCS__OwnedExpsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19031:1: ( ( ruleExpressionStatementCS ) )
            // InternalImperativeOCL.g:19032:1: ( ruleExpressionStatementCS )
            {
            // InternalImperativeOCL.g:19032:1: ( ruleExpressionStatementCS )
            // InternalImperativeOCL.g:19033:1: ruleExpressionStatementCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComputeExpCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_5_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionStatementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComputeExpCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_5_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComputeExpCS__OwnedExpsAssignment_5"


    // $ANTLR start "rule__DictLiteralExpCS__OwnedPartsAssignment_3_0"
    // InternalImperativeOCL.g:19042:1: rule__DictLiteralExpCS__OwnedPartsAssignment_3_0 : ( ruleDictLiteralPartCS ) ;
    public final void rule__DictLiteralExpCS__OwnedPartsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19046:1: ( ( ruleDictLiteralPartCS ) )
            // InternalImperativeOCL.g:19047:1: ( ruleDictLiteralPartCS )
            {
            // InternalImperativeOCL.g:19047:1: ( ruleDictLiteralPartCS )
            // InternalImperativeOCL.g:19048:1: ruleDictLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsDictLiteralPartCSParserRuleCall_3_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDictLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsDictLiteralPartCSParserRuleCall_3_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__OwnedPartsAssignment_3_0"


    // $ANTLR start "rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1"
    // InternalImperativeOCL.g:19057:1: rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1 : ( ruleDictLiteralPartCS ) ;
    public final void rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19061:1: ( ( ruleDictLiteralPartCS ) )
            // InternalImperativeOCL.g:19062:1: ( ruleDictLiteralPartCS )
            {
            // InternalImperativeOCL.g:19062:1: ( ruleDictLiteralPartCS )
            // InternalImperativeOCL.g:19063:1: ruleDictLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsDictLiteralPartCSParserRuleCall_3_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDictLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsDictLiteralPartCSParserRuleCall_3_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1"


    // $ANTLR start "rule__DictLiteralPartCS__OwnedKeyAssignment_0"
    // InternalImperativeOCL.g:19072:1: rule__DictLiteralPartCS__OwnedKeyAssignment_0 : ( rulePrimitiveLiteralExpCS ) ;
    public final void rule__DictLiteralPartCS__OwnedKeyAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19076:1: ( ( rulePrimitiveLiteralExpCS ) )
            // InternalImperativeOCL.g:19077:1: ( rulePrimitiveLiteralExpCS )
            {
            // InternalImperativeOCL.g:19077:1: ( rulePrimitiveLiteralExpCS )
            // InternalImperativeOCL.g:19078:1: rulePrimitiveLiteralExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getOwnedKeyPrimitiveLiteralExpCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getOwnedKeyPrimitiveLiteralExpCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__OwnedKeyAssignment_0"


    // $ANTLR start "rule__DictLiteralPartCS__OwnedValueAssignment_2"
    // InternalImperativeOCL.g:19087:1: rule__DictLiteralPartCS__OwnedValueAssignment_2 : ( ruleExpCS ) ;
    public final void rule__DictLiteralPartCS__OwnedValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19091:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19092:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19092:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19093:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictLiteralPartCS__OwnedValueAssignment_2"


    // $ANTLR start "rule__ExpressionBlockCS__OwnedExpsAssignment_3"
    // InternalImperativeOCL.g:19102:1: rule__ExpressionBlockCS__OwnedExpsAssignment_3 : ( ruleExpressionStatementCS ) ;
    public final void rule__ExpressionBlockCS__OwnedExpsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19106:1: ( ( ruleExpressionStatementCS ) )
            // InternalImperativeOCL.g:19107:1: ( ruleExpressionStatementCS )
            {
            // InternalImperativeOCL.g:19107:1: ( ruleExpressionStatementCS )
            // InternalImperativeOCL.g:19108:1: ruleExpressionStatementCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionBlockCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionStatementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionBlockCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionBlockCS__OwnedExpsAssignment_3"


    // $ANTLR start "rule__ForExpCS__IsOneAssignment_0_1"
    // InternalImperativeOCL.g:19118:1: rule__ForExpCS__IsOneAssignment_0_1 : ( ( 'forOne' ) ) ;
    public final void rule__ForExpCS__IsOneAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19122:1: ( ( ( 'forOne' ) ) )
            // InternalImperativeOCL.g:19123:1: ( ( 'forOne' ) )
            {
            // InternalImperativeOCL.g:19123:1: ( ( 'forOne' ) )
            // InternalImperativeOCL.g:19124:1: ( 'forOne' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getIsOneForOneKeyword_0_1_0());
            }
            // InternalImperativeOCL.g:19125:1: ( 'forOne' )
            // InternalImperativeOCL.g:19126:1: 'forOne'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getIsOneForOneKeyword_0_1_0());
            }
            match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getIsOneForOneKeyword_0_1_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getIsOneForOneKeyword_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__IsOneAssignment_0_1"


    // $ANTLR start "rule__ForExpCS__OwnedTargetAssignment_2_0"
    // InternalImperativeOCL.g:19141:1: rule__ForExpCS__OwnedTargetAssignment_2_0 : ( ruleVarDeclarationCS ) ;
    public final void rule__ForExpCS__OwnedTargetAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19145:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19146:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19146:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19147:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedTargetVarDeclarationCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedTargetVarDeclarationCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__OwnedTargetAssignment_2_0"


    // $ANTLR start "rule__ForExpCS__OwnedIteratorAssignment_3"
    // InternalImperativeOCL.g:19156:1: rule__ForExpCS__OwnedIteratorAssignment_3 : ( ruleVarDeclarationNoInitCS ) ;
    public final void rule__ForExpCS__OwnedIteratorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19160:1: ( ( ruleVarDeclarationNoInitCS ) )
            // InternalImperativeOCL.g:19161:1: ( ruleVarDeclarationNoInitCS )
            {
            // InternalImperativeOCL.g:19161:1: ( ruleVarDeclarationNoInitCS )
            // InternalImperativeOCL.g:19162:1: ruleVarDeclarationNoInitCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__OwnedIteratorAssignment_3"


    // $ANTLR start "rule__ForExpCS__OwnedConditionAssignment_4_1"
    // InternalImperativeOCL.g:19171:1: rule__ForExpCS__OwnedConditionAssignment_4_1 : ( ruleExpCS ) ;
    public final void rule__ForExpCS__OwnedConditionAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19175:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19176:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19176:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19177:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedConditionExpCSParserRuleCall_4_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedConditionExpCSParserRuleCall_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__OwnedConditionAssignment_4_1"


    // $ANTLR start "rule__ForExpCS__OwnedBodyAssignment_6"
    // InternalImperativeOCL.g:19186:1: rule__ForExpCS__OwnedBodyAssignment_6 : ( ruleExpCS ) ;
    public final void rule__ForExpCS__OwnedBodyAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19190:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19191:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19191:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19192:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForExpCSAccess().getOwnedBodyExpCSParserRuleCall_6_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForExpCSAccess().getOwnedBodyExpCSParserRuleCall_6_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForExpCS__OwnedBodyAssignment_6"


    // $ANTLR start "rule__ImperativeIterateExpCS__NameAssignment_0_0"
    // InternalImperativeOCL.g:19201:1: rule__ImperativeIterateExpCS__NameAssignment_0_0 : ( ( 'xcollect' ) ) ;
    public final void rule__ImperativeIterateExpCS__NameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19205:1: ( ( ( 'xcollect' ) ) )
            // InternalImperativeOCL.g:19206:1: ( ( 'xcollect' ) )
            {
            // InternalImperativeOCL.g:19206:1: ( ( 'xcollect' ) )
            // InternalImperativeOCL.g:19207:1: ( 'xcollect' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectKeyword_0_0_0());
            }
            // InternalImperativeOCL.g:19208:1: ( 'xcollect' )
            // InternalImperativeOCL.g:19209:1: 'xcollect'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectKeyword_0_0_0());
            }
            match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectKeyword_0_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameXcollectKeyword_0_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__NameAssignment_0_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0"
    // InternalImperativeOCL.g:19224:1: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0 : ( ruleVarDeclarationNoInitCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19228:1: ( ( ruleVarDeclarationNoInitCS ) )
            // InternalImperativeOCL.g:19229:1: ( ruleVarDeclarationNoInitCS )
            {
            // InternalImperativeOCL.g:19229:1: ( ruleVarDeclarationNoInitCS )
            // InternalImperativeOCL.g:19230:1: ruleVarDeclarationNoInitCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_0_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_0_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_0_2_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3"
    // InternalImperativeOCL.g:19239:1: rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3 : ( ruleExpCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19243:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19244:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19244:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19245:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyExpCSParserRuleCall_0_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyExpCSParserRuleCall_0_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedBodyAssignment_0_3"


    // $ANTLR start "rule__ImperativeIterateExpCS__NameAssignment_1_0"
    // InternalImperativeOCL.g:19254:1: rule__ImperativeIterateExpCS__NameAssignment_1_0 : ( ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__NameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19258:1: ( ( ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 ) ) )
            // InternalImperativeOCL.g:19259:1: ( ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 ) )
            {
            // InternalImperativeOCL.g:19259:1: ( ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 ) )
            // InternalImperativeOCL.g:19260:1: ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameAlternatives_1_0_0());
            }
            // InternalImperativeOCL.g:19261:1: ( rule__ImperativeIterateExpCS__NameAlternatives_1_0_0 )
            // InternalImperativeOCL.g:19261:2: rule__ImperativeIterateExpCS__NameAlternatives_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__NameAlternatives_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameAlternatives_1_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__NameAssignment_1_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0"
    // InternalImperativeOCL.g:19270:1: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0 : ( ruleVarDeclarationNoInitCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19274:1: ( ( ruleVarDeclarationNoInitCS ) )
            // InternalImperativeOCL.g:19275:1: ( ruleVarDeclarationNoInitCS )
            {
            // InternalImperativeOCL.g:19275:1: ( ruleVarDeclarationNoInitCS )
            // InternalImperativeOCL.g:19276:1: ruleVarDeclarationNoInitCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_1_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_1_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_1_2_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3"
    // InternalImperativeOCL.g:19285:1: rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3 : ( ruleExpCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19289:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19290:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19290:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19291:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedConditionAssignment_1_3"


    // $ANTLR start "rule__ImperativeIterateExpCS__NameAssignment_2_0"
    // InternalImperativeOCL.g:19300:1: rule__ImperativeIterateExpCS__NameAssignment_2_0 : ( ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 ) ) ;
    public final void rule__ImperativeIterateExpCS__NameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19304:1: ( ( ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 ) ) )
            // InternalImperativeOCL.g:19305:1: ( ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 ) )
            {
            // InternalImperativeOCL.g:19305:1: ( ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 ) )
            // InternalImperativeOCL.g:19306:1: ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getNameAlternatives_2_0_0());
            }
            // InternalImperativeOCL.g:19307:1: ( rule__ImperativeIterateExpCS__NameAlternatives_2_0_0 )
            // InternalImperativeOCL.g:19307:2: rule__ImperativeIterateExpCS__NameAlternatives_2_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ImperativeIterateExpCS__NameAlternatives_2_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getNameAlternatives_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__NameAssignment_2_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0"
    // InternalImperativeOCL.g:19316:1: rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0 : ( ruleVarDeclarationNoInitCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19320:1: ( ( ruleVarDeclarationNoInitCS ) )
            // InternalImperativeOCL.g:19321:1: ( ruleVarDeclarationNoInitCS )
            {
            // InternalImperativeOCL.g:19321:1: ( ruleVarDeclarationNoInitCS )
            // InternalImperativeOCL.g:19322:1: ruleVarDeclarationNoInitCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_2_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_2_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedIteratorAssignment_2_2_0"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3"
    // InternalImperativeOCL.g:19331:1: rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3 : ( ruleVarDeclarationCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19335:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19336:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19336:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19337:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedTargetVarDeclarationCSParserRuleCall_2_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedTargetVarDeclarationCSParserRuleCall_2_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedTargetAssignment_2_3"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5"
    // InternalImperativeOCL.g:19346:1: rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5 : ( ruleExpCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19350:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19351:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19351:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19352:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyExpCSParserRuleCall_2_5_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedBodyExpCSParserRuleCall_2_5_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedBodyAssignment_2_5"


    // $ANTLR start "rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7"
    // InternalImperativeOCL.g:19361:1: rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7 : ( ruleExpCS ) ;
    public final void rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19365:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19366:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19366:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19367:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionExpCSParserRuleCall_2_7_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImperativeIterateExpCSAccess().getOwnedConditionExpCSParserRuleCall_2_7_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImperativeIterateExpCS__OwnedConditionAssignment_2_7"


    // $ANTLR start "rule__InstantiationExpCS__OwnedClassRefAssignment_1"
    // InternalImperativeOCL.g:19376:1: rule__InstantiationExpCS__OwnedClassRefAssignment_1 : ( ruleTypeExpCS ) ;
    public final void rule__InstantiationExpCS__OwnedClassRefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19380:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:19381:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:19381:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:19382:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedClassRefTypeExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedClassRefTypeExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__OwnedClassRefAssignment_1"


    // $ANTLR start "rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1"
    // InternalImperativeOCL.g:19391:1: rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1 : ( ruleTypeNameExpCS ) ;
    public final void rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19395:1: ( ( ruleTypeNameExpCS ) )
            // InternalImperativeOCL.g:19396:1: ( ruleTypeNameExpCS )
            {
            // InternalImperativeOCL.g:19396:1: ( ruleTypeNameExpCS )
            // InternalImperativeOCL.g:19397:1: ruleTypeNameExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedExtentRefTypeNameExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedExtentRefTypeNameExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__OwnedExtentRefAssignment_2_1"


    // $ANTLR start "rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0"
    // InternalImperativeOCL.g:19406:1: rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0 : ( ruleExpCS ) ;
    public final void rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19410:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19411:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19411:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19412:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__OwnedArgumentsAssignment_4_0"


    // $ANTLR start "rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1"
    // InternalImperativeOCL.g:19421:1: rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1 : ( ruleExpCS ) ;
    public final void rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19425:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19426:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19426:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19427:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstantiationExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InstantiationExpCS__OwnedArgumentsAssignment_4_1_1"


    // $ANTLR start "rule__ListLiteralExpCS__OwnedPartsAssignment_3_0"
    // InternalImperativeOCL.g:19436:1: rule__ListLiteralExpCS__OwnedPartsAssignment_3_0 : ( ruleCollectionLiteralPartCS ) ;
    public final void rule__ListLiteralExpCS__OwnedPartsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19440:1: ( ( ruleCollectionLiteralPartCS ) )
            // InternalImperativeOCL.g:19441:1: ( ruleCollectionLiteralPartCS )
            {
            // InternalImperativeOCL.g:19441:1: ( ruleCollectionLiteralPartCS )
            // InternalImperativeOCL.g:19442:1: ruleCollectionLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_3_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_3_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__OwnedPartsAssignment_3_0"


    // $ANTLR start "rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1"
    // InternalImperativeOCL.g:19451:1: rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1 : ( ruleCollectionLiteralPartCS ) ;
    public final void rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19455:1: ( ( ruleCollectionLiteralPartCS ) )
            // InternalImperativeOCL.g:19456:1: ( ruleCollectionLiteralPartCS )
            {
            // InternalImperativeOCL.g:19456:1: ( ruleCollectionLiteralPartCS )
            // InternalImperativeOCL.g:19457:1: ruleCollectionLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_3_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_3_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1"


    // $ANTLR start "rule__LogExpCS__OwnedMessageAssignment_2"
    // InternalImperativeOCL.g:19466:1: rule__LogExpCS__OwnedMessageAssignment_2 : ( ruleStringLiteralExpCS ) ;
    public final void rule__LogExpCS__OwnedMessageAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19470:1: ( ( ruleStringLiteralExpCS ) )
            // InternalImperativeOCL.g:19471:1: ( ruleStringLiteralExpCS )
            {
            // InternalImperativeOCL.g:19471:1: ( ruleStringLiteralExpCS )
            // InternalImperativeOCL.g:19472:1: ruleStringLiteralExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedMessageStringLiteralExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedMessageStringLiteralExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__OwnedMessageAssignment_2"


    // $ANTLR start "rule__LogExpCS__OwnedElementAssignment_3_1"
    // InternalImperativeOCL.g:19481:1: rule__LogExpCS__OwnedElementAssignment_3_1 : ( ruleExpCS ) ;
    public final void rule__LogExpCS__OwnedElementAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19485:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19486:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19486:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19487:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedElementExpCSParserRuleCall_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedElementExpCSParserRuleCall_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__OwnedElementAssignment_3_1"


    // $ANTLR start "rule__LogExpCS__SeverityAssignment_4_1"
    // InternalImperativeOCL.g:19496:1: rule__LogExpCS__SeverityAssignment_4_1 : ( ruleSeverityKindCS ) ;
    public final void rule__LogExpCS__SeverityAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19500:1: ( ( ruleSeverityKindCS ) )
            // InternalImperativeOCL.g:19501:1: ( ruleSeverityKindCS )
            {
            // InternalImperativeOCL.g:19501:1: ( ruleSeverityKindCS )
            // InternalImperativeOCL.g:19502:1: ruleSeverityKindCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getSeveritySeverityKindCSEnumRuleCall_4_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSeverityKindCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getSeveritySeverityKindCSEnumRuleCall_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__SeverityAssignment_4_1"


    // $ANTLR start "rule__LogExpCS__OwnedConditionAssignment_6_1"
    // InternalImperativeOCL.g:19511:1: rule__LogExpCS__OwnedConditionAssignment_6_1 : ( ruleExpCS ) ;
    public final void rule__LogExpCS__OwnedConditionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19515:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19516:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19516:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19517:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogExpCSAccess().getOwnedConditionExpCSParserRuleCall_6_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogExpCSAccess().getOwnedConditionExpCSParserRuleCall_6_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogExpCS__OwnedConditionAssignment_6_1"


    // $ANTLR start "rule__RaiseExpCS__OwnedExceptionRefAssignment_1"
    // InternalImperativeOCL.g:19526:1: rule__RaiseExpCS__OwnedExceptionRefAssignment_1 : ( ruleTypeExpCS ) ;
    public final void rule__RaiseExpCS__OwnedExceptionRefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19530:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:19531:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:19531:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:19532:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedExceptionRefTypeExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedExceptionRefTypeExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__OwnedExceptionRefAssignment_1"


    // $ANTLR start "rule__RaiseExpCS__OwnedArgumentsAssignment_3"
    // InternalImperativeOCL.g:19541:1: rule__RaiseExpCS__OwnedArgumentsAssignment_3 : ( ruleExpCS ) ;
    public final void rule__RaiseExpCS__OwnedArgumentsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19545:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19546:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19546:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19547:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__OwnedArgumentsAssignment_3"


    // $ANTLR start "rule__RaiseExpCS__OwnedArgumentsAssignment_4_1"
    // InternalImperativeOCL.g:19556:1: rule__RaiseExpCS__OwnedArgumentsAssignment_4_1 : ( ruleExpCS ) ;
    public final void rule__RaiseExpCS__OwnedArgumentsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19560:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19561:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19561:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19562:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRaiseExpCSAccess().getOwnedArgumentsExpCSParserRuleCall_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RaiseExpCS__OwnedArgumentsAssignment_4_1"


    // $ANTLR start "rule__ReturnExpCS__OwnedValueAssignment_2"
    // InternalImperativeOCL.g:19571:1: rule__ReturnExpCS__OwnedValueAssignment_2 : ( ruleExpCS ) ;
    public final void rule__ReturnExpCS__OwnedValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19575:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19576:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19576:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19577:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnExpCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnExpCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnExpCS__OwnedValueAssignment_2"


    // $ANTLR start "rule__SwitchExpCS__IfSyntaxAssignment_0_0"
    // InternalImperativeOCL.g:19586:1: rule__SwitchExpCS__IfSyntaxAssignment_0_0 : ( ( 'if' ) ) ;
    public final void rule__SwitchExpCS__IfSyntaxAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19590:1: ( ( ( 'if' ) ) )
            // InternalImperativeOCL.g:19591:1: ( ( 'if' ) )
            {
            // InternalImperativeOCL.g:19591:1: ( ( 'if' ) )
            // InternalImperativeOCL.g:19592:1: ( 'if' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getIfSyntaxIfKeyword_0_0_0());
            }
            // InternalImperativeOCL.g:19593:1: ( 'if' )
            // InternalImperativeOCL.g:19594:1: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getIfSyntaxIfKeyword_0_0_0());
            }
            match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getIfSyntaxIfKeyword_0_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getIfSyntaxIfKeyword_0_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__IfSyntaxAssignment_0_0"


    // $ANTLR start "rule__SwitchExpCS__OwnedAltPartsAssignment_0_1"
    // InternalImperativeOCL.g:19609:1: rule__SwitchExpCS__OwnedAltPartsAssignment_0_1 : ( ruleSwitchAltCS ) ;
    public final void rule__SwitchExpCS__OwnedAltPartsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19613:1: ( ( ruleSwitchAltCS ) )
            // InternalImperativeOCL.g:19614:1: ( ruleSwitchAltCS )
            {
            // InternalImperativeOCL.g:19614:1: ( ruleSwitchAltCS )
            // InternalImperativeOCL.g:19615:1: ruleSwitchAltCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_0_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSwitchAltCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedAltPartsAssignment_0_1"


    // $ANTLR start "rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1"
    // InternalImperativeOCL.g:19624:1: rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1 : ( ruleSwitchAltCS ) ;
    public final void rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19628:1: ( ( ruleSwitchAltCS ) )
            // InternalImperativeOCL.g:19629:1: ( ruleSwitchAltCS )
            {
            // InternalImperativeOCL.g:19629:1: ( ruleSwitchAltCS )
            // InternalImperativeOCL.g:19630:1: ruleSwitchAltCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_0_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSwitchAltCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_0_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedAltPartsAssignment_0_2_1"


    // $ANTLR start "rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1"
    // InternalImperativeOCL.g:19639:1: rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1 : ( ruleExpCS ) ;
    public final void rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19643:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19644:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19644:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19645:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartExpCSParserRuleCall_0_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartExpCSParserRuleCall_0_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedElsePartAssignment_0_3_1"


    // $ANTLR start "rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1"
    // InternalImperativeOCL.g:19654:1: rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1 : ( ruleVarDeclarationNoInitCS ) ;
    public final void rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19658:1: ( ( ruleVarDeclarationNoInitCS ) )
            // InternalImperativeOCL.g:19659:1: ( ruleVarDeclarationNoInitCS )
            {
            // InternalImperativeOCL.g:19659:1: ( ruleVarDeclarationNoInitCS )
            // InternalImperativeOCL.g:19660:1: ruleVarDeclarationNoInitCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_1_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationNoInitCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedIteratorVarDeclarationNoInitCSParserRuleCall_1_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedIteratorAssignment_1_1_1"


    // $ANTLR start "rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1"
    // InternalImperativeOCL.g:19669:1: rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1 : ( ruleSwitchAltCS ) ;
    public final void rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19673:1: ( ( ruleSwitchAltCS ) )
            // InternalImperativeOCL.g:19674:1: ( ruleSwitchAltCS )
            {
            // InternalImperativeOCL.g:19674:1: ( ruleSwitchAltCS )
            // InternalImperativeOCL.g:19675:1: ruleSwitchAltCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_1_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSwitchAltCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedAltPartsSwitchAltCSParserRuleCall_1_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedAltPartsAssignment_1_3_1"


    // $ANTLR start "rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1"
    // InternalImperativeOCL.g:19684:1: rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1 : ( ruleExpCS ) ;
    public final void rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19688:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19689:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19689:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19690:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartExpCSParserRuleCall_1_4_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchExpCSAccess().getOwnedElsePartExpCSParserRuleCall_1_4_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchExpCS__OwnedElsePartAssignment_1_4_1"


    // $ANTLR start "rule__SwitchAltCS__OwnedConditionAssignment_1"
    // InternalImperativeOCL.g:19699:1: rule__SwitchAltCS__OwnedConditionAssignment_1 : ( ruleExpCS ) ;
    public final void rule__SwitchAltCS__OwnedConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19703:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19704:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19704:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19705:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__OwnedConditionAssignment_1"


    // $ANTLR start "rule__SwitchAltCS__OwnedBodyAssignment_3"
    // InternalImperativeOCL.g:19714:1: rule__SwitchAltCS__OwnedBodyAssignment_3 : ( ruleExpCS ) ;
    public final void rule__SwitchAltCS__OwnedBodyAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19718:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19719:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19719:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19720:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchAltCSAccess().getOwnedBodyExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchAltCSAccess().getOwnedBodyExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchAltCS__OwnedBodyAssignment_3"


    // $ANTLR start "rule__TryExpCS__OwnedExpsAssignment_3"
    // InternalImperativeOCL.g:19729:1: rule__TryExpCS__OwnedExpsAssignment_3 : ( ruleExpCS ) ;
    public final void rule__TryExpCS__OwnedExpsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19733:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19734:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19734:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19735:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getOwnedExpsExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getOwnedExpsExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__OwnedExpsAssignment_3"


    // $ANTLR start "rule__TryExpCS__OwnedCatchsAssignment_5"
    // InternalImperativeOCL.g:19744:1: rule__TryExpCS__OwnedCatchsAssignment_5 : ( ruleCatchExpCS ) ;
    public final void rule__TryExpCS__OwnedCatchsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19748:1: ( ( ruleCatchExpCS ) )
            // InternalImperativeOCL.g:19749:1: ( ruleCatchExpCS )
            {
            // InternalImperativeOCL.g:19749:1: ( ruleCatchExpCS )
            // InternalImperativeOCL.g:19750:1: ruleCatchExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTryExpCSAccess().getOwnedCatchsCatchExpCSParserRuleCall_5_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCatchExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTryExpCSAccess().getOwnedCatchsCatchExpCSParserRuleCall_5_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TryExpCS__OwnedCatchsAssignment_5"


    // $ANTLR start "rule__VarDeclarationCS__NameAssignment_0"
    // InternalImperativeOCL.g:19759:1: rule__VarDeclarationCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__VarDeclarationCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19763:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:19764:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:19764:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:19765:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__NameAssignment_0"


    // $ANTLR start "rule__VarDeclarationCS__OwnedTypeAssignment_1_1"
    // InternalImperativeOCL.g:19774:1: rule__VarDeclarationCS__OwnedTypeAssignment_1_1 : ( ruleTypeExpCS ) ;
    public final void rule__VarDeclarationCS__OwnedTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19778:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:19779:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:19779:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:19780:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__OwnedTypeAssignment_1_1"


    // $ANTLR start "rule__VarDeclarationCS__InitOpAssignment_2_0"
    // InternalImperativeOCL.g:19789:1: rule__VarDeclarationCS__InitOpAssignment_2_0 : ( ruleInitOpCS ) ;
    public final void rule__VarDeclarationCS__InitOpAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19793:1: ( ( ruleInitOpCS ) )
            // InternalImperativeOCL.g:19794:1: ( ruleInitOpCS )
            {
            // InternalImperativeOCL.g:19794:1: ( ruleInitOpCS )
            // InternalImperativeOCL.g:19795:1: ruleInitOpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getInitOpInitOpCSEnumRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitOpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getInitOpInitOpCSEnumRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__InitOpAssignment_2_0"


    // $ANTLR start "rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1"
    // InternalImperativeOCL.g:19804:1: rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1 : ( ruleExpCS ) ;
    public final void rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19808:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19809:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19809:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19810:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationCS__OwnedInitExpressionAssignment_2_1"


    // $ANTLR start "rule__VarDeclarationNoInitCS__NameAssignment_0"
    // InternalImperativeOCL.g:19819:1: rule__VarDeclarationNoInitCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__VarDeclarationNoInitCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19823:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:19824:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:19824:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:19825:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__NameAssignment_0"


    // $ANTLR start "rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1"
    // InternalImperativeOCL.g:19834:1: rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1 : ( ruleTypeExpCS ) ;
    public final void rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19838:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:19839:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:19839:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:19840:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationNoInitCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationNoInitCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationNoInitCS__OwnedTypeAssignment_1_1"


    // $ANTLR start "rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1"
    // InternalImperativeOCL.g:19849:1: rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1 : ( ruleVarDeclarationCS ) ;
    public final void rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19853:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19854:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19854:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19855:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsVarDeclarationCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsVarDeclarationCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_1"


    // $ANTLR start "rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1"
    // InternalImperativeOCL.g:19864:1: rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1 : ( ruleVarDeclarationCS ) ;
    public final void rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19868:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19869:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19869:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19870:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsVarDeclarationCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarsInitializationCSAccess().getOwnedVarDeclarationsVarDeclarationCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarsInitializationCS__OwnedVarDeclarationsAssignment_2_1"


    // $ANTLR start "rule__WhileExpCS__OwnedResultVarAssignment_2_0"
    // InternalImperativeOCL.g:19879:1: rule__WhileExpCS__OwnedResultVarAssignment_2_0 : ( ruleVarDeclarationCS ) ;
    public final void rule__WhileExpCS__OwnedResultVarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19883:1: ( ( ruleVarDeclarationCS ) )
            // InternalImperativeOCL.g:19884:1: ( ruleVarDeclarationCS )
            {
            // InternalImperativeOCL.g:19884:1: ( ruleVarDeclarationCS )
            // InternalImperativeOCL.g:19885:1: ruleVarDeclarationCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedResultVarVarDeclarationCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVarDeclarationCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedResultVarVarDeclarationCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__OwnedResultVarAssignment_2_0"


    // $ANTLR start "rule__WhileExpCS__OwnedConditionAssignment_3"
    // InternalImperativeOCL.g:19894:1: rule__WhileExpCS__OwnedConditionAssignment_3 : ( ruleExpCS ) ;
    public final void rule__WhileExpCS__OwnedConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19898:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:19899:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:19899:1: ( ruleExpCS )
            // InternalImperativeOCL.g:19900:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedConditionExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedConditionExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__OwnedConditionAssignment_3"


    // $ANTLR start "rule__WhileExpCS__OwnedExpsAssignment_6"
    // InternalImperativeOCL.g:19909:1: rule__WhileExpCS__OwnedExpsAssignment_6 : ( ruleExpressionStatementCS ) ;
    public final void rule__WhileExpCS__OwnedExpsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19913:1: ( ( ruleExpressionStatementCS ) )
            // InternalImperativeOCL.g:19914:1: ( ruleExpressionStatementCS )
            {
            // InternalImperativeOCL.g:19914:1: ( ruleExpressionStatementCS )
            // InternalImperativeOCL.g:19915:1: ruleExpressionStatementCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileExpCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_6_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionStatementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileExpCSAccess().getOwnedExpsExpressionStatementCSParserRuleCall_6_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileExpCS__OwnedExpsAssignment_6"


    // $ANTLR start "rule__URIFirstPathElementCS__ReferredElementAssignment_0"
    // InternalImperativeOCL.g:19927:1: rule__URIFirstPathElementCS__ReferredElementAssignment_0 : ( ( ruleUnrestrictedName ) ) ;
    public final void rule__URIFirstPathElementCS__ReferredElementAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19931:1: ( ( ( ruleUnrestrictedName ) ) )
            // InternalImperativeOCL.g:19932:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalImperativeOCL.g:19932:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:19933:1: ( ruleUnrestrictedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());
            }
            // InternalImperativeOCL.g:19934:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:19935:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementUnrestrictedNameParserRuleCall_0_0_1());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementUnrestrictedNameParserRuleCall_0_0_1());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__ReferredElementAssignment_0"


    // $ANTLR start "rule__URIFirstPathElementCS__ReferredElementAssignment_1_1"
    // InternalImperativeOCL.g:19946:1: rule__URIFirstPathElementCS__ReferredElementAssignment_1_1 : ( ( ruleURI ) ) ;
    public final void rule__URIFirstPathElementCS__ReferredElementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19950:1: ( ( ( ruleURI ) ) )
            // InternalImperativeOCL.g:19951:1: ( ( ruleURI ) )
            {
            // InternalImperativeOCL.g:19951:1: ( ( ruleURI ) )
            // InternalImperativeOCL.g:19952:1: ( ruleURI )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());
            }
            // InternalImperativeOCL.g:19953:1: ( ruleURI )
            // InternalImperativeOCL.g:19954:1: ruleURI
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceURIParserRuleCall_1_1_0_1());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleURI();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceURIParserRuleCall_1_1_0_1());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__URIFirstPathElementCS__ReferredElementAssignment_1_1"


    // $ANTLR start "rule__PrimitiveTypeCS__NameAssignment"
    // InternalImperativeOCL.g:19965:1: rule__PrimitiveTypeCS__NameAssignment : ( rulePrimitiveTypeIdentifier ) ;
    public final void rule__PrimitiveTypeCS__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19969:1: ( ( rulePrimitiveTypeIdentifier ) )
            // InternalImperativeOCL.g:19970:1: ( rulePrimitiveTypeIdentifier )
            {
            // InternalImperativeOCL.g:19970:1: ( rulePrimitiveTypeIdentifier )
            // InternalImperativeOCL.g:19971:1: rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimitiveTypeCS__NameAssignment"


    // $ANTLR start "rule__CollectionTypeCS__NameAssignment_0"
    // InternalImperativeOCL.g:19980:1: rule__CollectionTypeCS__NameAssignment_0 : ( ruleCollectionTypeIdentifier ) ;
    public final void rule__CollectionTypeCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19984:1: ( ( ruleCollectionTypeIdentifier ) )
            // InternalImperativeOCL.g:19985:1: ( ruleCollectionTypeIdentifier )
            {
            // InternalImperativeOCL.g:19985:1: ( ruleCollectionTypeIdentifier )
            // InternalImperativeOCL.g:19986:1: ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__NameAssignment_0"


    // $ANTLR start "rule__CollectionTypeCS__OwnedTypeAssignment_1_1"
    // InternalImperativeOCL.g:19995:1: rule__CollectionTypeCS__OwnedTypeAssignment_1_1 : ( ruleTypeExpWithoutMultiplicityCS ) ;
    public final void rule__CollectionTypeCS__OwnedTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:19999:1: ( ( ruleTypeExpWithoutMultiplicityCS ) )
            // InternalImperativeOCL.g:20000:1: ( ruleTypeExpWithoutMultiplicityCS )
            {
            // InternalImperativeOCL.g:20000:1: ( ruleTypeExpWithoutMultiplicityCS )
            // InternalImperativeOCL.g:20001:1: ruleTypeExpWithoutMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__OwnedTypeAssignment_1_1"


    // $ANTLR start "rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2"
    // InternalImperativeOCL.g:20010:1: rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2 : ( ruleMultiplicityCS ) ;
    public final void rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20014:1: ( ( ruleMultiplicityCS ) )
            // InternalImperativeOCL.g:20015:1: ( ruleMultiplicityCS )
            {
            // InternalImperativeOCL.g:20015:1: ( ruleMultiplicityCS )
            // InternalImperativeOCL.g:20016:1: ruleMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionTypeCS__OwnedCollectionMultiplicityAssignment_1_2"


    // $ANTLR start "rule__MapTypeCS__NameAssignment_0"
    // InternalImperativeOCL.g:20025:1: rule__MapTypeCS__NameAssignment_0 : ( ( 'Map' ) ) ;
    public final void rule__MapTypeCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20029:1: ( ( ( 'Map' ) ) )
            // InternalImperativeOCL.g:20030:1: ( ( 'Map' ) )
            {
            // InternalImperativeOCL.g:20030:1: ( ( 'Map' ) )
            // InternalImperativeOCL.g:20031:1: ( 'Map' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());
            }
            // InternalImperativeOCL.g:20032:1: ( 'Map' )
            // InternalImperativeOCL.g:20033:1: 'Map'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());
            }
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__NameAssignment_0"


    // $ANTLR start "rule__MapTypeCS__OwnedKeyTypeAssignment_1_1"
    // InternalImperativeOCL.g:20048:1: rule__MapTypeCS__OwnedKeyTypeAssignment_1_1 : ( ruleTypeExpCS ) ;
    public final void rule__MapTypeCS__OwnedKeyTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20052:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:20053:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:20053:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:20054:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__OwnedKeyTypeAssignment_1_1"


    // $ANTLR start "rule__MapTypeCS__OwnedValueTypeAssignment_1_3"
    // InternalImperativeOCL.g:20063:1: rule__MapTypeCS__OwnedValueTypeAssignment_1_3 : ( ruleTypeExpCS ) ;
    public final void rule__MapTypeCS__OwnedValueTypeAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20067:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:20068:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:20068:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:20069:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapTypeCS__OwnedValueTypeAssignment_1_3"


    // $ANTLR start "rule__TupleTypeCS__NameAssignment_0"
    // InternalImperativeOCL.g:20078:1: rule__TupleTypeCS__NameAssignment_0 : ( ( 'Tuple' ) ) ;
    public final void rule__TupleTypeCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20082:1: ( ( ( 'Tuple' ) ) )
            // InternalImperativeOCL.g:20083:1: ( ( 'Tuple' ) )
            {
            // InternalImperativeOCL.g:20083:1: ( ( 'Tuple' ) )
            // InternalImperativeOCL.g:20084:1: ( 'Tuple' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
            }
            // InternalImperativeOCL.g:20085:1: ( 'Tuple' )
            // InternalImperativeOCL.g:20086:1: 'Tuple'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
            }
            match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__NameAssignment_0"


    // $ANTLR start "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0"
    // InternalImperativeOCL.g:20101:1: rule__TupleTypeCS__OwnedPartsAssignment_1_1_0 : ( ruleTuplePartCS ) ;
    public final void rule__TupleTypeCS__OwnedPartsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20105:1: ( ( ruleTuplePartCS ) )
            // InternalImperativeOCL.g:20106:1: ( ruleTuplePartCS )
            {
            // InternalImperativeOCL.g:20106:1: ( ruleTuplePartCS )
            // InternalImperativeOCL.g:20107:1: ruleTuplePartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0"


    // $ANTLR start "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1"
    // InternalImperativeOCL.g:20116:1: rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1 : ( ruleTuplePartCS ) ;
    public final void rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20120:1: ( ( ruleTuplePartCS ) )
            // InternalImperativeOCL.g:20121:1: ( ruleTuplePartCS )
            {
            // InternalImperativeOCL.g:20121:1: ( ruleTuplePartCS )
            // InternalImperativeOCL.g:20122:1: ruleTuplePartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1"


    // $ANTLR start "rule__TuplePartCS__NameAssignment_0"
    // InternalImperativeOCL.g:20131:1: rule__TuplePartCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__TuplePartCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20135:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:20136:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:20136:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:20137:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__NameAssignment_0"


    // $ANTLR start "rule__TuplePartCS__OwnedTypeAssignment_2"
    // InternalImperativeOCL.g:20146:1: rule__TuplePartCS__OwnedTypeAssignment_2 : ( ruleTypeExpCS ) ;
    public final void rule__TuplePartCS__OwnedTypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20150:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:20151:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:20151:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:20152:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TuplePartCS__OwnedTypeAssignment_2"


    // $ANTLR start "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0"
    // InternalImperativeOCL.g:20161:1: rule__CollectionLiteralExpCS__OwnedTypeAssignment_0 : ( ruleCollectionTypeCS ) ;
    public final void rule__CollectionLiteralExpCS__OwnedTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20165:1: ( ( ruleCollectionTypeCS ) )
            // InternalImperativeOCL.g:20166:1: ( ruleCollectionTypeCS )
            {
            // InternalImperativeOCL.g:20166:1: ( ruleCollectionTypeCS )
            // InternalImperativeOCL.g:20167:1: ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0"


    // $ANTLR start "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0"
    // InternalImperativeOCL.g:20176:1: rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0 : ( ruleCollectionLiteralPartCS ) ;
    public final void rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20180:1: ( ( ruleCollectionLiteralPartCS ) )
            // InternalImperativeOCL.g:20181:1: ( ruleCollectionLiteralPartCS )
            {
            // InternalImperativeOCL.g:20181:1: ( ruleCollectionLiteralPartCS )
            // InternalImperativeOCL.g:20182:1: ruleCollectionLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0"


    // $ANTLR start "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1"
    // InternalImperativeOCL.g:20191:1: rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1 : ( ruleCollectionLiteralPartCS ) ;
    public final void rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20195:1: ( ( ruleCollectionLiteralPartCS ) )
            // InternalImperativeOCL.g:20196:1: ( ruleCollectionLiteralPartCS )
            {
            // InternalImperativeOCL.g:20196:1: ( ruleCollectionLiteralPartCS )
            // InternalImperativeOCL.g:20197:1: ruleCollectionLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1"


    // $ANTLR start "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0"
    // InternalImperativeOCL.g:20206:1: rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0 : ( ruleExpCS ) ;
    public final void rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20210:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20211:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20211:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20212:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0"


    // $ANTLR start "rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1"
    // InternalImperativeOCL.g:20221:1: rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1 : ( ruleExpCS ) ;
    public final void rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20225:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20226:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20226:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20227:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1"


    // $ANTLR start "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1"
    // InternalImperativeOCL.g:20236:1: rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1 : ( rulePatternExpCS ) ;
    public final void rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20240:1: ( ( rulePatternExpCS ) )
            // InternalImperativeOCL.g:20241:1: ( rulePatternExpCS )
            {
            // InternalImperativeOCL.g:20241:1: ( rulePatternExpCS )
            // InternalImperativeOCL.g:20242:1: rulePatternExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePatternExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1"


    // $ANTLR start "rule__CollectionPatternCS__OwnedTypeAssignment_0"
    // InternalImperativeOCL.g:20251:1: rule__CollectionPatternCS__OwnedTypeAssignment_0 : ( ruleCollectionTypeCS ) ;
    public final void rule__CollectionPatternCS__OwnedTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20255:1: ( ( ruleCollectionTypeCS ) )
            // InternalImperativeOCL.g:20256:1: ( ruleCollectionTypeCS )
            {
            // InternalImperativeOCL.g:20256:1: ( ruleCollectionTypeCS )
            // InternalImperativeOCL.g:20257:1: ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__OwnedTypeAssignment_0"


    // $ANTLR start "rule__CollectionPatternCS__OwnedPartsAssignment_2_0"
    // InternalImperativeOCL.g:20266:1: rule__CollectionPatternCS__OwnedPartsAssignment_2_0 : ( rulePatternExpCS ) ;
    public final void rule__CollectionPatternCS__OwnedPartsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20270:1: ( ( rulePatternExpCS ) )
            // InternalImperativeOCL.g:20271:1: ( rulePatternExpCS )
            {
            // InternalImperativeOCL.g:20271:1: ( rulePatternExpCS )
            // InternalImperativeOCL.g:20272:1: rulePatternExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePatternExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__OwnedPartsAssignment_2_0"


    // $ANTLR start "rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1"
    // InternalImperativeOCL.g:20281:1: rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1 : ( rulePatternExpCS ) ;
    public final void rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20285:1: ( ( rulePatternExpCS ) )
            // InternalImperativeOCL.g:20286:1: ( rulePatternExpCS )
            {
            // InternalImperativeOCL.g:20286:1: ( rulePatternExpCS )
            // InternalImperativeOCL.g:20287:1: rulePatternExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePatternExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1"


    // $ANTLR start "rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1"
    // InternalImperativeOCL.g:20296:1: rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1 : ( ruleIdentifier ) ;
    public final void rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20300:1: ( ( ruleIdentifier ) )
            // InternalImperativeOCL.g:20301:1: ( ruleIdentifier )
            {
            // InternalImperativeOCL.g:20301:1: ( ruleIdentifier )
            // InternalImperativeOCL.g:20302:1: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1"


    // $ANTLR start "rule__ShadowPartCS__ReferredPropertyAssignment_0_0"
    // InternalImperativeOCL.g:20311:1: rule__ShadowPartCS__ReferredPropertyAssignment_0_0 : ( ( ruleUnrestrictedName ) ) ;
    public final void rule__ShadowPartCS__ReferredPropertyAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20315:1: ( ( ( ruleUnrestrictedName ) ) )
            // InternalImperativeOCL.g:20316:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalImperativeOCL.g:20316:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:20317:1: ( ruleUnrestrictedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());
            }
            // InternalImperativeOCL.g:20318:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:20319:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyUnrestrictedNameParserRuleCall_0_0_0_1());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyUnrestrictedNameParserRuleCall_0_0_0_1());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__ReferredPropertyAssignment_0_0"


    // $ANTLR start "rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2"
    // InternalImperativeOCL.g:20330:1: rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2 : ( ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 ) ) ;
    public final void rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20334:1: ( ( ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 ) ) )
            // InternalImperativeOCL.g:20335:1: ( ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 ) )
            {
            // InternalImperativeOCL.g:20335:1: ( ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 ) )
            // InternalImperativeOCL.g:20336:1: ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAlternatives_0_2_0());
            }
            // InternalImperativeOCL.g:20337:1: ( rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0 )
            // InternalImperativeOCL.g:20337:2: rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShadowPartCS__OwnedInitExpressionAlternatives_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAlternatives_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__OwnedInitExpressionAssignment_0_2"


    // $ANTLR start "rule__ShadowPartCS__OwnedInitExpressionAssignment_1"
    // InternalImperativeOCL.g:20346:1: rule__ShadowPartCS__OwnedInitExpressionAssignment_1 : ( ruleStringLiteralExpCS ) ;
    public final void rule__ShadowPartCS__OwnedInitExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20350:1: ( ( ruleStringLiteralExpCS ) )
            // InternalImperativeOCL.g:20351:1: ( ruleStringLiteralExpCS )
            {
            // InternalImperativeOCL.g:20351:1: ( ruleStringLiteralExpCS )
            // InternalImperativeOCL.g:20352:1: ruleStringLiteralExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShadowPartCS__OwnedInitExpressionAssignment_1"


    // $ANTLR start "rule__PatternExpCS__PatternVariableNameAssignment_0"
    // InternalImperativeOCL.g:20361:1: rule__PatternExpCS__PatternVariableNameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__PatternExpCS__PatternVariableNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20365:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:20366:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:20366:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:20367:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__PatternVariableNameAssignment_0"


    // $ANTLR start "rule__PatternExpCS__OwnedPatternTypeAssignment_2"
    // InternalImperativeOCL.g:20376:1: rule__PatternExpCS__OwnedPatternTypeAssignment_2 : ( ruleTypeExpCS ) ;
    public final void rule__PatternExpCS__OwnedPatternTypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20380:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:20381:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:20381:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:20382:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PatternExpCS__OwnedPatternTypeAssignment_2"


    // $ANTLR start "rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2"
    // InternalImperativeOCL.g:20391:1: rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2 : ( ruleExpCS ) ;
    public final void rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20395:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20396:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20396:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20397:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2"


    // $ANTLR start "rule__MapLiteralExpCS__OwnedTypeAssignment_0"
    // InternalImperativeOCL.g:20406:1: rule__MapLiteralExpCS__OwnedTypeAssignment_0 : ( ruleMapTypeCS ) ;
    public final void rule__MapLiteralExpCS__OwnedTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20410:1: ( ( ruleMapTypeCS ) )
            // InternalImperativeOCL.g:20411:1: ( ruleMapTypeCS )
            {
            // InternalImperativeOCL.g:20411:1: ( ruleMapTypeCS )
            // InternalImperativeOCL.g:20412:1: ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__OwnedTypeAssignment_0"


    // $ANTLR start "rule__MapLiteralExpCS__OwnedPartsAssignment_2_0"
    // InternalImperativeOCL.g:20421:1: rule__MapLiteralExpCS__OwnedPartsAssignment_2_0 : ( ruleMapLiteralPartCS ) ;
    public final void rule__MapLiteralExpCS__OwnedPartsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20425:1: ( ( ruleMapLiteralPartCS ) )
            // InternalImperativeOCL.g:20426:1: ( ruleMapLiteralPartCS )
            {
            // InternalImperativeOCL.g:20426:1: ( ruleMapLiteralPartCS )
            // InternalImperativeOCL.g:20427:1: ruleMapLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__OwnedPartsAssignment_2_0"


    // $ANTLR start "rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1"
    // InternalImperativeOCL.g:20436:1: rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1 : ( ruleMapLiteralPartCS ) ;
    public final void rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20440:1: ( ( ruleMapLiteralPartCS ) )
            // InternalImperativeOCL.g:20441:1: ( ruleMapLiteralPartCS )
            {
            // InternalImperativeOCL.g:20441:1: ( ruleMapLiteralPartCS )
            // InternalImperativeOCL.g:20442:1: ruleMapLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1"


    // $ANTLR start "rule__MapLiteralPartCS__OwnedKeyAssignment_0"
    // InternalImperativeOCL.g:20451:1: rule__MapLiteralPartCS__OwnedKeyAssignment_0 : ( ruleExpCS ) ;
    public final void rule__MapLiteralPartCS__OwnedKeyAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20455:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20456:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20456:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20457:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__OwnedKeyAssignment_0"


    // $ANTLR start "rule__MapLiteralPartCS__OwnedValueAssignment_2"
    // InternalImperativeOCL.g:20466:1: rule__MapLiteralPartCS__OwnedValueAssignment_2 : ( ruleExpCS ) ;
    public final void rule__MapLiteralPartCS__OwnedValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20470:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20471:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20471:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20472:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapLiteralPartCS__OwnedValueAssignment_2"


    // $ANTLR start "rule__TupleLiteralExpCS__OwnedPartsAssignment_2"
    // InternalImperativeOCL.g:20481:1: rule__TupleLiteralExpCS__OwnedPartsAssignment_2 : ( ruleTupleLiteralPartCS ) ;
    public final void rule__TupleLiteralExpCS__OwnedPartsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20485:1: ( ( ruleTupleLiteralPartCS ) )
            // InternalImperativeOCL.g:20486:1: ( ruleTupleLiteralPartCS )
            {
            // InternalImperativeOCL.g:20486:1: ( ruleTupleLiteralPartCS )
            // InternalImperativeOCL.g:20487:1: ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__OwnedPartsAssignment_2"


    // $ANTLR start "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1"
    // InternalImperativeOCL.g:20496:1: rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1 : ( ruleTupleLiteralPartCS ) ;
    public final void rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20500:1: ( ( ruleTupleLiteralPartCS ) )
            // InternalImperativeOCL.g:20501:1: ( ruleTupleLiteralPartCS )
            {
            // InternalImperativeOCL.g:20501:1: ( ruleTupleLiteralPartCS )
            // InternalImperativeOCL.g:20502:1: ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1"


    // $ANTLR start "rule__TupleLiteralPartCS__NameAssignment_0"
    // InternalImperativeOCL.g:20511:1: rule__TupleLiteralPartCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__TupleLiteralPartCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20515:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:20516:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:20516:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:20517:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__NameAssignment_0"


    // $ANTLR start "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1"
    // InternalImperativeOCL.g:20526:1: rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1 : ( ruleTypeExpCS ) ;
    public final void rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20530:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:20531:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:20531:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:20532:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1"


    // $ANTLR start "rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3"
    // InternalImperativeOCL.g:20541:1: rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3 : ( ruleExpCS ) ;
    public final void rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20545:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20546:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20546:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20547:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3"


    // $ANTLR start "rule__NumberLiteralExpCS__SymbolAssignment"
    // InternalImperativeOCL.g:20556:1: rule__NumberLiteralExpCS__SymbolAssignment : ( ruleNUMBER_LITERAL ) ;
    public final void rule__NumberLiteralExpCS__SymbolAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20560:1: ( ( ruleNUMBER_LITERAL ) )
            // InternalImperativeOCL.g:20561:1: ( ruleNUMBER_LITERAL )
            {
            // InternalImperativeOCL.g:20561:1: ( ruleNUMBER_LITERAL )
            // InternalImperativeOCL.g:20562:1: ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteralExpCS__SymbolAssignment"


    // $ANTLR start "rule__StringLiteralExpCS__SegmentsAssignment"
    // InternalImperativeOCL.g:20571:1: rule__StringLiteralExpCS__SegmentsAssignment : ( ruleStringLiteral ) ;
    public final void rule__StringLiteralExpCS__SegmentsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20575:1: ( ( ruleStringLiteral ) )
            // InternalImperativeOCL.g:20576:1: ( ruleStringLiteral )
            {
            // InternalImperativeOCL.g:20576:1: ( ruleStringLiteral )
            // InternalImperativeOCL.g:20577:1: ruleStringLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringLiteralExpCS__SegmentsAssignment"


    // $ANTLR start "rule__BooleanLiteralExpCS__SymbolAssignment_0"
    // InternalImperativeOCL.g:20586:1: rule__BooleanLiteralExpCS__SymbolAssignment_0 : ( ( 'true' ) ) ;
    public final void rule__BooleanLiteralExpCS__SymbolAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20590:1: ( ( ( 'true' ) ) )
            // InternalImperativeOCL.g:20591:1: ( ( 'true' ) )
            {
            // InternalImperativeOCL.g:20591:1: ( ( 'true' ) )
            // InternalImperativeOCL.g:20592:1: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());
            }
            // InternalImperativeOCL.g:20593:1: ( 'true' )
            // InternalImperativeOCL.g:20594:1: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());
            }
            match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteralExpCS__SymbolAssignment_0"


    // $ANTLR start "rule__BooleanLiteralExpCS__SymbolAssignment_1"
    // InternalImperativeOCL.g:20609:1: rule__BooleanLiteralExpCS__SymbolAssignment_1 : ( ( 'false' ) ) ;
    public final void rule__BooleanLiteralExpCS__SymbolAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20613:1: ( ( ( 'false' ) ) )
            // InternalImperativeOCL.g:20614:1: ( ( 'false' ) )
            {
            // InternalImperativeOCL.g:20614:1: ( ( 'false' ) )
            // InternalImperativeOCL.g:20615:1: ( 'false' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());
            }
            // InternalImperativeOCL.g:20616:1: ( 'false' )
            // InternalImperativeOCL.g:20617:1: 'false'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());
            }
            match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteralExpCS__SymbolAssignment_1"


    // $ANTLR start "rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1"
    // InternalImperativeOCL.g:20632:1: rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1 : ( ruleMultiplicityCS ) ;
    public final void rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20636:1: ( ( ruleMultiplicityCS ) )
            // InternalImperativeOCL.g:20637:1: ( ruleMultiplicityCS )
            {
            // InternalImperativeOCL.g:20637:1: ( ruleMultiplicityCS )
            // InternalImperativeOCL.g:20638:1: ruleMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1"


    // $ANTLR start "rule__TypeLiteralExpCS__OwnedTypeAssignment"
    // InternalImperativeOCL.g:20647:1: rule__TypeLiteralExpCS__OwnedTypeAssignment : ( ruleTypeLiteralWithMultiplicityCS ) ;
    public final void rule__TypeLiteralExpCS__OwnedTypeAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20651:1: ( ( ruleTypeLiteralWithMultiplicityCS ) )
            // InternalImperativeOCL.g:20652:1: ( ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalImperativeOCL.g:20652:1: ( ruleTypeLiteralWithMultiplicityCS )
            // InternalImperativeOCL.g:20653:1: ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLiteralExpCS__OwnedTypeAssignment"


    // $ANTLR start "rule__TypeNameExpCS__OwnedPathNameAssignment_0"
    // InternalImperativeOCL.g:20662:1: rule__TypeNameExpCS__OwnedPathNameAssignment_0 : ( rulePathNameCS ) ;
    public final void rule__TypeNameExpCS__OwnedPathNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20666:1: ( ( rulePathNameCS ) )
            // InternalImperativeOCL.g:20667:1: ( rulePathNameCS )
            {
            // InternalImperativeOCL.g:20667:1: ( rulePathNameCS )
            // InternalImperativeOCL.g:20668:1: rulePathNameCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePathNameCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__OwnedPathNameAssignment_0"


    // $ANTLR start "rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0"
    // InternalImperativeOCL.g:20677:1: rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0 : ( ruleCurlyBracketedClauseCS ) ;
    public final void rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20681:1: ( ( ruleCurlyBracketedClauseCS ) )
            // InternalImperativeOCL.g:20682:1: ( ruleCurlyBracketedClauseCS )
            {
            // InternalImperativeOCL.g:20682:1: ( ruleCurlyBracketedClauseCS )
            // InternalImperativeOCL.g:20683:1: ruleCurlyBracketedClauseCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0"


    // $ANTLR start "rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1"
    // InternalImperativeOCL.g:20692:1: rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1 : ( ruleExpCS ) ;
    public final void rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20696:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20697:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20697:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20698:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1"


    // $ANTLR start "rule__TypeExpCS__OwnedMultiplicityAssignment_1"
    // InternalImperativeOCL.g:20707:1: rule__TypeExpCS__OwnedMultiplicityAssignment_1 : ( ruleMultiplicityCS ) ;
    public final void rule__TypeExpCS__OwnedMultiplicityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20711:1: ( ( ruleMultiplicityCS ) )
            // InternalImperativeOCL.g:20712:1: ( ruleMultiplicityCS )
            {
            // InternalImperativeOCL.g:20712:1: ( ruleMultiplicityCS )
            // InternalImperativeOCL.g:20713:1: ruleMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeExpCS__OwnedMultiplicityAssignment_1"


    // $ANTLR start "rule__ExpCS__NameAssignment_0_1_1"
    // InternalImperativeOCL.g:20722:1: rule__ExpCS__NameAssignment_0_1_1 : ( ruleBinaryOperatorName ) ;
    public final void rule__ExpCS__NameAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20726:1: ( ( ruleBinaryOperatorName ) )
            // InternalImperativeOCL.g:20727:1: ( ruleBinaryOperatorName )
            {
            // InternalImperativeOCL.g:20727:1: ( ruleBinaryOperatorName )
            // InternalImperativeOCL.g:20728:1: ruleBinaryOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__NameAssignment_0_1_1"


    // $ANTLR start "rule__ExpCS__OwnedRightAssignment_0_1_2"
    // InternalImperativeOCL.g:20737:1: rule__ExpCS__OwnedRightAssignment_0_1_2 : ( ruleExpCS ) ;
    public final void rule__ExpCS__OwnedRightAssignment_0_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20741:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:20742:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:20742:1: ( ruleExpCS )
            // InternalImperativeOCL.g:20743:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpCS__OwnedRightAssignment_0_1_2"


    // $ANTLR start "rule__PrefixedLetExpCS__NameAssignment_0_1"
    // InternalImperativeOCL.g:20752:1: rule__PrefixedLetExpCS__NameAssignment_0_1 : ( ruleUnaryOperatorName ) ;
    public final void rule__PrefixedLetExpCS__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20756:1: ( ( ruleUnaryOperatorName ) )
            // InternalImperativeOCL.g:20757:1: ( ruleUnaryOperatorName )
            {
            // InternalImperativeOCL.g:20757:1: ( ruleUnaryOperatorName )
            // InternalImperativeOCL.g:20758:1: ruleUnaryOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__NameAssignment_0_1"


    // $ANTLR start "rule__PrefixedLetExpCS__OwnedRightAssignment_0_2"
    // InternalImperativeOCL.g:20767:1: rule__PrefixedLetExpCS__OwnedRightAssignment_0_2 : ( rulePrefixedLetExpCS ) ;
    public final void rule__PrefixedLetExpCS__OwnedRightAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20771:1: ( ( rulePrefixedLetExpCS ) )
            // InternalImperativeOCL.g:20772:1: ( rulePrefixedLetExpCS )
            {
            // InternalImperativeOCL.g:20772:1: ( rulePrefixedLetExpCS )
            // InternalImperativeOCL.g:20773:1: rulePrefixedLetExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedLetExpCS__OwnedRightAssignment_0_2"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__NameAssignment_0_1"
    // InternalImperativeOCL.g:20782:1: rule__PrefixedPrimaryExpCS__NameAssignment_0_1 : ( ruleUnaryOperatorName ) ;
    public final void rule__PrefixedPrimaryExpCS__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20786:1: ( ( ruleUnaryOperatorName ) )
            // InternalImperativeOCL.g:20787:1: ( ruleUnaryOperatorName )
            {
            // InternalImperativeOCL.g:20787:1: ( ruleUnaryOperatorName )
            // InternalImperativeOCL.g:20788:1: ruleUnaryOperatorName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__NameAssignment_0_1"


    // $ANTLR start "rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2"
    // InternalImperativeOCL.g:20797:1: rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2 : ( rulePrefixedPrimaryExpCS ) ;
    public final void rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20801:1: ( ( rulePrefixedPrimaryExpCS ) )
            // InternalImperativeOCL.g:20802:1: ( rulePrefixedPrimaryExpCS )
            {
            // InternalImperativeOCL.g:20802:1: ( rulePrefixedPrimaryExpCS )
            // InternalImperativeOCL.g:20803:1: rulePrefixedPrimaryExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2"


    // $ANTLR start "rule__NameExpCS__OwnedPathNameAssignment_0"
    // InternalImperativeOCL.g:20812:1: rule__NameExpCS__OwnedPathNameAssignment_0 : ( rulePathNameCS ) ;
    public final void rule__NameExpCS__OwnedPathNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20816:1: ( ( rulePathNameCS ) )
            // InternalImperativeOCL.g:20817:1: ( rulePathNameCS )
            {
            // InternalImperativeOCL.g:20817:1: ( rulePathNameCS )
            // InternalImperativeOCL.g:20818:1: rulePathNameCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePathNameCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__OwnedPathNameAssignment_0"


    // $ANTLR start "rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1"
    // InternalImperativeOCL.g:20827:1: rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1 : ( ruleSquareBracketedClauseCS ) ;
    public final void rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20831:1: ( ( ruleSquareBracketedClauseCS ) )
            // InternalImperativeOCL.g:20832:1: ( ruleSquareBracketedClauseCS )
            {
            // InternalImperativeOCL.g:20832:1: ( ruleSquareBracketedClauseCS )
            // InternalImperativeOCL.g:20833:1: ruleSquareBracketedClauseCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1"


    // $ANTLR start "rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2"
    // InternalImperativeOCL.g:20842:1: rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 : ( ruleRoundBracketedClauseCS ) ;
    public final void rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20846:1: ( ( ruleRoundBracketedClauseCS ) )
            // InternalImperativeOCL.g:20847:1: ( ruleRoundBracketedClauseCS )
            {
            // InternalImperativeOCL.g:20847:1: ( ruleRoundBracketedClauseCS )
            // InternalImperativeOCL.g:20848:1: ruleRoundBracketedClauseCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2"


    // $ANTLR start "rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3"
    // InternalImperativeOCL.g:20857:1: rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 : ( ruleCurlyBracketedClauseCS ) ;
    public final void rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20861:1: ( ( ruleCurlyBracketedClauseCS ) )
            // InternalImperativeOCL.g:20862:1: ( ruleCurlyBracketedClauseCS )
            {
            // InternalImperativeOCL.g:20862:1: ( ruleCurlyBracketedClauseCS )
            // InternalImperativeOCL.g:20863:1: ruleCurlyBracketedClauseCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3"


    // $ANTLR start "rule__NameExpCS__IsPreAssignment_4_0"
    // InternalImperativeOCL.g:20872:1: rule__NameExpCS__IsPreAssignment_4_0 : ( ( '@' ) ) ;
    public final void rule__NameExpCS__IsPreAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20876:1: ( ( ( '@' ) ) )
            // InternalImperativeOCL.g:20877:1: ( ( '@' ) )
            {
            // InternalImperativeOCL.g:20877:1: ( ( '@' ) )
            // InternalImperativeOCL.g:20878:1: ( '@' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());
            }
            // InternalImperativeOCL.g:20879:1: ( '@' )
            // InternalImperativeOCL.g:20880:1: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());
            }
            match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NameExpCS__IsPreAssignment_4_0"


    // $ANTLR start "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0"
    // InternalImperativeOCL.g:20895:1: rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0 : ( ruleShadowPartCS ) ;
    public final void rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20899:1: ( ( ruleShadowPartCS ) )
            // InternalImperativeOCL.g:20900:1: ( ruleShadowPartCS )
            {
            // InternalImperativeOCL.g:20900:1: ( ruleShadowPartCS )
            // InternalImperativeOCL.g:20901:1: ruleShadowPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0"


    // $ANTLR start "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1"
    // InternalImperativeOCL.g:20910:1: rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1 : ( ruleShadowPartCS ) ;
    public final void rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20914:1: ( ( ruleShadowPartCS ) )
            // InternalImperativeOCL.g:20915:1: ( ruleShadowPartCS )
            {
            // InternalImperativeOCL.g:20915:1: ( ruleShadowPartCS )
            // InternalImperativeOCL.g:20916:1: ruleShadowPartCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_1_1"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0"
    // InternalImperativeOCL.g:20925:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0 : ( ruleNavigatingArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20929:1: ( ( ruleNavigatingArgCS ) )
            // InternalImperativeOCL.g:20930:1: ( ruleNavigatingArgCS )
            {
            // InternalImperativeOCL.g:20930:1: ( ruleNavigatingArgCS )
            // InternalImperativeOCL.g:20931:1: ruleNavigatingArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1"
    // InternalImperativeOCL.g:20940:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1 : ( ruleNavigatingCommaArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20944:1: ( ( ruleNavigatingCommaArgCS ) )
            // InternalImperativeOCL.g:20945:1: ( ruleNavigatingCommaArgCS )
            {
            // InternalImperativeOCL.g:20945:1: ( ruleNavigatingCommaArgCS )
            // InternalImperativeOCL.g:20946:1: ruleNavigatingCommaArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0"
    // InternalImperativeOCL.g:20955:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0 : ( ruleNavigatingSemiArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20959:1: ( ( ruleNavigatingSemiArgCS ) )
            // InternalImperativeOCL.g:20960:1: ( ruleNavigatingSemiArgCS )
            {
            // InternalImperativeOCL.g:20960:1: ( ruleNavigatingSemiArgCS )
            // InternalImperativeOCL.g:20961:1: ruleNavigatingSemiArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_2_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_2_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1"
    // InternalImperativeOCL.g:20970:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1 : ( ruleNavigatingCommaArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20974:1: ( ( ruleNavigatingCommaArgCS ) )
            // InternalImperativeOCL.g:20975:1: ( ruleNavigatingCommaArgCS )
            {
            // InternalImperativeOCL.g:20975:1: ( ruleNavigatingCommaArgCS )
            // InternalImperativeOCL.g:20976:1: ruleNavigatingCommaArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0"
    // InternalImperativeOCL.g:20985:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0 : ( ruleNavigatingBarArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:20989:1: ( ( ruleNavigatingBarArgCS ) )
            // InternalImperativeOCL.g:20990:1: ( ruleNavigatingBarArgCS )
            {
            // InternalImperativeOCL.g:20990:1: ( ruleNavigatingBarArgCS )
            // InternalImperativeOCL.g:20991:1: ruleNavigatingBarArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_3_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_3_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0"


    // $ANTLR start "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1"
    // InternalImperativeOCL.g:21000:1: rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1 : ( ruleNavigatingCommaArgCS ) ;
    public final void rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21004:1: ( ( ruleNavigatingCommaArgCS ) )
            // InternalImperativeOCL.g:21005:1: ( ruleNavigatingCommaArgCS )
            {
            // InternalImperativeOCL.g:21005:1: ( ruleNavigatingCommaArgCS )
            // InternalImperativeOCL.g:21006:1: ruleNavigatingCommaArgCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_3_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_3_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1"


    // $ANTLR start "rule__SquareBracketedClauseCS__OwnedTermsAssignment_1"
    // InternalImperativeOCL.g:21015:1: rule__SquareBracketedClauseCS__OwnedTermsAssignment_1 : ( ruleExpCS ) ;
    public final void rule__SquareBracketedClauseCS__OwnedTermsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21019:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21020:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21020:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21021:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__OwnedTermsAssignment_1"


    // $ANTLR start "rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1"
    // InternalImperativeOCL.g:21030:1: rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1 : ( ruleExpCS ) ;
    public final void rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21034:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21035:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21035:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21036:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1"


    // $ANTLR start "rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0"
    // InternalImperativeOCL.g:21045:1: rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0 : ( ruleNavigatingArgExpCS ) ;
    public final void rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21049:1: ( ( ruleNavigatingArgExpCS ) )
            // InternalImperativeOCL.g:21050:1: ( ruleNavigatingArgExpCS )
            {
            // InternalImperativeOCL.g:21050:1: ( ruleNavigatingArgExpCS )
            // InternalImperativeOCL.g:21051:1: ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0"


    // $ANTLR start "rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1"
    // InternalImperativeOCL.g:21060:1: rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1 : ( ruleTypeExpCS ) ;
    public final void rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21064:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21065:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21065:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21066:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_0_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1"


    // $ANTLR start "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1"
    // InternalImperativeOCL.g:21075:1: rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21079:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21080:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21080:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21081:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1"


    // $ANTLR start "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1"
    // InternalImperativeOCL.g:21090:1: rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21094:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21095:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21095:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21096:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1"


    // $ANTLR start "rule__NavigatingArgCS__OwnedTypeAssignment_1_1"
    // InternalImperativeOCL.g:21105:1: rule__NavigatingArgCS__OwnedTypeAssignment_1_1 : ( ruleTypeExpCS ) ;
    public final void rule__NavigatingArgCS__OwnedTypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21109:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21110:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21110:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21111:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingArgCS__OwnedTypeAssignment_1_1"


    // $ANTLR start "rule__NavigatingBarArgCS__PrefixAssignment_0"
    // InternalImperativeOCL.g:21120:1: rule__NavigatingBarArgCS__PrefixAssignment_0 : ( ( '|' ) ) ;
    public final void rule__NavigatingBarArgCS__PrefixAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21124:1: ( ( ( '|' ) ) )
            // InternalImperativeOCL.g:21125:1: ( ( '|' ) )
            {
            // InternalImperativeOCL.g:21125:1: ( ( '|' ) )
            // InternalImperativeOCL.g:21126:1: ( '|' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
            }
            // InternalImperativeOCL.g:21127:1: ( '|' )
            // InternalImperativeOCL.g:21128:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
            }
            match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__PrefixAssignment_0"


    // $ANTLR start "rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1"
    // InternalImperativeOCL.g:21143:1: rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1 : ( ruleNavigatingArgExpCS ) ;
    public final void rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21147:1: ( ( ruleNavigatingArgExpCS ) )
            // InternalImperativeOCL.g:21148:1: ( ruleNavigatingArgExpCS )
            {
            // InternalImperativeOCL.g:21148:1: ( ruleNavigatingArgExpCS )
            // InternalImperativeOCL.g:21149:1: ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1"


    // $ANTLR start "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1"
    // InternalImperativeOCL.g:21158:1: rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1 : ( ruleTypeExpCS ) ;
    public final void rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21162:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21163:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21163:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21164:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1"


    // $ANTLR start "rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1"
    // InternalImperativeOCL.g:21173:1: rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21177:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21178:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21178:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21179:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1"


    // $ANTLR start "rule__NavigatingCommaArgCS__PrefixAssignment_0"
    // InternalImperativeOCL.g:21188:1: rule__NavigatingCommaArgCS__PrefixAssignment_0 : ( ( ',' ) ) ;
    public final void rule__NavigatingCommaArgCS__PrefixAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21192:1: ( ( ( ',' ) ) )
            // InternalImperativeOCL.g:21193:1: ( ( ',' ) )
            {
            // InternalImperativeOCL.g:21193:1: ( ( ',' ) )
            // InternalImperativeOCL.g:21194:1: ( ',' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
            }
            // InternalImperativeOCL.g:21195:1: ( ',' )
            // InternalImperativeOCL.g:21196:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__PrefixAssignment_0"


    // $ANTLR start "rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1"
    // InternalImperativeOCL.g:21211:1: rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1 : ( ruleNavigatingArgExpCS ) ;
    public final void rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21215:1: ( ( ruleNavigatingArgExpCS ) )
            // InternalImperativeOCL.g:21216:1: ( ruleNavigatingArgExpCS )
            {
            // InternalImperativeOCL.g:21216:1: ( ruleNavigatingArgExpCS )
            // InternalImperativeOCL.g:21217:1: ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1"


    // $ANTLR start "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1"
    // InternalImperativeOCL.g:21226:1: rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1 : ( ruleTypeExpCS ) ;
    public final void rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21230:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21231:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21231:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21232:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1"


    // $ANTLR start "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1"
    // InternalImperativeOCL.g:21241:1: rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21245:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21246:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21246:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21247:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1"


    // $ANTLR start "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1"
    // InternalImperativeOCL.g:21256:1: rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21260:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21261:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21261:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21262:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1"


    // $ANTLR start "rule__NavigatingSemiArgCS__PrefixAssignment_0"
    // InternalImperativeOCL.g:21271:1: rule__NavigatingSemiArgCS__PrefixAssignment_0 : ( ( ';' ) ) ;
    public final void rule__NavigatingSemiArgCS__PrefixAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21275:1: ( ( ( ';' ) ) )
            // InternalImperativeOCL.g:21276:1: ( ( ';' ) )
            {
            // InternalImperativeOCL.g:21276:1: ( ( ';' ) )
            // InternalImperativeOCL.g:21277:1: ( ';' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
            }
            // InternalImperativeOCL.g:21278:1: ( ';' )
            // InternalImperativeOCL.g:21279:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
            }
            match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__PrefixAssignment_0"


    // $ANTLR start "rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1"
    // InternalImperativeOCL.g:21294:1: rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1 : ( ruleNavigatingArgExpCS ) ;
    public final void rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21298:1: ( ( ruleNavigatingArgExpCS ) )
            // InternalImperativeOCL.g:21299:1: ( ruleNavigatingArgExpCS )
            {
            // InternalImperativeOCL.g:21299:1: ( ruleNavigatingArgExpCS )
            // InternalImperativeOCL.g:21300:1: ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1"


    // $ANTLR start "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1"
    // InternalImperativeOCL.g:21309:1: rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1 : ( ruleTypeExpCS ) ;
    public final void rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21313:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21314:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21314:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21315:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1"


    // $ANTLR start "rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1"
    // InternalImperativeOCL.g:21324:1: rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1 : ( ruleExpCS ) ;
    public final void rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21328:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21329:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21329:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21330:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1"


    // $ANTLR start "rule__IfExpCS__OwnedConditionAssignment_1"
    // InternalImperativeOCL.g:21339:1: rule__IfExpCS__OwnedConditionAssignment_1 : ( ( rule__IfExpCS__OwnedConditionAlternatives_1_0 ) ) ;
    public final void rule__IfExpCS__OwnedConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21343:1: ( ( ( rule__IfExpCS__OwnedConditionAlternatives_1_0 ) ) )
            // InternalImperativeOCL.g:21344:1: ( ( rule__IfExpCS__OwnedConditionAlternatives_1_0 ) )
            {
            // InternalImperativeOCL.g:21344:1: ( ( rule__IfExpCS__OwnedConditionAlternatives_1_0 ) )
            // InternalImperativeOCL.g:21345:1: ( rule__IfExpCS__OwnedConditionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedConditionAlternatives_1_0());
            }
            // InternalImperativeOCL.g:21346:1: ( rule__IfExpCS__OwnedConditionAlternatives_1_0 )
            // InternalImperativeOCL.g:21346:2: rule__IfExpCS__OwnedConditionAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IfExpCS__OwnedConditionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedConditionAlternatives_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__OwnedConditionAssignment_1"


    // $ANTLR start "rule__IfExpCS__OwnedThenExpressionAssignment_3"
    // InternalImperativeOCL.g:21355:1: rule__IfExpCS__OwnedThenExpressionAssignment_3 : ( ruleExpCS ) ;
    public final void rule__IfExpCS__OwnedThenExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21359:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21360:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21360:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21361:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__OwnedThenExpressionAssignment_3"


    // $ANTLR start "rule__IfExpCS__OwnedIfThenExpressionsAssignment_4"
    // InternalImperativeOCL.g:21370:1: rule__IfExpCS__OwnedIfThenExpressionsAssignment_4 : ( ruleElseIfThenExpCS ) ;
    public final void rule__IfExpCS__OwnedIfThenExpressionsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21374:1: ( ( ruleElseIfThenExpCS ) )
            // InternalImperativeOCL.g:21375:1: ( ruleElseIfThenExpCS )
            {
            // InternalImperativeOCL.g:21375:1: ( ruleElseIfThenExpCS )
            // InternalImperativeOCL.g:21376:1: ruleElseIfThenExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__OwnedIfThenExpressionsAssignment_4"


    // $ANTLR start "rule__IfExpCS__OwnedElseExpressionAssignment_6"
    // InternalImperativeOCL.g:21385:1: rule__IfExpCS__OwnedElseExpressionAssignment_6 : ( ruleExpCS ) ;
    public final void rule__IfExpCS__OwnedElseExpressionAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21389:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21390:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21390:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21391:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfExpCS__OwnedElseExpressionAssignment_6"


    // $ANTLR start "rule__ElseIfThenExpCS__OwnedConditionAssignment_1"
    // InternalImperativeOCL.g:21400:1: rule__ElseIfThenExpCS__OwnedConditionAssignment_1 : ( ruleExpCS ) ;
    public final void rule__ElseIfThenExpCS__OwnedConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21404:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21405:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21405:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21406:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__OwnedConditionAssignment_1"


    // $ANTLR start "rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3"
    // InternalImperativeOCL.g:21415:1: rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3 : ( ruleExpCS ) ;
    public final void rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21419:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21420:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21420:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21421:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3"


    // $ANTLR start "rule__LetExpCS__OwnedVariablesAssignment_1"
    // InternalImperativeOCL.g:21430:1: rule__LetExpCS__OwnedVariablesAssignment_1 : ( ruleLetVariableCS ) ;
    public final void rule__LetExpCS__OwnedVariablesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21434:1: ( ( ruleLetVariableCS ) )
            // InternalImperativeOCL.g:21435:1: ( ruleLetVariableCS )
            {
            // InternalImperativeOCL.g:21435:1: ( ruleLetVariableCS )
            // InternalImperativeOCL.g:21436:1: ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__OwnedVariablesAssignment_1"


    // $ANTLR start "rule__LetExpCS__OwnedVariablesAssignment_2_1"
    // InternalImperativeOCL.g:21445:1: rule__LetExpCS__OwnedVariablesAssignment_2_1 : ( ruleLetVariableCS ) ;
    public final void rule__LetExpCS__OwnedVariablesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21449:1: ( ( ruleLetVariableCS ) )
            // InternalImperativeOCL.g:21450:1: ( ruleLetVariableCS )
            {
            // InternalImperativeOCL.g:21450:1: ( ruleLetVariableCS )
            // InternalImperativeOCL.g:21451:1: ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__OwnedVariablesAssignment_2_1"


    // $ANTLR start "rule__LetExpCS__OwnedInExpressionAssignment_4"
    // InternalImperativeOCL.g:21460:1: rule__LetExpCS__OwnedInExpressionAssignment_4 : ( ruleExpCS ) ;
    public final void rule__LetExpCS__OwnedInExpressionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21464:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21465:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21465:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21466:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetExpCS__OwnedInExpressionAssignment_4"


    // $ANTLR start "rule__LetVariableCS__NameAssignment_0"
    // InternalImperativeOCL.g:21475:1: rule__LetVariableCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__LetVariableCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21479:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:21480:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:21480:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:21481:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__NameAssignment_0"


    // $ANTLR start "rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1"
    // InternalImperativeOCL.g:21490:1: rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1 : ( ruleRoundBracketedClauseCS ) ;
    public final void rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21494:1: ( ( ruleRoundBracketedClauseCS ) )
            // InternalImperativeOCL.g:21495:1: ( ruleRoundBracketedClauseCS )
            {
            // InternalImperativeOCL.g:21495:1: ( ruleRoundBracketedClauseCS )
            // InternalImperativeOCL.g:21496:1: ruleRoundBracketedClauseCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1"


    // $ANTLR start "rule__LetVariableCS__OwnedTypeAssignment_2_1"
    // InternalImperativeOCL.g:21505:1: rule__LetVariableCS__OwnedTypeAssignment_2_1 : ( ruleTypeExpCS ) ;
    public final void rule__LetVariableCS__OwnedTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21509:1: ( ( ruleTypeExpCS ) )
            // InternalImperativeOCL.g:21510:1: ( ruleTypeExpCS )
            {
            // InternalImperativeOCL.g:21510:1: ( ruleTypeExpCS )
            // InternalImperativeOCL.g:21511:1: ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__OwnedTypeAssignment_2_1"


    // $ANTLR start "rule__LetVariableCS__OwnedInitExpressionAssignment_4"
    // InternalImperativeOCL.g:21520:1: rule__LetVariableCS__OwnedInitExpressionAssignment_4 : ( ruleExpCS ) ;
    public final void rule__LetVariableCS__OwnedInitExpressionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21524:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21525:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21525:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21526:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LetVariableCS__OwnedInitExpressionAssignment_4"


    // $ANTLR start "rule__NestedExpCS__OwnedExpressionAssignment_1"
    // InternalImperativeOCL.g:21535:1: rule__NestedExpCS__OwnedExpressionAssignment_1 : ( ruleExpCS ) ;
    public final void rule__NestedExpCS__OwnedExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21539:1: ( ( ruleExpCS ) )
            // InternalImperativeOCL.g:21540:1: ( ruleExpCS )
            {
            // InternalImperativeOCL.g:21540:1: ( ruleExpCS )
            // InternalImperativeOCL.g:21541:1: ruleExpCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpCS__OwnedExpressionAssignment_1"


    // $ANTLR start "rule__MultiplicityBoundsCS__LowerBoundAssignment_0"
    // InternalImperativeOCL.g:21550:1: rule__MultiplicityBoundsCS__LowerBoundAssignment_0 : ( ruleLOWER ) ;
    public final void rule__MultiplicityBoundsCS__LowerBoundAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21554:1: ( ( ruleLOWER ) )
            // InternalImperativeOCL.g:21555:1: ( ruleLOWER )
            {
            // InternalImperativeOCL.g:21555:1: ( ruleLOWER )
            // InternalImperativeOCL.g:21556:1: ruleLOWER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLOWER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__LowerBoundAssignment_0"


    // $ANTLR start "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1"
    // InternalImperativeOCL.g:21565:1: rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1 : ( ruleUPPER ) ;
    public final void rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21569:1: ( ( ruleUPPER ) )
            // InternalImperativeOCL.g:21570:1: ( ruleUPPER )
            {
            // InternalImperativeOCL.g:21570:1: ( ruleUPPER )
            // InternalImperativeOCL.g:21571:1: ruleUPPER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUPPER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1"


    // $ANTLR start "rule__MultiplicityCS__IsNullFreeAssignment_2_1"
    // InternalImperativeOCL.g:21580:1: rule__MultiplicityCS__IsNullFreeAssignment_2_1 : ( ( '|1' ) ) ;
    public final void rule__MultiplicityCS__IsNullFreeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21584:1: ( ( ( '|1' ) ) )
            // InternalImperativeOCL.g:21585:1: ( ( '|1' ) )
            {
            // InternalImperativeOCL.g:21585:1: ( ( '|1' ) )
            // InternalImperativeOCL.g:21586:1: ( '|1' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());
            }
            // InternalImperativeOCL.g:21587:1: ( '|1' )
            // InternalImperativeOCL.g:21588:1: '|1'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());
            }
            match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityCS__IsNullFreeAssignment_2_1"


    // $ANTLR start "rule__MultiplicityStringCS__StringBoundsAssignment"
    // InternalImperativeOCL.g:21603:1: rule__MultiplicityStringCS__StringBoundsAssignment : ( ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 ) ) ;
    public final void rule__MultiplicityStringCS__StringBoundsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21607:1: ( ( ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 ) ) )
            // InternalImperativeOCL.g:21608:1: ( ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 ) )
            {
            // InternalImperativeOCL.g:21608:1: ( ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 ) )
            // InternalImperativeOCL.g:21609:1: ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0());
            }
            // InternalImperativeOCL.g:21610:1: ( rule__MultiplicityStringCS__StringBoundsAlternatives_0 )
            // InternalImperativeOCL.g:21610:2: rule__MultiplicityStringCS__StringBoundsAlternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicityStringCS__StringBoundsAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicityStringCS__StringBoundsAssignment"


    // $ANTLR start "rule__PathNameCS__OwnedPathElementsAssignment_0"
    // InternalImperativeOCL.g:21619:1: rule__PathNameCS__OwnedPathElementsAssignment_0 : ( ruleFirstPathElementCS ) ;
    public final void rule__PathNameCS__OwnedPathElementsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21623:1: ( ( ruleFirstPathElementCS ) )
            // InternalImperativeOCL.g:21624:1: ( ruleFirstPathElementCS )
            {
            // InternalImperativeOCL.g:21624:1: ( ruleFirstPathElementCS )
            // InternalImperativeOCL.g:21625:1: ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__OwnedPathElementsAssignment_0"


    // $ANTLR start "rule__PathNameCS__OwnedPathElementsAssignment_1_1"
    // InternalImperativeOCL.g:21634:1: rule__PathNameCS__OwnedPathElementsAssignment_1_1 : ( ruleNextPathElementCS ) ;
    public final void rule__PathNameCS__OwnedPathElementsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21638:1: ( ( ruleNextPathElementCS ) )
            // InternalImperativeOCL.g:21639:1: ( ruleNextPathElementCS )
            {
            // InternalImperativeOCL.g:21639:1: ( ruleNextPathElementCS )
            // InternalImperativeOCL.g:21640:1: ruleNextPathElementCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathNameCS__OwnedPathElementsAssignment_1_1"


    // $ANTLR start "rule__FirstPathElementCS__ReferredElementAssignment"
    // InternalImperativeOCL.g:21649:1: rule__FirstPathElementCS__ReferredElementAssignment : ( ( ruleUnrestrictedName ) ) ;
    public final void rule__FirstPathElementCS__ReferredElementAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21653:1: ( ( ( ruleUnrestrictedName ) ) )
            // InternalImperativeOCL.g:21654:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalImperativeOCL.g:21654:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:21655:1: ( ruleUnrestrictedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
            }
            // InternalImperativeOCL.g:21656:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:21657:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementUnrestrictedNameParserRuleCall_0_1());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementUnrestrictedNameParserRuleCall_0_1());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FirstPathElementCS__ReferredElementAssignment"


    // $ANTLR start "rule__NextPathElementCS__ReferredElementAssignment"
    // InternalImperativeOCL.g:21668:1: rule__NextPathElementCS__ReferredElementAssignment : ( ( ruleUnreservedName ) ) ;
    public final void rule__NextPathElementCS__ReferredElementAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21672:1: ( ( ( ruleUnreservedName ) ) )
            // InternalImperativeOCL.g:21673:1: ( ( ruleUnreservedName ) )
            {
            // InternalImperativeOCL.g:21673:1: ( ( ruleUnreservedName ) )
            // InternalImperativeOCL.g:21674:1: ( ruleUnreservedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
            }
            // InternalImperativeOCL.g:21675:1: ( ruleUnreservedName )
            // InternalImperativeOCL.g:21676:1: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementUnreservedNameParserRuleCall_0_1());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementUnreservedNameParserRuleCall_0_1());
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NextPathElementCS__ReferredElementAssignment"


    // $ANTLR start "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0"
    // InternalImperativeOCL.g:21687:1: rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0 : ( ruleTemplateParameterSubstitutionCS ) ;
    public final void rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21691:1: ( ( ruleTemplateParameterSubstitutionCS ) )
            // InternalImperativeOCL.g:21692:1: ( ruleTemplateParameterSubstitutionCS )
            {
            // InternalImperativeOCL.g:21692:1: ( ruleTemplateParameterSubstitutionCS )
            // InternalImperativeOCL.g:21693:1: ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0"


    // $ANTLR start "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1"
    // InternalImperativeOCL.g:21702:1: rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1 : ( ruleTemplateParameterSubstitutionCS ) ;
    public final void rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21706:1: ( ( ruleTemplateParameterSubstitutionCS ) )
            // InternalImperativeOCL.g:21707:1: ( ruleTemplateParameterSubstitutionCS )
            {
            // InternalImperativeOCL.g:21707:1: ( ruleTemplateParameterSubstitutionCS )
            // InternalImperativeOCL.g:21708:1: ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1"


    // $ANTLR start "rule__TemplateBindingCS__OwnedMultiplicityAssignment_2"
    // InternalImperativeOCL.g:21717:1: rule__TemplateBindingCS__OwnedMultiplicityAssignment_2 : ( ruleMultiplicityCS ) ;
    public final void rule__TemplateBindingCS__OwnedMultiplicityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21721:1: ( ( ruleMultiplicityCS ) )
            // InternalImperativeOCL.g:21722:1: ( ruleMultiplicityCS )
            {
            // InternalImperativeOCL.g:21722:1: ( ruleMultiplicityCS )
            // InternalImperativeOCL.g:21723:1: ruleMultiplicityCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateBindingCS__OwnedMultiplicityAssignment_2"


    // $ANTLR start "rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment"
    // InternalImperativeOCL.g:21732:1: rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment : ( ruleTypeRefCS ) ;
    public final void rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21736:1: ( ( ruleTypeRefCS ) )
            // InternalImperativeOCL.g:21737:1: ( ruleTypeRefCS )
            {
            // InternalImperativeOCL.g:21737:1: ( ruleTypeRefCS )
            // InternalImperativeOCL.g:21738:1: ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment"


    // $ANTLR start "rule__TypeParameterCS__NameAssignment_0"
    // InternalImperativeOCL.g:21749:1: rule__TypeParameterCS__NameAssignment_0 : ( ruleUnrestrictedName ) ;
    public final void rule__TypeParameterCS__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21753:1: ( ( ruleUnrestrictedName ) )
            // InternalImperativeOCL.g:21754:1: ( ruleUnrestrictedName )
            {
            // InternalImperativeOCL.g:21754:1: ( ruleUnrestrictedName )
            // InternalImperativeOCL.g:21755:1: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__NameAssignment_0"


    // $ANTLR start "rule__TypeParameterCS__OwnedExtendsAssignment_1_1"
    // InternalImperativeOCL.g:21764:1: rule__TypeParameterCS__OwnedExtendsAssignment_1_1 : ( ruleTypedRefCS ) ;
    public final void rule__TypeParameterCS__OwnedExtendsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21768:1: ( ( ruleTypedRefCS ) )
            // InternalImperativeOCL.g:21769:1: ( ruleTypedRefCS )
            {
            // InternalImperativeOCL.g:21769:1: ( ruleTypedRefCS )
            // InternalImperativeOCL.g:21770:1: ruleTypedRefCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__OwnedExtendsAssignment_1_1"


    // $ANTLR start "rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1"
    // InternalImperativeOCL.g:21779:1: rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1 : ( ruleTypedRefCS ) ;
    public final void rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21783:1: ( ( ruleTypedRefCS ) )
            // InternalImperativeOCL.g:21784:1: ( ruleTypedRefCS )
            {
            // InternalImperativeOCL.g:21784:1: ( ruleTypedRefCS )
            // InternalImperativeOCL.g:21785:1: ruleTypedRefCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1"


    // $ANTLR start "rule__TypedTypeRefCS__OwnedPathNameAssignment_0"
    // InternalImperativeOCL.g:21794:1: rule__TypedTypeRefCS__OwnedPathNameAssignment_0 : ( rulePathNameCS ) ;
    public final void rule__TypedTypeRefCS__OwnedPathNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21798:1: ( ( rulePathNameCS ) )
            // InternalImperativeOCL.g:21799:1: ( rulePathNameCS )
            {
            // InternalImperativeOCL.g:21799:1: ( rulePathNameCS )
            // InternalImperativeOCL.g:21800:1: rulePathNameCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePathNameCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__OwnedPathNameAssignment_0"


    // $ANTLR start "rule__TypedTypeRefCS__OwnedBindingAssignment_1_1"
    // InternalImperativeOCL.g:21809:1: rule__TypedTypeRefCS__OwnedBindingAssignment_1_1 : ( ruleTemplateBindingCS ) ;
    public final void rule__TypedTypeRefCS__OwnedBindingAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21813:1: ( ( ruleTemplateBindingCS ) )
            // InternalImperativeOCL.g:21814:1: ( ruleTemplateBindingCS )
            {
            // InternalImperativeOCL.g:21814:1: ( ruleTemplateBindingCS )
            // InternalImperativeOCL.g:21815:1: ruleTemplateBindingCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTypeRefCS__OwnedBindingAssignment_1_1"


    // $ANTLR start "rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1"
    // InternalImperativeOCL.g:21824:1: rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1 : ( ruleTypedRefCS ) ;
    public final void rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();

        try {
            // InternalImperativeOCL.g:21828:1: ( ( ruleTypedRefCS ) )
            // InternalImperativeOCL.g:21829:1: ( ruleTypedRefCS )
            {
            // InternalImperativeOCL.g:21829:1: ( ruleTypedRefCS )
            // InternalImperativeOCL.g:21830:1: ruleTypedRefCS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1"

    // $ANTLR start synpred1_InternalImperativeOCL
    public final void synpred1_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:1855:2: ( rule__StringLiteralExpCS__SegmentsAssignment )
        // InternalImperativeOCL.g:1855:2: rule__StringLiteralExpCS__SegmentsAssignment
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__StringLiteralExpCS__SegmentsAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalImperativeOCL

    // $ANTLR start synpred8_InternalImperativeOCL
    public final void synpred8_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:3272:6: ( ( ruleIfExpCS ) )
        // InternalImperativeOCL.g:3272:6: ( ruleIfExpCS )
        {
        // InternalImperativeOCL.g:3272:6: ( ruleIfExpCS )
        // InternalImperativeOCL.g:3273:1: ruleIfExpCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIfExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalImperativeOCL

    // $ANTLR start synpred11_InternalImperativeOCL
    public final void synpred11_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:3290:6: ( ( ruleTupleLiteralExpCS ) )
        // InternalImperativeOCL.g:3290:6: ( ruleTupleLiteralExpCS )
        {
        // InternalImperativeOCL.g:3290:6: ( ruleTupleLiteralExpCS )
        // InternalImperativeOCL.g:3291:1: ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalImperativeOCL

    // $ANTLR start synpred12_InternalImperativeOCL
    public final void synpred12_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:3296:6: ( ( ruleMapLiteralExpCS ) )
        // InternalImperativeOCL.g:3296:6: ( ruleMapLiteralExpCS )
        {
        // InternalImperativeOCL.g:3296:6: ( ruleMapLiteralExpCS )
        // InternalImperativeOCL.g:3297:1: ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalImperativeOCL

    // $ANTLR start synpred13_InternalImperativeOCL
    public final void synpred13_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:3302:6: ( ( ruleCollectionLiteralExpCS ) )
        // InternalImperativeOCL.g:3302:6: ( ruleCollectionLiteralExpCS )
        {
        // InternalImperativeOCL.g:3302:6: ( ruleCollectionLiteralExpCS )
        // InternalImperativeOCL.g:3303:1: ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalImperativeOCL

    // $ANTLR start synpred15_InternalImperativeOCL
    public final void synpred15_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:3314:6: ( ( ruleImperativeExpCS ) )
        // InternalImperativeOCL.g:3314:6: ( ruleImperativeExpCS )
        {
        // InternalImperativeOCL.g:3314:6: ( ruleImperativeExpCS )
        // InternalImperativeOCL.g:3315:1: ruleImperativeExpCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpCSAccess().getImperativeExpCSParserRuleCall_8());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleImperativeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalImperativeOCL

    // $ANTLR start synpred85_InternalImperativeOCL
    public final void synpred85_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:4151:6: ( ( ruleTypeLiteralCS ) )
        // InternalImperativeOCL.g:4151:6: ( ruleTypeLiteralCS )
        {
        // InternalImperativeOCL.g:4151:6: ( ruleTypeLiteralCS )
        // InternalImperativeOCL.g:4152:1: ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalImperativeOCL

    // $ANTLR start synpred86_InternalImperativeOCL
    public final void synpred86_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:4173:1: ( ( ( rule__ExpCS__Group_0__0 ) ) )
        // InternalImperativeOCL.g:4173:1: ( ( rule__ExpCS__Group_0__0 ) )
        {
        // InternalImperativeOCL.g:4173:1: ( ( rule__ExpCS__Group_0__0 ) )
        // InternalImperativeOCL.g:4174:1: ( rule__ExpCS__Group_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpCSAccess().getGroup_0());
        }
        // InternalImperativeOCL.g:4175:1: ( rule__ExpCS__Group_0__0 )
        // InternalImperativeOCL.g:4175:2: rule__ExpCS__Group_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ExpCS__Group_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalImperativeOCL

    // $ANTLR start synpred107_InternalImperativeOCL
    public final void synpred107_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:4994:2: ( rule__AssertExpCS__Group_3__0 )
        // InternalImperativeOCL.g:4994:2: rule__AssertExpCS__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AssertExpCS__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalImperativeOCL

    // $ANTLR start synpred108_InternalImperativeOCL
    public final void synpred108_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:5180:2: ( rule__AssignExpCS__Group_3__0 )
        // InternalImperativeOCL.g:5180:2: rule__AssignExpCS__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AssignExpCS__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_InternalImperativeOCL

    // $ANTLR start synpred117_InternalImperativeOCL
    public final void synpred117_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:6715:2: ( rule__ForExpCS__Group_2__0 )
        // InternalImperativeOCL.g:6715:2: rule__ForExpCS__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ForExpCS__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalImperativeOCL

    // $ANTLR start synpred121_InternalImperativeOCL
    public final void synpred121_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:7503:2: ( rule__ImperativeIterateExpCS__Group_2_2__0 )
        // InternalImperativeOCL.g:7503:2: rule__ImperativeIterateExpCS__Group_2_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ImperativeIterateExpCS__Group_2_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalImperativeOCL

    // $ANTLR start synpred131_InternalImperativeOCL
    public final void synpred131_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:9182:2: ( rule__ReturnExpCS__OwnedValueAssignment_2 )
        // InternalImperativeOCL.g:9182:2: rule__ReturnExpCS__OwnedValueAssignment_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ReturnExpCS__OwnedValueAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred131_InternalImperativeOCL

    // $ANTLR start synpred132_InternalImperativeOCL
    public final void synpred132_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:9275:2: ( rule__SwitchExpCS__Group_0_2__0 )
        // InternalImperativeOCL.g:9275:2: rule__SwitchExpCS__Group_0_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SwitchExpCS__Group_0_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalImperativeOCL

    // $ANTLR start synpred133_InternalImperativeOCL
    public final void synpred133_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:9304:2: ( rule__SwitchExpCS__Group_0_3__0 )
        // InternalImperativeOCL.g:9304:2: rule__SwitchExpCS__Group_0_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SwitchExpCS__Group_0_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalImperativeOCL

    // $ANTLR start synpred134_InternalImperativeOCL
    public final void synpred134_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:9333:2: ( 'endif' )
        // InternalImperativeOCL.g:9333:2: 'endif'
        {
        match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalImperativeOCL

    // $ANTLR start synpred140_InternalImperativeOCL
    public final void synpred140_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:10275:2: ( rule__VarDeclarationCS__Group_1__0 )
        // InternalImperativeOCL.g:10275:2: rule__VarDeclarationCS__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__VarDeclarationCS__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalImperativeOCL

    // $ANTLR start synpred141_InternalImperativeOCL
    public final void synpred141_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:10303:2: ( rule__VarDeclarationCS__Group_2__0 )
        // InternalImperativeOCL.g:10303:2: rule__VarDeclarationCS__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__VarDeclarationCS__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalImperativeOCL

    // $ANTLR start synpred143_InternalImperativeOCL
    public final void synpred143_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:10645:2: ( rule__VarsInitializationCS__Group_2__0 )
        // InternalImperativeOCL.g:10645:2: rule__VarsInitializationCS__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__VarsInitializationCS__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalImperativeOCL

    // $ANTLR start synpred144_InternalImperativeOCL
    public final void synpred144_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:10805:2: ( rule__WhileExpCS__Group_2__0 )
        // InternalImperativeOCL.g:10805:2: rule__WhileExpCS__Group_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__WhileExpCS__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalImperativeOCL

    // $ANTLR start synpred146_InternalImperativeOCL
    public final void synpred146_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:11156:2: ( rule__CollectionTypeCS__Group_1__0 )
        // InternalImperativeOCL.g:11156:2: rule__CollectionTypeCS__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__CollectionTypeCS__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred146_InternalImperativeOCL

    // $ANTLR start synpred148_InternalImperativeOCL
    public final void synpred148_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:11344:2: ( rule__MapTypeCS__Group_1__0 )
        // InternalImperativeOCL.g:11344:2: rule__MapTypeCS__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__MapTypeCS__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalImperativeOCL

    // $ANTLR start synpred149_InternalImperativeOCL
    public final void synpred149_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:11565:2: ( rule__TupleTypeCS__Group_1__0 )
        // InternalImperativeOCL.g:11565:2: rule__TupleTypeCS__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__TupleTypeCS__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalImperativeOCL

    // $ANTLR start synpred163_InternalImperativeOCL
    public final void synpred163_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:13989:2: ( rule__TypeNameExpCS__Group_1__0 )
        // InternalImperativeOCL.g:13989:2: rule__TypeNameExpCS__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__TypeNameExpCS__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalImperativeOCL

    // $ANTLR start synpred164_InternalImperativeOCL
    public final void synpred164_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:14050:2: ( rule__TypeNameExpCS__Group_1_1__0 )
        // InternalImperativeOCL.g:14050:2: rule__TypeNameExpCS__Group_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__TypeNameExpCS__Group_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred164_InternalImperativeOCL

    // $ANTLR start synpred166_InternalImperativeOCL
    public final void synpred166_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:14268:2: ( rule__ExpCS__Group_0_1__0 )
        // InternalImperativeOCL.g:14268:2: rule__ExpCS__Group_0_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ExpCS__Group_0_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalImperativeOCL

    // $ANTLR start synpred168_InternalImperativeOCL
    public final void synpred168_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:14641:2: ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )
        // InternalImperativeOCL.g:14641:2: rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred168_InternalImperativeOCL

    // $ANTLR start synpred169_InternalImperativeOCL
    public final void synpred169_InternalImperativeOCL_fragment() throws RecognitionException {
        // InternalImperativeOCL.g:14670:2: ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )
        // InternalImperativeOCL.g:14670:2: rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred169_InternalImperativeOCL

    // Delegated rules

    public final boolean synpred12_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalImperativeOCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalImperativeOCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    static final String dfa_1s = "\72\uffff";
    static final String dfa_2s = "\1\4\1\uffff\1\0\11\uffff\7\0\37\uffff\2\0\6\uffff";
    static final String dfa_3s = "\1\164\1\uffff\1\0\11\uffff\7\0\37\uffff\2\0\6\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\uffff\1\3\1\4\16\uffff\1\10\1\11\40\uffff\1\2\1\5\1\6\1\7\1\12";
    static final String dfa_5s = "\2\uffff\1\0\11\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\37\uffff\1\10\1\11\6\uffff}>";
    static final String[] dfa_6s = {
            "\3\4\1\62\1\63\7\uffff\5\24\2\uffff\1\4\20\uffff\1\15\1\14\10\24\1\16\1\17\1\20\1\21\1\22\10\uffff\1\24\1\1\1\uffff\1\24\1\uffff\1\24\2\uffff\1\24\1\uffff\1\24\2\uffff\3\24\2\uffff\1\24\1\uffff\1\24\1\uffff\2\24\3\uffff\1\24\1\uffff\3\24\2\uffff\1\23\1\uffff\2\4\4\uffff\1\2\3\uffff\1\3\3\uffff\2\24\2\4",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "3261:1: rule__PrimaryExpCS__Alternatives : ( ( ruleNestedExpCS ) | ( ruleIfExpCS ) | ( ruleSelfExpCS ) | ( rulePrimitiveLiteralExpCS ) | ( ruleTupleLiteralExpCS ) | ( ruleMapLiteralExpCS ) | ( ruleCollectionLiteralExpCS ) | ( ruleLambdaLiteralExpCS ) | ( ruleImperativeExpCS ) | ( ruleNameExpCS ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA3_2 = input.LA(1);


                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalImperativeOCL()) ) {s = 53;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA3_12 = input.LA(1);


                        int index3_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalImperativeOCL()) ) {s = 54;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA3_13 = input.LA(1);


                        int index3_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalImperativeOCL()) ) {s = 55;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA3_14 = input.LA(1);


                        int index3_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA3_15 = input.LA(1);


                        int index3_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA3_16 = input.LA(1);


                        int index3_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA3_17 = input.LA(1);


                        int index3_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 :
                        int LA3_18 = input.LA(1);


                        int index3_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}


                        input.seek(index3_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 :
                        int LA3_50 = input.LA(1);


                        int index3_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 57;}


                        input.seek(index3_50);
                        if ( s>=0 ) return s;
                        break;
                    case 9 :
                        int LA3_51 = input.LA(1);


                        int index3_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 57;}


                        input.seek(index3_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\26\uffff";
    static final String dfa_8s = "\1\7\10\uffff\2\100\13\uffff";
    static final String dfa_9s = "\1\162\10\uffff\2\111\13\uffff";
    static final String dfa_10s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\11\1\12";
    static final String dfa_11s = "\26\uffff}>";
    static final String[] dfa_12s = {
            "\2\22\7\uffff\1\16\4\20\23\uffff\17\13\10\uffff\1\11\2\uffff\1\12\1\uffff\1\2\2\uffff\1\3\1\uffff\1\1\2\uffff\1\15\1\4\1\1\2\uffff\1\5\1\uffff\1\6\1\uffff\1\7\1\14\3\uffff\1\21\1\uffff\1\23\1\10\1\17\12\uffff\1\21\7\uffff\1\16\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\13\10\uffff\1\24",
            "\1\13\10\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "3331:1: rule__ImperativeExpCS__Alternatives : ( ( ruleExpressionBlockCS ) | ( ruleAssertExpCS ) | ( ruleBreakExpCS ) | ( ruleContinueExpCS ) | ( ruleInstantiationExpCS ) | ( ruleLogExpCS ) | ( ruleRaiseExpCS ) | ( ruleVarsInitializationCS ) | ( ruleListLiteralExpCS ) | ( ruleDictLiteralExpCS ) | ( ruleTypeLiteralExpCS ) | ( ruleReturnExpCS ) | ( ruleComputeExpCS ) | ( ruleForExpCS ) | ( ruleWhileExpCS ) | ( ruleImperativeIterateExpCS ) | ( ruleSwitchExpCS ) | ( ruleAssignExpCS ) | ( ruleTryExpCS ) );";
        }
    }
    static final String dfa_13s = "\25\uffff";
    static final String dfa_14s = "\1\7\12\uffff\5\0\5\uffff";
    static final String dfa_15s = "\1\102\12\uffff\5\0\5\uffff";
    static final String dfa_16s = "\1\uffff\1\1\1\uffff\1\2\20\uffff\1\3";
    static final String dfa_17s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] dfa_18s = {
            "\2\1\37\uffff\12\3\1\13\1\14\1\15\1\16\1\17\10\uffff\1\3\2\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "4140:1: rule__TypeExpWithoutMultiplicityCS__Alternatives : ( ( ruleTypeNameExpCS ) | ( ruleTypeLiteralCS ) | ( ruleCollectionPatternCS ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA24_11 = input.LA(1);


                        int index24_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 20;}


                        input.seek(index24_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA24_12 = input.LA(1);


                        int index24_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 20;}


                        input.seek(index24_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA24_13 = input.LA(1);


                        int index24_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 20;}


                        input.seek(index24_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA24_14 = input.LA(1);


                        int index24_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 20;}


                        input.seek(index24_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA24_15 = input.LA(1);


                        int index24_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 20;}


                        input.seek(index24_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\70\uffff";
    static final String dfa_20s = "\1\4\2\0\65\uffff";
    static final String dfa_21s = "\1\164\2\0\65\uffff";
    static final String dfa_22s = "\3\uffff\1\1\63\uffff\1\2";
    static final String dfa_23s = "\1\uffff\1\0\1\1\65\uffff}>";
    static final String[] dfa_24s = {
            "\5\3\7\uffff\5\3\1\1\1\2\1\3\20\uffff\17\3\10\uffff\2\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\2\uffff\3\3\2\uffff\1\3\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\2\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\67\1\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "4168:1: rule__ExpCS__Alternatives : ( ( ( rule__ExpCS__Group_0__0 ) ) | ( rulePrefixedLetExpCS ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA25_1 = input.LA(1);


                        int index25_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 55;}


                        input.seek(index25_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA25_2 = input.LA(1);


                        int index25_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 55;}


                        input.seek(index25_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\135\uffff";
    static final String dfa_26s = "\1\70\134\uffff";
    static final String dfa_27s = "\1\4\67\0\45\uffff";
    static final String dfa_28s = "\1\164\67\0\45\uffff";
    static final String dfa_29s = "\70\uffff\1\2\43\uffff\1\1";
    static final String dfa_30s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\45\uffff}>";
    static final String[] dfa_31s = {
            "\1\6\1\7\1\10\1\64\1\65\7\uffff\1\53\1\57\1\60\1\61\1\62\1\1\1\2\1\13\20\70\1\17\1\16\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\20\1\21\1\22\1\23\1\24\5\uffff\1\70\2\uffff\1\37\1\3\1\70\1\40\1\70\1\30\2\70\1\31\1\uffff\1\27\2\70\1\52\1\32\1\26\2\70\1\33\1\uffff\1\34\1\uffff\1\35\1\51\3\70\1\63\1\70\1\66\1\36\1\55\1\70\1\uffff\1\25\1\70\1\14\1\15\2\uffff\2\70\1\4\2\70\1\67\1\5\3\uffff\1\54\1\56\1\11\1\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "9182:1: ( rule__ReturnExpCS__OwnedValueAssignment_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA66_1 = input.LA(1);


                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA66_2 = input.LA(1);


                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA66_3 = input.LA(1);


                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA66_4 = input.LA(1);


                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA66_5 = input.LA(1);


                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA66_6 = input.LA(1);


                        int index66_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA66_7 = input.LA(1);


                        int index66_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 :
                        int LA66_8 = input.LA(1);


                        int index66_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 :
                        int LA66_9 = input.LA(1);


                        int index66_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 :
                        int LA66_10 = input.LA(1);


                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 :
                        int LA66_11 = input.LA(1);


                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 :
                        int LA66_12 = input.LA(1);


                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 :
                        int LA66_13 = input.LA(1);


                        int index66_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 :
                        int LA66_14 = input.LA(1);


                        int index66_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 :
                        int LA66_15 = input.LA(1);


                        int index66_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 :
                        int LA66_16 = input.LA(1);


                        int index66_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 :
                        int LA66_17 = input.LA(1);


                        int index66_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 :
                        int LA66_18 = input.LA(1);


                        int index66_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 :
                        int LA66_19 = input.LA(1);


                        int index66_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 :
                        int LA66_20 = input.LA(1);


                        int index66_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 :
                        int LA66_21 = input.LA(1);


                        int index66_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 :
                        int LA66_22 = input.LA(1);


                        int index66_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 :
                        int LA66_23 = input.LA(1);


                        int index66_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 :
                        int LA66_24 = input.LA(1);


                        int index66_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 :
                        int LA66_25 = input.LA(1);


                        int index66_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 :
                        int LA66_26 = input.LA(1);


                        int index66_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 :
                        int LA66_27 = input.LA(1);


                        int index66_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 :
                        int LA66_28 = input.LA(1);


                        int index66_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 :
                        int LA66_29 = input.LA(1);


                        int index66_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 :
                        int LA66_30 = input.LA(1);


                        int index66_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 :
                        int LA66_31 = input.LA(1);


                        int index66_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 :
                        int LA66_32 = input.LA(1);


                        int index66_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 :
                        int LA66_33 = input.LA(1);


                        int index66_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 :
                        int LA66_34 = input.LA(1);


                        int index66_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 :
                        int LA66_35 = input.LA(1);


                        int index66_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 :
                        int LA66_36 = input.LA(1);


                        int index66_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 :
                        int LA66_37 = input.LA(1);


                        int index66_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 :
                        int LA66_38 = input.LA(1);


                        int index66_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 :
                        int LA66_39 = input.LA(1);


                        int index66_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 :
                        int LA66_40 = input.LA(1);


                        int index66_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 :
                        int LA66_41 = input.LA(1);


                        int index66_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 :
                        int LA66_42 = input.LA(1);


                        int index66_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 :
                        int LA66_43 = input.LA(1);


                        int index66_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 :
                        int LA66_44 = input.LA(1);


                        int index66_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 :
                        int LA66_45 = input.LA(1);


                        int index66_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 :
                        int LA66_46 = input.LA(1);


                        int index66_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 :
                        int LA66_47 = input.LA(1);


                        int index66_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 :
                        int LA66_48 = input.LA(1);


                        int index66_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 :
                        int LA66_49 = input.LA(1);


                        int index66_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 :
                        int LA66_50 = input.LA(1);


                        int index66_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 :
                        int LA66_51 = input.LA(1);


                        int index66_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 :
                        int LA66_52 = input.LA(1);


                        int index66_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 :
                        int LA66_53 = input.LA(1);


                        int index66_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 :
                        int LA66_54 = input.LA(1);


                        int index66_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 :
                        int LA66_55 = input.LA(1);


                        int index66_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalImperativeOCL()) ) {s = 92;}

                        else if ( (true) ) {s = 56;}


                        input.seek(index66_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\136\uffff";
    static final String dfa_33s = "\1\2\135\uffff";
    static final String dfa_34s = "\1\4\1\0\134\uffff";
    static final String dfa_35s = "\1\164\1\0\134\uffff";
    static final String dfa_36s = "\2\uffff\1\2\132\uffff\1\1";
    static final String dfa_37s = "\1\uffff\1\0\134\uffff}>";
    static final String[] dfa_38s = {
            "\5\2\7\uffff\47\2\5\uffff\2\2\1\uffff\11\2\1\uffff\2\2\1\1\6\2\1\uffff\1\2\1\uffff\13\2\1\uffff\4\2\2\uffff\7\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "10275:1: ( rule__VarDeclarationCS__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA75_1 = input.LA(1);


                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalImperativeOCL()) ) {s = 93;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\4\134\uffff";
    static final String dfa_40s = "\1\4\2\0\132\uffff";
    static final String dfa_41s = "\1\164\2\0\132\uffff";
    static final String dfa_42s = "\3\uffff\1\1\1\2\130\uffff";
    static final String dfa_43s = "\1\uffff\1\0\1\1\132\uffff}>";
    static final String[] dfa_44s = {
            "\5\4\7\uffff\16\4\1\1\30\4\5\uffff\1\2\1\3\1\uffff\11\4\1\uffff\11\4\1\uffff\1\4\1\uffff\13\4\1\uffff\4\4\2\uffff\7\4\3\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_25;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10303:1: ( rule__VarDeclarationCS__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA76_1 = input.LA(1);


                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}


                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA76_2 = input.LA(1);


                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalImperativeOCL()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}


                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\71\uffff";
    static final String dfa_46s = "\1\4\2\0\66\uffff";
    static final String dfa_47s = "\1\164\2\0\66\uffff";
    static final String dfa_48s = "\3\uffff\1\2\64\uffff\1\1";
    static final String dfa_49s = "\1\uffff\1\0\1\1\66\uffff}>";
    static final String[] dfa_50s = {
            "\3\3\1\1\1\2\7\uffff\10\3\20\uffff\17\3\10\uffff\2\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\2\uffff\3\3\2\uffff\1\3\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\2\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\2\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "10805:1: ( rule__WhileExpCS__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA79_1 = input.LA(1);


                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (true) ) {s = 3;}


                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA79_2 = input.LA(1);


                        int index79_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalImperativeOCL()) ) {s = 56;}

                        else if ( (true) ) {s = 3;}


                        input.seek(index79_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\141\uffff";
    static final String dfa_52s = "\1\2\140\uffff";
    static final String dfa_53s = "\1\4\1\0\137\uffff";
    static final String dfa_54s = "\1\164\1\0\137\uffff";
    static final String dfa_55s = "\2\uffff\1\2\135\uffff\1\1";
    static final String dfa_56s = "\1\uffff\1\0\137\uffff}>";
    static final String[] dfa_57s = {
            "\5\2\7\uffff\47\2\5\uffff\2\2\1\uffff\1\2\1\1\7\2\1\uffff\13\2\1\uffff\20\2\1\uffff\10\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "11156:1: ( rule__CollectionTypeCS__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA81_1 = input.LA(1);


                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred146_InternalImperativeOCL()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "11344:1: ( rule__MapTypeCS__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA83_1 = input.LA(1);


                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred148_InternalImperativeOCL()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\5\2\7\uffff\47\2\5\uffff\2\2\1\uffff\11\2\1\uffff\1\1\12\2\1\uffff\20\2\1\uffff\10\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "13989:1: ( rule__TypeNameExpCS__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA98_1 = input.LA(1);


                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalImperativeOCL()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "14050:1: ( rule__TypeNameExpCS__Group_1_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA99_1 = input.LA(1);


                        int index99_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalImperativeOCL()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index99_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\23\24\uffff";
    static final String dfa_60s = "\1\4\22\0\2\uffff";
    static final String dfa_61s = "\1\164\22\0\2\uffff";
    static final String dfa_62s = "\23\uffff\1\2\1\1";
    static final String dfa_63s = "\1\uffff\1\17\1\11\1\13\1\2\1\20\1\0\1\3\1\6\1\10\1\12\1\14\1\15\1\21\1\16\1\1\1\4\1\7\1\5\2\uffff}>";
    static final String[] dfa_64s = {
            "\5\23\7\uffff\5\23\1\4\1\23\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\17\23\5\uffff\1\23\2\uffff\11\23\1\uffff\11\23\1\uffff\1\23\1\uffff\13\23\1\uffff\4\23\2\uffff\7\23\3\uffff\4\23",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_13;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "14268:1: ( rule__ExpCS__Group_0_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA101_6 = input.LA(1);


                        int index101_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA101_15 = input.LA(1);


                        int index101_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA101_4 = input.LA(1);


                        int index101_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA101_7 = input.LA(1);


                        int index101_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA101_16 = input.LA(1);


                        int index101_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA101_18 = input.LA(1);


                        int index101_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_18);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA101_8 = input.LA(1);


                        int index101_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 :
                        int LA101_17 = input.LA(1);


                        int index101_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_17);
                        if ( s>=0 ) return s;
                        break;
                    case 8 :
                        int LA101_9 = input.LA(1);


                        int index101_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 :
                        int LA101_2 = input.LA(1);


                        int index101_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_2);
                        if ( s>=0 ) return s;
                        break;
                    case 10 :
                        int LA101_10 = input.LA(1);


                        int index101_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 :
                        int LA101_3 = input.LA(1);


                        int index101_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_3);
                        if ( s>=0 ) return s;
                        break;
                    case 12 :
                        int LA101_11 = input.LA(1);


                        int index101_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_11);
                        if ( s>=0 ) return s;
                        break;
                    case 13 :
                        int LA101_12 = input.LA(1);


                        int index101_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_12);
                        if ( s>=0 ) return s;
                        break;
                    case 14 :
                        int LA101_14 = input.LA(1);


                        int index101_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 :
                        int LA101_1 = input.LA(1);


                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
                    case 16 :
                        int LA101_5 = input.LA(1);


                        int index101_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_5);
                        if ( s>=0 ) return s;
                        break;
                    case 17 :
                        int LA101_13 = input.LA(1);


                        int index101_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalImperativeOCL()) ) {s = 20;}

                        else if ( (true) ) {s = 19;}


                        input.seek(index101_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\140\uffff";
    static final String dfa_66s = "\1\2\137\uffff";
    static final String dfa_67s = "\1\4\1\0\136\uffff";
    static final String dfa_68s = "\1\164\1\0\136\uffff";
    static final String dfa_69s = "\2\uffff\1\2\134\uffff\1\1";
    static final String dfa_70s = "\1\uffff\1\0\136\uffff}>";
    static final String[] dfa_71s = {
            "\5\2\7\uffff\47\2\5\uffff\4\2\1\1\7\2\1\uffff\13\2\1\uffff\13\2\1\uffff\4\2\2\uffff\7\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "14641:1: ( rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA103_1 = input.LA(1);


                        int index103_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalImperativeOCL()) ) {s = 95;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index103_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_72s = {
            "\5\2\7\uffff\47\2\5\uffff\14\2\1\uffff\1\1\12\2\1\uffff\13\2\1\uffff\4\2\2\uffff\7\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "14670:1: ( rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA104_1 = input.LA(1);


                        int index104_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred169_InternalImperativeOCL()) ) {s = 95;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index104_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000062L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x807FFF0000000180L,0x0000000000000004L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7295L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x7000000000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000AL});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7695L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x8E7FFF0000FF01F2L,0x001E321A746A7295L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000180L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000800070L,0x0018001800000400L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000800070L,0x0018001800000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004200L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040001L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7297L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7E95L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7A95L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000060L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0E00000000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000003800000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000201L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000400L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x807FFF00001F0180L,0x00060200746A7294L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x3000000040000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000180L,0x0000000000000002L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000008L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000408L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x000000FFFFA00000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000600000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x807FFF0000FF01F0L,0x001E221A746A7295L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000004000040201L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00000000000001E0L,0x0000000000000400L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x00000000000001E0L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x8E7FFF0000FF01F0L,0x001E321A746A7A97L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018008L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000008L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000800L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000080002000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000008L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000801L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000800010L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0100000002800010L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0080000000000000L,0x0020008000000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x007FFF0000000180L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000008L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0100000000000180L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
    }


}